{"version":3,"sources":["gauge.js"],"names":["ns","_get","object","property","receiver","Function","prototype","desc","Object","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","get","value","getter","call","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","length","err","sliceIterator","TypeError","_createClass","Constructor","protoProps","staticProps","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_toConsumableArray","arr2","from","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_classCallCheck","instance","vendorize","prop","window","global","vendors","s","capitalized","charAt","toUpperCase","substr","vendorProp","assign","firstSource","to","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","indexOf","searchElement","fromIndex","k","this","O","n","Math","abs","Infinity","max","fill","_value","relativeStart","min","relativeEnd","final","EventEmitter","event","_events","_len","args","_key","apply","_len2","handlers","_key2","_loop","handler","wrapper","off","on","concat","_handler","index","splice","addListener","removeListener","requestAnimationFrame","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","sin","acos","decycle","bounce","debounce","a","b","elastic","delastic","cos","PI","Animation","draw","end","_this","frame","cancel","start","performance","now","time","step","rule","duration","anim","progress","percent","animationTransformed","isFinite","isNaN","inProgress","id","DomObserver","node","tagName","toLowerCase","element","getAttribute","type","elements","document","getElementsByTagName","process","isObservable","mutationsObserved","MutationObserver","observe","bind","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","records","record","attributeName","isValidNode","oldValue","addedNodes","ii","ss","_this2","options","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","Type","observer","forEach","attr","disconnect","destroy","_prop","split","map","part","join","_options","update","test","e","camelCase","str","dashed","toDashed","readyState","addEventListener","attachEvent","GAUGES_NO_AUTO_INIT","domReady","traverse","SmartCanvas","pixelRatio","width","height","style","elementClone","cloneNode","context","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","save","maxRadius","collection","clearRect","onRedraw","scale","init","redraw","devicePixelRatio","canvas","matchMedia","GenericOptions","minValue","maxValue","units","exactTicks","majorTicks","minorTicks","strokeTicks","animatedValue","animateOnInit","title","borders","numbersMargin","listeners","valueInt","valueDec","majorTicksInt","majorTicksDec","animation","animationDuration","animationRule","colorPlate","colorPlateEnd","colorMajorTicks","colorMinorTicks","colorStrokeTicks","colorTitle","colorUnits","colorNumbers","colorNeedle","colorNeedleEnd","colorValueText","colorValueTextShadow","colorBorderShadow","colorBorderOuter","colorBorderOuterEnd","colorBorderMiddle","colorBorderMiddleEnd","colorBorderInner","colorBorderInnerEnd","colorValueBoxRect","colorValueBoxRectEnd","colorValueBoxBackground","colorValueBoxShadow","colorNeedleShadowUp","colorNeedleShadowDown","colorBarStroke","colorBar","colorBarProgress","colorBarShadow","fontNumbers","fontTitle","fontUnits","fontValue","fontNumbersSize","fontTitleSize","fontUnitsSize","fontValueSize","fontNumbersStyle","fontTitleStyle","fontUnitsStyle","fontValueStyle","fontNumbersWeight","fontTitleWeight","fontUnitsWeight","fontValueWeight","needle","needleShadow","needleType","needleStart","needleEnd","needleWidth","borderOuterWidth","borderMiddleWidth","borderInnerWidth","borderShadowWidth","valueBox","valueBoxStroke","valueBoxWidth","valueText","valueTextShadow","valueBoxBorderRadius","highlights","color","highlightsWidth","barWidth","barStrokeWidth","barProgress","barShadow","Collection","getElementById","version","round","gauges","BaseGauge","configure","emit","set","_this4","ensureValue","fromValue","animate","newValue","toCamelCase","name","replace","parseFloat","m","_this3","className","HTMLCanvasElement","parentNode","offsetWidth","offsetHeight","roundRect","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","dec","int","strVal","toFixed","toString","font","baseSize","reset","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","strokeStyle","lineWidth","drawValueTextShadow","offset","blur","drawings","formatMajorTickNumber","num","right","hasDec","radians","degrees","radialPoint","radius","angle","linearGradient","colorFrom","colorTo","isVertical","grad","createLinearGradient","addColorStop","drawNeedleShadow","drawValueBox","addLength","maxValueWidth","repeat","String","parseInt","text","tunit","runit","tw","measureText","Number","th","sw","bmax","bw","bh","br","obw","bx","by","gy","rect","grd","createRadialGradient","stroke","fillStyle","restore","textAlign","textBaseline","fillText","verifyError","DOMException","result","prepareTicks","tickSide","drawShadow","normalizedValue","dt","normal","indented","HPI","defaultRadialGaugeOptions","ticksLengthAdd","ticksAngle","startAngle","angles","colorNeedleCircleOuter","colorNeedleCircleOuterEnd","colorNeedleCircleInner","colorNeedleCircleInnerEnd","needleCircleSize","needleCircleInner","needleCircleOuter","animationTarget","useMinPath","customAngles","drawRadialBorder","arc","maxRadialRadius","pxRatio","drawRadialPlate","d0","r0","r1","r2","r3","shadowDrawn","drawRadialHighlights","hlWidth","radialTicksRadius","vd","hlt","rotate","drawRadialMinorTicks","range","j","c","delta","minTicks","ratio","mod","tickAngle","closeStrokedPath","unit","drawRadialMajorTicks","colors","radialNextAngle","drawRadialNumbers","points","isAnimated","plateValueAngle","textWidth","textHeight","textRadius","sqrt","point","drawRadialTitle","drawRadialUnits","drawRadialNeedle","rIn","rStart","pad1","pad2","isFixed","valueAngle","drawRadialValueBox","drawRadialProgressBar","rMax","rMin","half","sa","ea","clip","displayValue","gauge","RadialGauge","_ref","commit","drawImage","_context","setter","_set","initialize","defaultLinearGaugeOptions","borderRadius","barBeginCircle","colorBarEnd","colorBarProgressEnd","needleSide","numberSide","ticksWidth","ticksWidthMinor","ticksPadding","barLength","drawLinearBorder","colorStart","colorEnd","drawLinearPlate","w1","w2","w3","w4","h1","h2","h3","h4","x2","x3","x4","y2","y3","y4","aliasingOffset","drawRectangle","drawLinearBarShape","_barDimensions","hasTitle","hasUnits","hasValue","titleMargin","unitsMargin","valueMargin","strokeWidth","barMargin","x0","y0","dx","hasLeft","hasRight","dy","barDimensions","barOffset","ticksLength","X","Y","baseX","baseY","fullBarLength","direction","alpha","asin","cosAlpha","sinAlpha","x1","y1","cutRadius","rx","ry","hasTicksBar","notWhich","drawLinearTick","drawLinearTicks","ticks","minVal","maxVal","lineLength","_context$barDimension2","tickOffset","tickX","tickY","tickLen","tickLeft","tickRight","drawLinearTickStroke","sX","sY","eX","eY","needleStyle","isRight","drawLinearLineNeedle","drawLinearArrowNeedle","bodyLength","halfWidth","LinearGauge","_ref2","drawBox","_context$barDimension","interval","eH","hLeft","hRight","entry","eStart","eW","drawLinearBarHighlights","_drawings$prepareTick3","_drawings$prepareTick4","valuePerNonExactTick","drawLinearMinorTicks","_drawings$prepareTick","_drawings$prepareTick2","tick","_context$barDimension3","rightTicks","leftTicks","drawLinearMajorTicks","_context$barDimension4","tickValues","numLeft","numRight","textX","textY","numberOffset","textMargin","drawLinearMajorTicksNumbers","_context$barDimension5","drawLinearTitle","_context$barDimension6","drawLinearUnits","_context$barDimension7","position","tickWidth","baseLength","needleLength","barStart","nLeft","nRight","drawLinearBarNeedle","boxWidth","module","exports"],"mappings":"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","sourcesContent":["/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @version 2.1.5\n */\n(function(ns) {\n  \"use strict\";\n\n  var _slicedToArray = (function() {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (\n          var _i = arr[Symbol.iterator](), _s;\n          !(_n = (_s = _i.next()).done);\n          _n = true\n        ) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n    return function(arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\n          \"Invalid attempt to destructure non-iterable instance\"\n        );\n      }\n    };\n  })();\n\n  var _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n      if (getter === undefined) {\n        return undefined;\n      }\n      return getter.call(receiver);\n    }\n  };\n\n  var _set = function set(object, property, value, receiver) {\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n      if (parent !== null) {\n        set(parent, property, value, receiver);\n      }\n    } else if (\"value\" in desc && desc.writable) {\n      desc.value = value;\n    } else {\n      var setter = desc.set;\n      if (setter !== undefined) {\n        setter.call(receiver, value);\n      }\n    }\n    return value;\n  };\n\n  var _createClass = (function() {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function(Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  })();\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\n        \"this hasn't been initialised - super() hasn't been called\"\n      );\n    }\n    return call && (typeof call === \"object\" || typeof call === \"function\")\n      ? call\n      : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\n        \"Super expression must either be null or a function, not \" +\n          typeof superClass\n      );\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass)\n      Object.setPrototypeOf\n        ? Object.setPrototypeOf(subClass, superClass)\n        : (subClass.__proto__ = superClass);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  /**\n   * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n   */\n  /* istanbul ignore next */\n  if (!Object.assign) {\n    Object.defineProperty(Object, \"assign\", {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: function value(target, firstSource) {\n        \"use strict\";\n\n        if (target === undefined || target === null) {\n          throw new TypeError(\"Cannot convert first argument to object\");\n        }\n\n        var to = Object(target);\n        var i = 1;\n\n        for (; i < arguments.length; i++) {\n          var nextSource = arguments[i];\n\n          if (nextSource === undefined || nextSource === null) {\n            continue;\n          }\n\n          var keysArray = Object.keys(Object(nextSource));\n          var nextIndex = 0,\n            len = keysArray.length;\n\n          for (; nextIndex < len; nextIndex++) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n            if (desc !== undefined && desc.enumerable) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n\n        return to;\n      }\n    });\n  }\n\n  /**\n   * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n   */\n  /* istanbul ignore next */\n  if (!Array.prototype.indexOf) {\n    Object.defineProperty(Array.prototype, \"indexOf\", {\n      value: function value(searchElement, fromIndex) {\n        var k;\n\n        if (this === null) {\n          throw new TypeError('\"this\" is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n\n        if (len === 0) {\n          return -1;\n        }\n\n        var n = +fromIndex || 0;\n\n        if (Math.abs(n) === Infinity) {\n          n = 0;\n        }\n\n        if (n >= len) {\n          return -1;\n        }\n\n        k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        while (k < len) {\n          if (k in O && O[k] === searchElement) {\n            return k;\n          }\n\n          k++;\n        }\n\n        return -1;\n      }\n    });\n  }\n\n  /**\n   * @external {Array.fill} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\n   */\n  /* istanbul ignore next */\n  if (!Array.prototype.fill) {\n    Object.defineProperty(Array.prototype, \"fill\", {\n      value: function value(_value) {\n        if (this === null) {\n          throw new TypeError(\"this is null or not defined\");\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n        var start = arguments[1];\n        var relativeStart = start >> 0;\n        var k =\n          relativeStart < 0\n            ? Math.max(len + relativeStart, 0)\n            : Math.min(relativeStart, len);\n        var end = arguments[2];\n        var relativeEnd = end === undefined ? len : end >> 0;\n        var final =\n          relativeEnd < 0\n            ? Math.max(len + relativeEnd, 0)\n            : Math.min(relativeEnd, len);\n        while (k < final) {\n          O[k] = _value;\n          k++;\n        }\n\n        return O;\n      }\n    });\n  }\n\n  /**\n   * mocking window\n   */\n  if (typeof window === \"undefined\") {\n    window = typeof global === \"undefined\" ? {} : global;\n  }\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n  /**\n   * Look-ups for a proper vendor-specific property and returns its value\n   *\n   * @example\n   * var requestAnimationFrame = vendorize('requestAnimationFrame');\n   * // it will refer properly to:\n   * //  - window.requestAnimationFrame by default or to\n   * //  - window.webkitRequestAnimationFrame or to\n   * //  - window.mozRequestAnimationFrame or to\n   * //  - window.msRequestAnimationFrame or to\n   * //  - window.oRequestAnimationFrame\n   * // depending on the current browser vendor\n   *\n   * @author Mykhailo Stadnyk <mikhus@gmail.com>\n   * @param {string} prop\n   * @param {HTMLElement|Window|object} [from] - default is window\n   * @returns {*}\n   */\n  function vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n      from = typeof window === \"undefined\" ? global : window;\n    }\n\n    if (typeof from[prop] !== \"undefined\") {\n      return from[prop];\n    }\n\n    var vendors = [\"webkit\", \"moz\", \"ms\", \"o\"];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n      var vendorProp = from[vendors[i] + capitalized];\n\n      /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n      if (typeof vendorProp !== \"undefined\") {\n        return vendorProp;\n      }\n    }\n\n    return null;\n  }\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * Class EventEmitter - base event manager\n   */\n\n  var EventEmitter = (function() {\n    /**\n     * @constructor\n     */\n    function EventEmitter() {\n      _classCallCheck(this, EventEmitter);\n\n      this._events = {};\n\n      this.addListener = this.on;\n      this.removeListener = this.off;\n    }\n\n    /**\n     * Returns all event listeners\n     *\n     * @return {object}\n     */\n\n    _createClass(EventEmitter, [\n      {\n        key: \"emit\",\n\n        /**\n         * Emits given event bypassing to each registered handler given args\n         *\n         * @param {string} event\n         * @param {...*} args\n         */\n        value: function emit(event) {\n          if (this._events[event]) {\n            var i = 0;\n            var s = this._events[event].length;\n\n            for (\n              var _len = arguments.length,\n                args = Array(_len > 1 ? _len - 1 : 0),\n                _key = 1;\n              _key < _len;\n              _key++\n            ) {\n              args[_key - 1] = arguments[_key];\n            }\n\n            for (; i < s; i++) {\n              this._events[event][i] &&\n                this._events[event][i].apply(this, args);\n            }\n          }\n        }\n\n        /**\n         * Registers given handler for given event to be called only once when\n         * event is emitted\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n      },\n      {\n        key: \"once\",\n        value: function once(event) {\n          for (\n            var _len2 = arguments.length,\n              handlers = Array(_len2 > 1 ? _len2 - 1 : 0),\n              _key2 = 1;\n            _key2 < _len2;\n            _key2++\n          ) {\n            handlers[_key2 - 1] = arguments[_key2];\n          }\n\n          var i = 0;\n          var s = handlers.length;\n          var self = this;\n\n          var _loop = function _loop() {\n            var handler = handlers[i];\n            var wrapper = function wrapper() {\n              self.off(event, wrapper);\n              handler.apply(self, arguments);\n            };\n\n            handlers[i] = wrapper;\n          };\n\n          for (; i < s; i++) {\n            _loop();\n          }\n\n          this.on.apply(this, [event].concat(handlers));\n        }\n\n        /**\n         * Registers given handlers for a given events to be called each time event\n         * is emitted\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n      },\n      {\n        key: \"on\",\n        value: function on(event) {\n          if (!this._events[event]) {\n            this._events[event] = [];\n          }\n\n          var i = 0;\n          var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n          for (; i < s; i++) {\n            this._events[event].push(\n              arguments.length <= i + 1 ? undefined : arguments[i + 1]\n            );\n          }\n        }\n\n        /**\n         * Un-registers previously registered event handlers\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n      },\n      {\n        key: \"off\",\n        value: function off(event) {\n          if (!this._events[event]) {\n            return;\n          }\n\n          var i = 0;\n          var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n          for (; i < s; i++) {\n            var _handler =\n              arguments.length <= i + 1 ? undefined : arguments[i + 1];\n            var index = void 0;\n\n            while (~(index = this._events[event].indexOf(_handler))) {\n              this._events[event].splice(index, 1);\n            }\n          }\n        }\n\n        /**\n         * Removes all listeners for a given event\n         *\n         * @param {string} event\n         */\n      },\n      {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          delete this._events[event];\n        }\n      },\n      {\n        key: \"listeners\",\n        get: function get() {\n          return this._events;\n        }\n      }\n    ]);\n\n    return EventEmitter;\n  })();\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n  /* jshint -W079 */\n\n  /**\n   * @ignore\n   * @typedef {object} ns\n   */\n\n  /* istanbul ignore next */\n  /**\n   * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n   * @access private\n   */\n\n  var requestAnimationFrame =\n    vendorize(\"requestAnimationFrame\") ||\n    function(callback) {\n      return setTimeout(function() {\n        return callback(new Date().getTime());\n      }, 1000 / 60);\n    };\n\n  /**\n   * Generic AnimationRule function interface\n   *\n   * @typedef {function(percent: number): number} AnimationRule\n   */\n\n  /**\n   * Callback for animation step draw event.\n   * It will be called each time animation step is executed, bypassing\n   * as first argument a percent of animation completeness. It is expected\n   * that this callback will do an actual work of animating an elements or\n   * whatever, as far as animation engine is just calculating and executing\n   * animation steps without any knowledge about things under animation.\n   *\n   * @typedef {function(percent: number): *} DrawEventCallback\n   */\n\n  /**\n   * Callback for animation complete event.\n   * It is called once each animation is complete.\n   *\n   * @typedef {function(): *} EndEventCallback\n   */\n\n  /**\n   * Predefined known animation rules.\n   * It's a simple collection of math for some most used animations.\n   *\n   * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n   */\n\n  /* istanbul ignore next: no reason covering this */\n  var rules = {\n    linear: function linear(p) {\n      return p;\n    },\n    quad: function quad(p) {\n      return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n      return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n      return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n      return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n      return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n      return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n      return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n      var a = 0,\n        b = 1;\n      for (; 1; a += b, b /= 2) {\n        if (p >= (7 - 4 * a) / 11) {\n          return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n        }\n      }\n    },\n    elastic: function elastic(p) {\n      return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n      var x = 1.5;\n      return Math.pow(2, 10 * (p - 1)) * Math.cos(((20 * Math.PI * x) / 3) * p);\n    }\n  };\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Evaluates animation step and decides if the next step required or\n   * stops animation calling a proper events.\n   *\n   * @access private\n   * @param {number} time\n   * @param {DrawEventCallback} draw\n   * @param {number} start\n   * @param {AnimationRule} rule\n   * @param {number} duration\n   * @param {EndEventCallback} end\n   * @param {Animation} anim\n   */\n  function step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== \"function\") {\n      throw new TypeError(\"Invalid animation rule:\", rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n    var animationTransformed = 0;\n\n    if (percent > 1) {\n      percent = 1;\n    }\n\n    if (percent !== 1) {\n      animationTransformed = rule(percent);\n\n      // make sure we have correct number after applying animation\n      // transformation\n      if (isFinite(animationTransformed) && !isNaN(animationTransformed)) {\n        percent = animationTransformed;\n      }\n    }\n\n    draw && draw(percent);\n\n    if (progress < duration) {\n      anim.frame = requestAnimationFrame(function(time) {\n        return step(time, draw, start, rule, duration, end, anim);\n      });\n    } else {\n      end && end();\n      anim.inProgress = false;\n    }\n  }\n\n  /**\n   * Animation engine API for JavaScript-based animations.\n   * This is simply an animation core framework which simplifies creation\n   * of various animations for generic purposes.\n   *\n   * @example\n   * // create 'linear' animation engine, 500ms duration\n   * let linear = new Animation('linear', 500);\n   *\n   * // create 'elastic' animation engine\n   * let elastic = new Animation('elastic');\n   *\n   * // define animation behavior\n   * let bounced = new Animation('bounce', 500, percent => {\n   *     let value = parseInt(percent * 100, 10);\n   *\n   *     $('div.bounced').css({\n   *         width: value + '%',\n   *         height: value + '%'\n   *     });\n   * });\n   *\n   * // execute animation\n   * bounced.animate();\n   *\n   * // execute animation and handle when its finished\n   * bounced.animate(null, () => {\n   *    console.log('Animation finished!');\n   * });\n   */\n\n  var Animation = (function() {\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n      var rule =\n        arguments.length > 0 && arguments[0] !== undefined\n          ? arguments[0]\n          : \"linear\";\n      var duration =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n      var draw =\n        arguments.length > 2 && arguments[2] !== undefined\n          ? arguments[2]\n          : function() {};\n      var end =\n        arguments.length > 3 && arguments[3] !== undefined\n          ? arguments[3]\n          : function() {};\n\n      _classCallCheck(this, Animation);\n\n      /**\n       * Overall animation duration in milliseconds.\n       * By default is equal to 250 ms.\n       *\n       * @type {number}\n       */\n      this.duration = duration;\n\n      /**\n       * Animation rule. By default is linear animation.\n       * Animation rule is a subject to animation rules, which are\n       * a simple object containing math-based methods for calculating\n       * animation steps.\n       *\n       * @type {string|AnimationRule}\n       */\n      this.rule = rule;\n\n      /**\n       * Callback function for the animation step draw event.\n       *\n       * @type {DrawEventCallback}\n       */\n      this.draw = draw;\n\n      /**\n       * Callback for the animation complete event.\n       *\n       * @type {EndEventCallback}\n       */\n      this.end = end;\n\n      if (typeof this.draw !== \"function\") {\n        throw new TypeError(\"Invalid animation draw callback:\", draw);\n      }\n\n      if (typeof this.end !== \"function\") {\n        throw new TypeError(\"Invalid animation end callback:\", end);\n      }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n    _createClass(Animation, [\n      {\n        key: \"animate\",\n        value: function animate(draw, end) {\n          var _this = this;\n\n          this.frame && this.cancel();\n\n          // noinspection JSUnresolvedVariable\n          var start =\n            window.performance && window.performance.now\n              ? window.performance.now()\n              : vendorize(\"animationStartTime\") || Date.now();\n\n          draw = draw || this.draw;\n          end = end || this.end;\n\n          this.draw = draw;\n          this.end = end;\n\n          /**\n           * Current requested animation frame identifier\n           *\n           * @type {number}\n           */\n          this.frame = requestAnimationFrame(function(time) {\n            return step(\n              time,\n              draw,\n              start,\n              rules[_this.rule] || _this.rule,\n              _this.duration,\n              end,\n              _this\n            );\n          });\n        }\n\n        /**\n         * Cancels current animation if any\n         */\n      },\n      {\n        key: \"cancel\",\n        value: function cancel() {\n          if (this.frame) {\n            var cancelAnimationFrame =\n              vendorize(\"cancelAnimationFrame\") ||\n              /* istanbul ignore next */\n              function(id) {};\n\n            cancelAnimationFrame(this.frame);\n            this.frame = null;\n          }\n        }\n\n        /**\n         * Destroys this object properly\n         */\n      },\n      {\n        key: \"destroy\",\n        value: function destroy() {\n          this.cancel();\n          this.draw = null;\n          this.end = null;\n        }\n      }\n    ]);\n\n    return Animation;\n  })();\n\n  /**\n   * Animation rules bound statically to Animation constructor.\n   *\n   * @type {AnimationRules}\n   * @static\n   */\n\n  Animation.rules = rules;\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n  /**\n   * @typedef {{ constructor: function(options: GenericOptions): GaugeInterface, draw: function(): GaugeInterface, destroy: function, update: function(options: GenericOptions) }} GaugeInterface\n   */\n  /**\n   * @typedef {{parse: function, stringify: function}} JSON\n   * @external {JSON} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON\n   */\n  /**\n   * @ignore\n   * @typedef {{MutationObserver: function}} ns\n   */\n\n  /**\n   * DOM Observer.\n   * It will observe DOM document for a configured element types and\n   * instantiate associated Types for an existing or newly added DOM elements\n   *\n   * @example\n   * class ProgressBar {\n   *     constructor(options) {}\n   *     draw() {}\n   * }\n   *\n   * // It will observe DOM document for elements <div>\n   * // having attribute 'data-type=\"progress\"'\n   * // and instantiate for each new instance of ProgressBar\n   *\n   * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n   *\n   * // assume we could have HTML like this\n   * // <div data-type=\"progress\" color=\"blue\"></div>\n   * // in this case all matching attributes names for a given options will be\n   * // parsed and bypassed to an instance from HTML attributes\n   */\n\n  var DomObserver = (function() {\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} type\n     */\n    function DomObserver(options, element, type) {\n      _classCallCheck(this, DomObserver);\n\n      //noinspection JSUnresolvedVariable\n      /**\n       * Default instantiation options for the given type\n       *\n       * @type {Object}\n       */\n      this.options = options;\n\n      /**\n       * Name of an element to lookup/observe\n       *\n       * @type {string}\n       */\n      this.element = element.toLowerCase();\n\n      /**\n       * data-type attribute value to lookup\n       *\n       * @type {string}\n       */\n      this.type = DomObserver.toDashed(type);\n\n      /**\n       * Actual type constructor to instantiate for each found element\n       *\n       * @type {Function}\n       */\n      this.Type = ns[type];\n\n      /**\n       * Signals if mutations observer for this type or not\n       *\n       * @type {boolean}\n       */\n      this.mutationsObserved = false;\n\n      /**\n       * Flag specifies whenever the browser supports observing\n       * of DOM tree mutations or not\n       *\n       * @type {boolean}\n       */\n      this.isObservable = !!window.MutationObserver;\n\n      /* istanbul ignore next: this should be tested with end-to-end tests */\n      if (!window.GAUGES_NO_AUTO_INIT) {\n        DomObserver.domReady(this.traverse.bind(this));\n      }\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n    _createClass(\n      DomObserver,\n      [\n        {\n          key: \"isValidNode\",\n          value: function isValidNode(node) {\n            //noinspection JSUnresolvedVariable\n            return !!(\n              node.tagName &&\n              node.tagName.toLowerCase() === this.element &&\n              node.getAttribute(\"data-type\") === this.type\n            );\n          }\n\n          /**\n           * Traverse entire current DOM tree and process matching nodes.\n           * Usually it should be called only once on document initialization.\n           */\n        },\n        {\n          key: \"traverse\",\n          value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n              s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n              this.process(elements[i]);\n            }\n\n            if (this.isObservable && !this.mutationsObserved) {\n              new MutationObserver(this.observe.bind(this)).observe(\n                document.body,\n                {\n                  childList: true,\n                  subtree: true,\n                  attributes: true,\n                  characterData: true,\n                  attributeOldValue: true,\n                  characterDataOldValue: true\n                }\n              );\n\n              this.mutationsObserved = true;\n            }\n          }\n\n          /**\n           * Observes given mutation records for an elements to process\n           *\n           * @param {MutationRecord[]} records\n           */\n        },\n        {\n          key: \"observe\",\n          value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n              var record = records[i];\n\n              if (\n                record.type === \"attributes\" &&\n                record.attributeName === \"data-type\" &&\n                this.isValidNode(record.target) &&\n                record.oldValue !== this.type\n              ) {\n                // skip false-positive mutations\n                setTimeout(this.process.bind(this, record.target));\n              } else if (record.addedNodes && record.addedNodes.length) {\n                var ii = 0;\n                var ss = record.addedNodes.length;\n\n                for (; ii < ss; ii++) {\n                  setTimeout(this.process.bind(this, record.addedNodes[ii]));\n                }\n              }\n            }\n          }\n\n          /**\n           * Parses given attribute value to a proper JavaScript value.\n           * For example it will parse some stringified value to a proper type\n           * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\n           *\n           * @param {*} value\n           * @return {*}\n           */\n        },\n        {\n          key: \"process\",\n\n          /**\n           * Processes a given node, instantiating a proper type constructor for it\n           *\n           * @param {Node|HTMLElement} node\n           * @returns {GaugeInterface|null}\n           */\n          value: function process(node) {\n            var _this2 = this;\n\n            if (!this.isValidNode(node)) return null;\n\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n            var instance = null;\n\n            for (prop in options) {\n              /* istanbul ignore else: non-testable in most cases */\n              if (options.hasOwnProperty(prop)) {\n                var attributeName = DomObserver.toAttributeName(prop);\n                var attributeValue = DomObserver.parse(\n                  node.getAttribute(attributeName)\n                );\n\n                if (attributeValue !== null && attributeValue !== undefined) {\n                  options[prop] = attributeValue;\n                }\n              }\n            }\n\n            options.renderTo = node;\n            instance = new this.Type(options);\n            instance.draw && instance.draw();\n\n            if (!this.isObservable) return instance;\n\n            instance.observer = new MutationObserver(function(records) {\n              records.forEach(function(record) {\n                if (record.type === \"attributes\") {\n                  var attr = record.attributeName.toLowerCase();\n                  var type = node.getAttribute(attr).toLowerCase();\n\n                  if (attr === \"data-type\" && type && type !== _this2.type) {\n                    instance.observer.disconnect();\n                    delete instance.observer;\n                    instance.destroy && instance.destroy();\n                  } else if (attr.substr(0, 5) === \"data-\") {\n                    var _prop = attr\n                      .substr(5)\n                      .split(\"-\")\n                      .map(function(part, i) {\n                        return !i\n                          ? part\n                          : part.charAt(0).toUpperCase() + part.substr(1);\n                      })\n                      .join(\"\");\n                    var _options = {};\n\n                    _options[_prop] = DomObserver.parse(\n                      node.getAttribute(record.attributeName)\n                    );\n\n                    if (_prop === \"value\") {\n                      instance && (instance.value = _options[_prop]);\n                    } else {\n                      instance.update && instance.update(_options);\n                    }\n                  }\n                }\n              });\n            });\n\n            //noinspection JSCheckFunctionSignatures\n            instance.observer.observe(node, { attributes: true });\n\n            return instance;\n          }\n\n          /**\n           * Transforms camelCase string to dashed string\n           *\n           * @static\n           * @param {string} camelCase\n           * @return {string}\n           */\n        }\n      ],\n      [\n        {\n          key: \"parse\",\n          value: function parse(value) {\n            // parse boolean\n            if (value === \"true\") return true;\n            if (value === \"false\") return false;\n\n            // parse undefined\n            if (value === \"undefined\") return undefined;\n\n            // parse null\n            if (value === \"null\") return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanumeric characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[-+#.\\w\\d\\s]+(?:,[-+#.\\w\\d\\s]*)+$/.test(value)) {\n              return value.split(\",\");\n            }\n\n            // parse JSON\n            try {\n              return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n          }\n        },\n        {\n          key: \"toDashed\",\n          value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n              str += \"-\" + arr[i].toLowerCase();\n            }\n\n            return str;\n          }\n\n          /**\n           * Transforms dashed string to CamelCase representation\n           *\n           * @param {string} dashed\n           * @param {boolean} [capitalized]\n           * @return {string}\n           */\n        },\n        {\n          key: \"toCamelCase\",\n          value: function toCamelCase(dashed) {\n            var capitalized =\n              arguments.length > 1 && arguments[1] !== undefined\n                ? arguments[1]\n                : true;\n\n            var arr = dashed.split(/-/);\n            var i = 0;\n            var s = arr.length;\n            var str = \"\";\n\n            for (; i < s; i++) {\n              if (!(i || capitalized)) {\n                str += arr[i].toLowerCase();\n              } else {\n                str += arr[i][0].toUpperCase() + arr[i].substr(1).toLowerCase();\n              }\n            }\n\n            return str;\n          }\n\n          /**\n           * Transforms camel case property name to dash separated attribute name\n           *\n           * @static\n           * @param {string} str\n           * @returns {string}\n           */\n        },\n        {\n          key: \"toAttributeName\",\n          value: function toAttributeName(str) {\n            return \"data-\" + DomObserver.toDashed(str);\n          }\n\n          /**\n           * Cross-browser DOM ready handler\n           *\n           * @static\n           * @param {Function} handler\n           */\n        },\n        {\n          key: \"domReady\",\n          value: function domReady(handler) {\n            if (\n              /comp|inter|loaded/.test((window.document || {}).readyState + \"\")\n            )\n              return handler();\n\n            if (window.addEventListener)\n              window.addEventListener(\"DOMContentLoaded\", handler, false);\n            else if (window.attachEvent) window.attachEvent(\"onload\", handler);\n          }\n        }\n      ]\n    );\n\n    return DomObserver;\n  })();\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * @ignore\n   * @typedef {object} ns\n   */\n\n  /**\n   * Drawings on canvas using hidden canvas as a cache for better\n   * performance drawings during canvas animations. SmartCanvas also\n   * adopts a canvas to\n   */\n\n  var SmartCanvas = (function() {\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} [width]\n     * @param {number} [height]\n     */\n    function SmartCanvas(canvas, width, height) {\n      _classCallCheck(this, SmartCanvas);\n\n      SmartCanvas.collection.push(this);\n\n      /**\n       * Canvas base width\n       *\n       * @type {number}\n       */\n      this.width = width || 0;\n\n      /**\n       * Canvas base height\n       *\n       * @type {number}\n       */\n      this.height = height || 0;\n\n      /**\n       * Target drawings canvas element\n       *\n       * @type {HTMLCanvasElement}\n       */\n      this.element = canvas;\n\n      this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n    _createClass(\n      SmartCanvas,\n      [\n        {\n          key: \"init\",\n          value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + \"px\";\n            this.element.style.height = this.height + \"px\";\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext(\"2d\");\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext(\"2d\");\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n          }\n\n          /**\n           * Destroys this object, removing the references from memory\n           */\n        },\n        {\n          key: \"destroy\",\n          value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n              SmartCanvas.collection.splice(index, 1);\n            }\n\n            this.context.clearRect(\n              -this.drawX,\n              -this.drawY,\n              this.drawWidth,\n              this.drawHeight\n            );\n\n            // dereference all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n          }\n\n          /**\n           * Commits the drawings\n           */\n        },\n        {\n          key: \"commit\",\n          value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n              this.contextClone.scale(scale, scale);\n              this.contextClone.save();\n            }\n\n            return this;\n          }\n\n          /**\n           * Redraw this object\n           */\n        },\n        {\n          key: \"redraw\",\n          value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n          }\n\n          /**\n           * Returns current device pixel ratio\n           *\n           * @returns {number}\n           */\n        }\n      ],\n      [\n        {\n          key: \"redraw\",\n\n          /**\n           * Forces redraw all canvas in the current collection\n           */\n          value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n              SmartCanvas.collection[i].redraw();\n            }\n          }\n        },\n        {\n          key: \"pixelRatio\",\n          get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n          }\n        }\n      ]\n    );\n\n    return SmartCanvas;\n  })();\n\n  SmartCanvas.collection = [];\n\n  /* istanbul ignore next: very browser-specific testing required to cover */\n  //noinspection JSUnresolvedVariable\n  if (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window\n      .matchMedia(\"screen and (min-resolution: 2dppx)\")\n      .addListener(SmartCanvas.redraw);\n  }\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * Describes rendering target element. Can be either string identifier of\n   * the element or the element itself.\n   *\n   * @typedef {HTMLElement|string} RenderTarget\n   */\n\n  /**\n   * Highlight area definition.\n   * It describes highlight area starting from value to value using\n   * color. Color can be describes with hex, rgb or rgba value.\n   *\n   * @typedef {{ from: number, to: number, color: string}} Highlight\n   */\n\n  /**\n   * Shared generic gauges options\n   *\n   * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], exactTicks: boolean, minorTicks: number, strokeTicks: boolean, animatedValue: boolean, animateOnInit: boolean, title: string|boolean, borders: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorPlateEnd: string, colorMajorTicks: string, colorMinorTicks: string, colorStrokeTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedle: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuter: string, colorBorderOuterEnd: string, colorBorderMiddle: string, colorBorderMiddleEnd: string, colorBorderInner: string, colorBorderInnerEnd: string, colorValueBoxRect: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueBoxWidth: number, valueBoxStroke: number, valueText: string, valueTextShadow: boolean, valueBoxBorderRadius: number, highlights: Highlight[], highlightsWidth: number, fontNumbers: string, fontTitle: string, fontUnits: string, fontValue: string, fontTitleSize: number, fontValueSize: number, fontUnitsSize: number, fontNumbersSize: number, fontNumbersStyle: string, fontTitleStyle: string, fontUnitsStyle: string, fontValueStyle: string, fontNumbersWeight: string, fontTitleWeight: string, fontUnitsWeight: string, fontValueWeight: string, barWidth: number, barStrokeWidth: number, barProgress: boolean, colorBar: string, colorBarStroke: string, colorBarProgress: string, colorBarShadow: string, barShadow: number, listeners: object}} GenericOptions\n   */\n  var GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 0,\n    height: 0,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    exactTicks: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    animatedValue: false,\n    animateOnInit: false,\n    title: false,\n    borders: true,\n    numbersMargin: 1,\n\n    listeners: null,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 500,\n    animationRule: \"cycle\",\n\n    // colors\n    colorPlate: \"#fff\",\n    colorPlateEnd: \"\",\n    colorMajorTicks: \"#444\",\n    colorMinorTicks: \"#666\",\n    colorStrokeTicks: \"\",\n    colorTitle: \"#888\",\n    colorUnits: \"#888\",\n    colorNumbers: \"#444\",\n    colorNeedle: \"rgba(240,128,128,1)\",\n    colorNeedleEnd: \"rgba(255,160,122,.9)\",\n    colorValueText: \"#444\",\n    colorValueTextShadow: \"rgba(0,0,0,0.3)\",\n    colorBorderShadow: \"rgba(0,0,0,0.5)\",\n    colorBorderOuter: \"#ddd\",\n    colorBorderOuterEnd: \"#aaa\",\n    colorBorderMiddle: \"#eee\",\n    colorBorderMiddleEnd: \"#f0f0f0\",\n    colorBorderInner: \"#fafafa\",\n    colorBorderInnerEnd: \"#ccc\",\n    colorValueBoxRect: \"#888\",\n    colorValueBoxRectEnd: \"#666\",\n    colorValueBoxBackground: \"#babab2\",\n    colorValueBoxShadow: \"rgba(0,0,0,1)\",\n    colorNeedleShadowUp: \"rgba(2,255,255,0.2)\",\n    colorNeedleShadowDown: \"rgba(188,143,143,0.45)\",\n    colorBarStroke: \"#222\",\n    colorBar: \"#ccc\",\n    colorBarProgress: \"#888\",\n    colorBarShadow: \"#000\",\n\n    fontNumbers: \"Arial\",\n    fontTitle: \"Arial\",\n    fontUnits: \"Arial\",\n    fontValue: \"Arial\",\n\n    fontNumbersSize: 20,\n    fontTitleSize: 24,\n    fontUnitsSize: 22,\n    fontValueSize: 26,\n\n    fontNumbersStyle: \"normal\",\n    fontTitleStyle: \"normal\",\n    fontUnitsStyle: \"normal\",\n    fontValueStyle: \"normal\",\n\n    fontNumbersWeight: \"normal\",\n    fontTitleWeight: \"normal\",\n    fontUnitsWeight: \"normal\",\n    fontValueWeight: \"normal\",\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: \"arrow\",\n    needleStart: 5,\n    needleEnd: 85,\n    needleWidth: 4,\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueBoxStroke: 5,\n    valueBoxWidth: 0,\n    valueText: \"\",\n    valueTextShadow: true,\n    valueBoxBorderRadius: 2.5,\n\n    // highlights\n    highlights: [\n      { from: 20, to: 60, color: \"#eee\" },\n      { from: 60, to: 80, color: \"#ccc\" },\n      { from: 80, to: 100, color: \"#999\" }\n    ],\n    highlightsWidth: 15,\n\n    // progress bar\n    barWidth: 20, // percents\n    barStrokeWidth: 0, // pixels\n    barProgress: true,\n    barShadow: 0\n  };\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * Gauge collections type.\n   *\n   * It is used ES5 declaration here, because babel\n   * transpiles inheritance incorrectly in this case.\n   *\n   * @class Collection\n   * @constructor\n   */\n  function Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n  }\n\n  Collection.prototype = Object.create(Array.prototype);\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Returns gauge object by its identifier or index in the collection\n   *\n   * @param {string|number} id\n   * @return {*}\n   */\n  Collection.prototype.get = function(id) {\n    if (typeof id === \"string\") {\n      var i = 0;\n      var s = this.length;\n\n      for (; i < s; i++) {\n        var canvas = this[i].options.renderTo.tagName\n          ? this[i].options.renderTo\n          : /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || \"\");\n\n        if (canvas.getAttribute(\"id\") === id) {\n          return this[i];\n        }\n      }\n    } else if (typeof id === \"number\") {\n      return this[id];\n    }\n\n    return null;\n  };\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  var version = \"2.1.5\";\n\n  var round = Math.round;\n  var abs = Math.abs;\n\n  var gauges = new Collection();\n\n  gauges.version = version;\n\n  /**\n   * Basic abstract BaseGauge class implementing common functionality\n   * for different type of gauges.\n   *\n   * It should not be instantiated directly but must be extended by a final\n   * gauge implementation.\n   *\n   * @abstract\n   * @example\n   *\n   * class MyCoolGauge extends BaseGauge {\n   *\n   *     // theses methods below MUST be implemented:\n   *\n   *     constructor(options) {\n   *        // ... do something with options\n   *        super(options);\n   *        // ... implement anything else\n   *     }\n   *\n   *     draw() {\n   *         // ... some implementation here\n   *         return this;\n   *     }\n   * }\n   */\n\n  var BaseGauge = (function(_EventEmitter) {\n    _inherits(BaseGauge, _EventEmitter);\n\n    /**\n     * Fired each time gauge is initialized on a page\n     *\n     * @event BaseGauge#init\n     */\n\n    /**\n     * Fired each time gauge scene is rendered\n     *\n     * @event BaseGauge#render\n     */\n\n    /**\n     * Fired each time gauge object is destroyed\n     *\n     * @event BaseGauge#destroy\n     */\n\n    /**\n     * Fired each time before animation is started on the gauge\n     *\n     * @event BaseGauge#animationStart\n     */\n\n    /**\n     * Fired each time animation scene is complete\n     *\n     * @event BaseGauge#animate\n     * @type {number} percent\n     * @type {number} value\n     */\n\n    /**\n     * Fired each time animation is complete on the gauge\n     *\n     * @event BaseGauge#animationEnd\n     */\n\n    /**\n     * @event BaseGauge#value\n     * @type {number} newValue\n     * @type {number} oldValue\n     */\n\n    /**\n     * @constructor\n     * @abstract\n     * @param {GenericOptions} options\n     */\n    function BaseGauge(options) {\n      _classCallCheck(this, BaseGauge);\n\n      var _this3 = _possibleConstructorReturn(\n        this,\n        (BaseGauge.__proto__ || Object.getPrototypeOf(BaseGauge)).call(this)\n      );\n\n      var className = _this3.constructor.name;\n\n      if (className === \"BaseGauge\") {\n        throw new TypeError(\"Attempt to instantiate abstract class!\");\n      }\n\n      gauges.push(_this3);\n\n      if (options.listeners) {\n        Object.keys(options.listeners).forEach(function(event) {\n          var handlers =\n            options.listeners[event] instanceof Array\n              ? options.listeners[event]\n              : [options.listeners[event]];\n\n          handlers.forEach(function(handler) {\n            _this3.on(event, handler);\n          });\n        });\n      }\n\n      //noinspection JSUnresolvedVariable\n      /**\n       * Gauges version string\n       *\n       * @type {string}\n       */\n      _this3.version = version;\n\n      /**\n       * Gauge type class\n       *\n       * @type {BaseGauge} type\n       */\n      _this3.type = ns[className] || BaseGauge;\n\n      /**\n       * True if gauge has been drawn for the first time, false otherwise.\n       *\n       * @type {boolean}\n       */\n      _this3.initialized = false;\n\n      options.minValue = parseFloat(options.minValue);\n      options.maxValue = parseFloat(options.maxValue);\n      options.value = parseFloat(options.value) || 0;\n\n      if (!options.borders) {\n        options.borderInnerWidth = options.borderMiddleWidth = options.borderOuterWidth = 0;\n      }\n\n      if (!options.renderTo) {\n        throw TypeError(\n          \"Canvas element was not specified when creating \" +\n            \"the Gauge object!\"\n        );\n      }\n\n      var canvas = options.renderTo.tagName\n        ? options.renderTo\n        : /* istanbul ignore next: to be tested with e2e tests */\n          document.getElementById(options.renderTo);\n\n      if (!(canvas instanceof HTMLCanvasElement)) {\n        throw TypeError(\"Given gauge canvas element is invalid!\");\n      }\n\n      options.width = parseFloat(options.width) || 0;\n      options.height = parseFloat(options.height) || 0;\n\n      if (!options.width || !options.height) {\n        if (!options.width)\n          options.width = canvas.parentNode\n            ? canvas.parentNode.offsetWidth\n            : canvas.offsetWidth;\n        if (!options.height)\n          options.height = canvas.parentNode\n            ? canvas.parentNode.offsetHeight\n            : canvas.offsetHeight;\n      }\n\n      /**\n       * Gauge options\n       *\n       * @type {GenericOptions} options\n       */\n      _this3.options = options || {};\n\n      if (_this3.options.animateOnInit) {\n        _this3._value = _this3.options.value;\n        _this3.options.value = _this3.options.minValue;\n      }\n\n      /**\n       * @type {SmartCanvas} canvas\n       */\n      _this3.canvas = new SmartCanvas(canvas, options.width, options.height);\n      _this3.canvas.onRedraw = _this3.draw.bind(_this3);\n\n      /**\n       * @type {Animation} animation\n       */\n      _this3.animation = new Animation(\n        options.animationRule,\n        options.animationDuration\n      );\n      return _this3;\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n    _createClass(\n      BaseGauge,\n      [\n        {\n          key: \"update\",\n\n          /**\n           * Updates gauge configuration options at runtime and redraws the gauge\n           *\n           * @param {RadialGaugeOptions} options\n           * @returns {BaseGauge}\n           */\n          value: function update(options) {\n            Object.assign(this.options, this.type.configure(options || {}));\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n          }\n\n          /**\n           * Performs destruction of this object properly\n           */\n        },\n        {\n          key: \"destroy\",\n          value: function destroy() {\n            var index = gauges.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n              //noinspection JSUnresolvedFunction\n              gauges.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n\n            this.emit(\"destroy\");\n          }\n\n          /**\n           * Returns gauges version string\n           *\n           * @return {string}\n           */\n        },\n        {\n          key: \"draw\",\n\n          /**\n           * Triggering gauge render on a canvas.\n           *\n           * @abstract\n           * @returns {BaseGauge}\n           */\n          value: function draw() {\n            if (this.options.animateOnInit && !this.initialized) {\n              this.value = this._value;\n              this.initialized = true;\n              this.emit(\"init\");\n            }\n\n            this.emit(\"render\");\n\n            return this;\n          }\n\n          /**\n           * Inject given gauge object into DOM\n           *\n           * @param {string} type\n           * @param {GenericOptions} options\n           */\n        },\n        {\n          key: \"value\",\n          set: function set(value) {\n            var _this4 = this;\n\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            var fromValue = this.options.value;\n\n            if (value === fromValue) {\n              return;\n            }\n\n            if (this.options.animation) {\n              if (this.animation.frame) {\n                // animation is already in progress -\n                // forget related old animation value\n                // @see https://github.com/Mikhus/canvas-gauges/issues/94\n                this.options.value = this._value;\n\n                // if there is no actual value change requested stop it\n                if (this._value === value) {\n                  this.animation.cancel();\n                  delete this._value;\n                  return;\n                }\n              }\n\n              /**\n               * @type {number}\n               * @access private\n               */\n              if (this._value === undefined) {\n                this._value = value;\n              }\n\n              this.emit(\"animationStart\");\n\n              this.animation.animate(\n                function(percent) {\n                  var newValue = fromValue + (value - fromValue) * percent;\n\n                  _this4.options.animatedValue &&\n                    _this4.emit(\"value\", newValue, _this4.value);\n\n                  _this4.options.value = newValue;\n\n                  _this4.draw();\n\n                  _this4.emit(\"animate\", percent, _this4.options.value);\n                },\n                function() {\n                  if (_this4._value !== undefined) {\n                    _this4.emit(\"value\", _this4._value, _this4.value);\n                    _this4.options.value = _this4._value;\n                    delete _this4._value;\n                  }\n\n                  _this4.draw();\n                  _this4.emit(\"animationEnd\");\n                }\n              );\n            } else {\n              this.emit(\"value\", value, this.value);\n              this.options.value = value;\n              this.draw();\n            }\n          },\n\n          /**\n           * Returns current value of the gauge\n           *\n           * @return {number}\n           */\n          get: function get() {\n            return typeof this._value === \"undefined\"\n              ? this.options.value\n              : this._value;\n          }\n\n          /**\n           * Updates gauge options\n           *\n           * @param {*} options\n           * @return {BaseGauge}\n           * @access protected\n           */\n        }\n      ],\n      [\n        {\n          key: \"configure\",\n          value: function configure(options) {\n            return options;\n          }\n        },\n        {\n          key: \"initialize\",\n          value: function initialize(type, options) {\n            return new DomObserver(options, \"canvas\", type);\n          }\n\n          /**\n           * Initializes gauge from a given HTML element\n           * (given element should be valid HTML canvas gauge definition)\n           *\n           * @param {HTMLElement} element\n           */\n        },\n        {\n          key: \"fromElement\",\n          value: function fromElement(element) {\n            var type = DomObserver.toCamelCase(\n              element.getAttribute(\"data-type\")\n            );\n            var attributes = element.attributes;\n            var i = 0;\n            var s = attributes.length;\n            var options = {};\n\n            if (!type) {\n              return;\n            }\n\n            if (!/Gauge$/.test(type)) {\n              type += \"Gauge\";\n            }\n\n            for (; i < s; i++) {\n              options[\n                DomObserver.toCamelCase(\n                  attributes[i].name.replace(/^data-/, \"\"),\n                  false\n                )\n              ] = DomObserver.parse(attributes[i].value);\n            }\n\n            new DomObserver(options, element.tagName, type).process(element);\n          }\n\n          /**\n           * Ensures value is proper number\n           *\n           * @param {*} value\n           * @param {number} min\n           * @return {number}\n           */\n        },\n        {\n          key: \"ensureValue\",\n          value: function ensureValue(value) {\n            var min =\n              arguments.length > 1 && arguments[1] !== undefined\n                ? arguments[1]\n                : 0;\n\n            value = parseFloat(value);\n\n            if (isNaN(value) || !isFinite(value)) {\n              value = parseFloat(min) || 0;\n            }\n\n            return value;\n          }\n\n          /**\n           * Corrects javascript modulus bug\n           * @param {number} n\n           * @param {number} m\n           * @return {number}\n           */\n        },\n        {\n          key: \"mod\",\n          value: function mod(n, m) {\n            return ((n % m) + m) % m;\n          }\n        },\n        {\n          key: \"version\",\n          get: function get() {\n            return version;\n          }\n        }\n      ]\n    );\n\n    return BaseGauge;\n  })(EventEmitter);\n\n  /**\n   * @ignore\n   * @typedef {object} ns\n   */\n  /* istanbul ignore if */\n\n  if (typeof ns !== \"undefined\") {\n    ns[\"BaseGauge\"] = BaseGauge;\n    ns[\"gauges\"] = (window.document || {})[\"gauges\"] = gauges;\n  }\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * @access private\n   * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number, barDimensions: object}} Canvas2DContext\n   */\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Examines if a given error is something to throw or to ignore\n   *\n   * @param {Error} err\n   */\n  function verifyError(err) {\n    // there is some unpredictable error in FF in some circumstances\n    // which we found simply safe to ignore than to fight with it\n    // noinspection JSUnresolvedVariable\n    if (err instanceof DOMException && err.result === 0x8053000b) {\n      return; // ignore it\n    }\n\n    throw err;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Prepares major ticks data\n   *\n   * @access private\n   * @param {GenericOptions|{ tickSide: string }} options\n   * @return {[boolean, boolean]}\n   */\n  function prepareTicks(options) {\n    if (!(options.majorTicks instanceof Array)) {\n      options.majorTicks = options.majorTicks ? [options.majorTicks] : [];\n    }\n\n    if (!options.majorTicks.length) {\n      options.majorTicks.push(\n        drawings.formatMajorTickNumber(options.minValue, options)\n      );\n      options.majorTicks.push(\n        drawings.formatMajorTickNumber(options.maxValue, options)\n      );\n    }\n\n    return [options.tickSide !== \"right\", options.tickSide !== \"left\"];\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws rounded corners rectangle\n   *\n   * @param {Canvas2DContext} context\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   * @param {number} r\n   */\n  function roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Pads a given value with leading zeros using the given options\n   *\n   * @param {number} val\n   * @param {RadialGaugeOptions|{valueInt: number, valueDec: number}} options\n   * @returns {string}\n   */\n  function padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n      strVal = void 0,\n      n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n      strVal = val\n        .toFixed(dec)\n        .toString()\n        .split(\".\");\n      s = int - strVal[0].length;\n\n      for (; i < s; ++i) {\n        strVal[0] = \"0\" + strVal[0];\n      }\n\n      strVal = (n ? \"-\" : \"\") + strVal[0] + \".\" + strVal[1];\n    } else {\n      strVal = Math.round(val).toString();\n      s = int - strVal.length;\n\n      for (; i < s; ++i) {\n        strVal = \"0\" + strVal;\n      }\n\n      strVal = (n ? \"-\" : \"\") + strVal;\n    }\n\n    return strVal;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Formats a number for display on the dial's plate using the majorTicksFormat\n   * config option.\n   *\n   * @param {number} num number to format\n   * @param {object} options\n   * @returns {string} formatted number\n   */\n  function formatMajorTickNumber(num, options) {\n    var right = void 0,\n      hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n      right = Math.round(num).toString();\n    } else {\n      right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n      // Does this number have a decimal?\n      hasDec = ~right.indexOf(\".\");\n\n      // Is this number a negative number?\n      if (~right.indexOf(\"-\")) {\n        return (\n          \"-\" +\n          [\n            options.majorTicksInt +\n              options.majorTicksDec +\n              2 +\n              (hasDec ? 1 : 0) -\n              right.length\n          ].join(\"0\") +\n          right.replace(\"-\", \"\")\n        );\n      } else {\n        return (\n          [\n            options.majorTicksInt +\n              options.majorTicksDec +\n              1 +\n              (hasDec ? 1 : 0) -\n              right.length\n          ].join(\"0\") + right\n        );\n      }\n    }\n\n    return right;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Transforms degrees to radians\n   *\n   * @param {number} degrees\n   * @returns {number}\n   */\n  function radians(degrees) {\n    return (degrees * Math.PI) / 180;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Calculates and returns radial point coordinates\n   *\n   * @param {number} radius\n   * @param {number} angle\n   * @returns {{x: number, y: number}}\n   */\n  function radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Creates and returns linear gradient canvas object\n   *\n   * @param {Canvas2DContext} context\n   * @param {string} colorFrom\n   * @param {string} colorTo\n   * @param {number} length\n   * @param {boolean} [isVertical]\n   * @param {number} [from]\n   * @returns {CanvasGradient}\n   */\n  function linearGradient(context, colorFrom, colorTo, length) {\n    var isVertical =\n      arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    var from =\n      arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    var grad = context.createLinearGradient(\n      isVertical ? 0 : from,\n      isVertical ? from : 0,\n      isVertical ? 0 : length,\n      isVertical ? length : 0\n    );\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws the shadow if it was not drawn\n   *\n   * @param {Canvas2DContext} context\n   * @param {GenericOptions} options\n   * @param {boolean} shadowDrawn\n   * @return {boolean}\n   */\n  function drawShadow(context, options) {\n    var shadowDrawn =\n      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (shadowDrawn) {\n      context.restore();\n      return true;\n    }\n\n    context.save();\n\n    var w = options.borderShadowWidth;\n\n    if (w) {\n      context.shadowBlur = w;\n      context.shadowColor = options.colorBorderShadow;\n    }\n\n    return true;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge needle shadow\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Constructs font styles for canvas fonts\n   *\n   * @param {GenericOptions} options\n   * @param {string} target\n   * @param {number} baseSize\n   */\n  function font(options, target, baseSize) {\n    return (\n      options[\"font\" + target + \"Style\"] +\n      \" \" +\n      options[\"font\" + target + \"Weight\"] +\n      \" \" +\n      options[\"font\" + target + \"Size\"] * baseSize +\n      \"px \" +\n      options[\"font\" + target]\n    );\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Resets some context settings\n   *\n   * @param {Canvas2DContext} context\n   */\n  function reset(context) {\n    context.shadowOffsetX = null;\n    context.shadowOffsetY = null;\n    context.shadowBlur = null;\n    context.shadowColor = \"\";\n    context.strokeStyle = null;\n    context.lineWidth = 0;\n    context.save();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Declares to drow value text shadow if configured\n   *\n   * @param context\n   * @param options\n   * @param offset\n   * @param blur\n   */\n  function drawValueTextShadow(context, options, offset, blur) {\n    if (options.valueTextShadow) {\n      context.shadowOffsetX = offset;\n      context.shadowOffsetY = offset;\n      context.shadowBlur = blur;\n      context.shadowColor = options.colorValueTextShadow;\n    }\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws value box at given position\n   *\n   * @param {Canvas2DContext} context\n   * @param {GenericOptions} options\n   * @param {number|string} value\n   * @param {number} x\n   * @param {number} y\n   * @param {number} max\n   */\n  function drawValueBox(context, options, value, x, y, max) {\n    if (!options.valueBox) return;\n\n    reset(context);\n\n    var addLength = options.valueDec ? 1 + options.valueDec : 0;\n    var maxValueWidth = \"9\".repeat(\n      Math.max.apply(\n        null,\n        [String(parseInt(value)).length + addLength].concat(\n          options.majorTicks.map(function(val) {\n            return String(parseInt(val, 10)).length + addLength;\n          })\n        )\n      )\n    );\n    var text = options.valueText || padValue(value, options);\n    var tunit = max / 200;\n    var runit = max / 100;\n    var offset = 0.4 * runit;\n    var blur = 1.2 * runit;\n\n    context.font = font(options, \"Value\", tunit);\n    drawValueTextShadow(context, options, offset, blur);\n\n    var tw = context.measureText(\n      options.valueText ? text : \"-\" + padValue(Number(maxValueWidth), options)\n    ).width;\n\n    reset(context);\n\n    var th = parseFloat(options.fontValueSize) * tunit + offset + blur;\n    var sw = runit * parseFloat(options.valueBoxStroke);\n    var bmax = max * 2 - sw * 2;\n\n    var bw = tw + 10 * runit;\n    var bh = 1.1 * th + offset + blur;\n    var br = runit * options.valueBoxBorderRadius;\n    var obw = ((parseFloat(options.valueBoxWidth) || 0) / 100) * bmax;\n\n    obw > bw && (bw = obw);\n    bw > bmax && (bw = bmax);\n\n    var bx = x - bw / 2;\n    var by = y - bh / 2;\n    var gy = y - 5.75 * runit;\n\n    context.beginPath();\n\n    if (br) roundRect(context, bx, by, bw, bh, br);\n    else context.rect(bx, by, bw, bh);\n\n    if (sw) {\n      var grd = context.createRadialGradient(\n        x,\n        gy,\n        runit * 10,\n        x,\n        gy,\n        runit * 20\n      );\n\n      grd.addColorStop(0, options.colorValueBoxRect);\n      grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n      context.strokeStyle = grd;\n      context.lineWidth = sw;\n      context.stroke();\n    }\n\n    if (options.colorValueBoxShadow) {\n      context.shadowBlur = 1.2 * runit;\n      context.shadowColor = options.colorValueBoxShadow;\n    }\n\n    if (options.colorValueBoxBackground) {\n      context.fillStyle = options.colorValueBoxBackground;\n      context.fill();\n    }\n\n    context.closePath();\n    context.restore();\n\n    drawValueTextShadow(context, options, offset, blur);\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = \"center\";\n    context.textBaseline = \"alphabetic\";\n    context.fillText(text, bx + bw / 2, y + bh / 2 - th / 3);\n    context.restore();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Returns normalized value\n   *\n   * @param {GenericOptions} options\n   * @return {{normal: number, indented: number}}\n   */\n  function normalizedValue(options) {\n    var value = options.value;\n    var min = options.minValue;\n    var max = options.maxValue;\n    var dt = (max - min) * 0.01;\n\n    return {\n      normal: value < min ? min : value > max ? max : value,\n      indented: value < min ? min - dt : value > max ? max + dt : value\n    };\n  }\n\n  var drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient,\n    drawNeedleShadow: drawNeedleShadow,\n    drawValueBox: drawValueBox,\n    verifyError: verifyError,\n    prepareTicks: prepareTicks,\n    drawShadow: drawShadow,\n    font: font,\n    normalizedValue: normalizedValue\n  };\n\n  drawings;\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  var PI = Math.PI;\n  var HPI = PI / 2;\n\n  /**\n   * Gauge configuration options\n   *\n   * @typedef {GenericOptions|{exactTicks: boolean, ticksAngle: number, startAngle: number, angles: number[]|string[], colorNeedleCircleOuter: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInner: string, colorNeedleCircleInnerEnd: string, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean, animationTarget: string, useMinPath: boolean}} RadialGaugeOptions\n   */\n\n  /**\n   * Default gauge configuration options\n   *\n   * @access private\n   * @type {RadialGaugeOptions}\n   */\n  var defaultRadialGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksLengthAdd: 0,\n    ticksAngle: 270,\n    startAngle: 45,\n    angles: [45, 90, 135, 180, 225, 270],\n\n    // colors\n    colorNeedleCircleOuter: \"#f0f0f0\",\n    colorNeedleCircleOuterEnd: \"#ccc\",\n    colorNeedleCircleInner: \"#e8e8e8\",\n    colorNeedleCircleInnerEnd: \"#f5f5f5\",\n\n    // needle\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true,\n    needleStart: 20,\n\n    // custom animations\n    animationTarget: \"needle\", // 'needle' or 'plate'\n    useMinPath: false,\n    customAngles: false,\n\n    barWidth: 0\n  });\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gradient-filled circle on a canvas\n   *\n   * @access private\n   * @param {number} radius\n   * @param {number} width\n   * @param {Canvas2DContext} context\n   * @param {string} start gradient start color\n   * @param {string} end gradient end color\n   */\n  function drawRadialBorder(radius, width, context, start, end) {\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(radius), 0, PI * 2, true);\n    context.lineWidth = width;\n    context.strokeStyle = end\n      ? drawings.linearGradient(context, start, end, radius)\n      : start;\n    context.stroke();\n    context.closePath();\n  }\n\n  /* istnbul ignore next: private, not testable */\n  /**\n   * Returns max radius without borders for the gauge\n   *\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   * @return {number}\n   */\n  function maxRadialRadius(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n\n    if (!context.maxRadius) {\n      context.maxRadius =\n        context.max -\n        options.borderShadowWidth -\n        options.borderOuterWidth * pxRatio -\n        options.borderMiddleWidth * pxRatio -\n        options.borderInnerWidth * pxRatio +\n        (options.borderOuterWidth ? 0.5 : 0) +\n        (options.borderMiddleWidth ? 0.5 : 0) +\n        (options.borderInnerWidth ? 0.5 : 0);\n    }\n\n    return context.maxRadius;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge plate on the canvas\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawRadialPlate(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    var d0 = options.borderShadowWidth * pxRatio;\n    var r0 = context.max - d0 - (options.borderOuterWidth * pxRatio) / 2;\n    var r1 =\n      r0 -\n      (options.borderOuterWidth * pxRatio) / 2 -\n      (options.borderMiddleWidth * pxRatio) / 2 +\n      0.5;\n    var r2 =\n      r1 -\n      (options.borderMiddleWidth * pxRatio) / 2 -\n      (options.borderInnerWidth * pxRatio) / 2 +\n      0.5;\n    var r3 = maxRadialRadius(context, options);\n    var grad = void 0;\n    var shadowDrawn = false;\n\n    context.save();\n\n    if (options.borderOuterWidth) {\n      shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n      drawRadialBorder(\n        r0,\n        options.borderOuterWidth * pxRatio,\n        context,\n        options.colorBorderOuter,\n        options.colorBorderOuterEnd\n      );\n    }\n\n    if (options.borderMiddleWidth) {\n      shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n      drawRadialBorder(\n        r1,\n        options.borderMiddleWidth * pxRatio,\n        context,\n        options.colorBorderMiddle,\n        options.colorBorderMiddleEnd\n      );\n    }\n\n    if (options.borderInnerWidth) {\n      shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n      drawRadialBorder(\n        r2,\n        options.borderInnerWidth * pxRatio,\n        context,\n        options.colorBorderInner,\n        options.colorBorderInnerEnd\n      );\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(r3), 0, PI * 2, true);\n\n    if (options.colorPlateEnd) {\n      grad = context.createRadialGradient(0, 0, r3 / 2, 0, 0, r3);\n      grad.addColorStop(0, options.colorPlate);\n      grad.addColorStop(1, options.colorPlateEnd);\n    } else {\n      grad = options.colorPlate;\n    }\n\n    context.fillStyle = grad;\n\n    context.fill();\n    context.closePath();\n\n    context.restore();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge highlight areas on a canvas\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawRadialHighlights(context, options) {\n    var hlWidth =\n      (context.max * (parseFloat(options.highlightsWidth) || 0)) / 100;\n\n    if (!hlWidth) return;\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options) - hlWidth / 2);\n    var i = 0,\n      s = options.highlights.length;\n    var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n\n    context.save();\n\n    for (; i < s; i++) {\n      var hlt = options.highlights[i];\n\n      context.beginPath();\n\n      context.rotate(HPI);\n      context.arc(\n        0,\n        0,\n        r,\n        drawings.radians(\n          options.startAngle + (hlt.from - options.minValue) / vd\n        ),\n        drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd),\n        false\n      );\n      context.strokeStyle = hlt.color;\n      context.lineWidth = hlWidth;\n      context.stroke();\n      context.closePath();\n\n      context.restore();\n      context.save();\n    }\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws minor ticks bar on a canvas\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawRadialMinorTicks(context, options) {\n    var radius = radialTicksRadius(context, options);\n    var s = void 0,\n      range = void 0,\n      angle = void 0;\n    var i = 0;\n    var j = 1;\n    var c = 0;\n    var delta = 0;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks || options.colorStrokeTicks;\n\n    context.save();\n\n    if (options.exactTicks) {\n      range = options.maxValue - options.minValue;\n      s = minTicks ? range / minTicks : 0;\n      delta = (BaseGauge.mod(options.majorTicks[0], minTicks) || 0) * ratio;\n    } else {\n      s = minTicks * (options.majorTicks.length - 1);\n    }\n\n    if (options.customAngles) {\n      while (c < s) {\n        for (; j < options.angles.length; ++j) {\n          var tickAngle =\n            (options.angles[j] - options.angles[j - 1]) / minTicks;\n          for (i = 0; i < minTicks; ++i, ++c) {\n            angle = options.angles[j - 1] + i * tickAngle;\n            if (angle <= options.ticksAngle + options.startAngle) {\n              context.rotate(drawings.radians(angle));\n\n              context.beginPath();\n              context.moveTo(0, radius);\n              context.lineTo(0, radius - context.max * 0.075);\n              closeStrokedPath(context);\n            }\n          }\n        }\n      }\n    } else {\n      for (; i < s; ++i) {\n        angle = options.startAngle + delta + i * (options.ticksAngle / s);\n        if (angle <= options.ticksAngle + options.startAngle) {\n          context.rotate(drawings.radians(angle));\n\n          context.beginPath();\n          context.moveTo(0, radius);\n          context.lineTo(0, radius - context.max * 0.075);\n          closeStrokedPath(context);\n        }\n      }\n    }\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Returns ticks radius\n   *\n   * @access private\n   * @param context\n   * @param options\n   * @return {number}\n   */\n  function radialTicksRadius(context, options) {\n    var unit = context.max / 100;\n\n    return (\n      maxRadialRadius(context, options) -\n      5 * unit -\n      (options.barWidth\n        ? (parseFloat(options.barStrokeWidth) || 0) * 2 +\n          ((parseFloat(options.barWidth) || 0) + 5) * unit\n        : 0)\n    );\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge major ticks bar on a canvas\n   *\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawRadialMajorTicks(context, options) {\n    drawings.prepareTicks(options);\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options));\n    var i = void 0,\n      colors = void 0;\n    var angle = void 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.save();\n\n    colors =\n      options.colorMajorTicks instanceof Array\n        ? options.colorMajorTicks\n        : new Array(s).fill(\n            options.colorStrokeTicks || options.colorMajorTicks\n          );\n\n    i = 0;\n    if (options.customAngles) {\n      for (; i < s; ++i) {\n        angle = options.angles[i];\n        context.strokeStyle = colors[i];\n        context.rotate(drawings.radians(angle));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * 0.15 + options.ticksLengthAdd);\n        closeStrokedPath(context);\n      }\n    } else {\n      for (; i < s; ++i) {\n        context.strokeStyle = colors[i];\n        context.rotate(\n          drawings.radians(\n            radialNextAngle(\n              options,\n              options.exactTicks ? options.majorTicks[i] : i,\n              s\n            )\n          )\n        );\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * 0.15);\n        closeStrokedPath(context);\n      }\n    }\n\n    if (options.strokeTicks) {\n      context.strokeStyle = options.colorStrokeTicks || colors[0];\n      context.rotate(HPI);\n\n      context.beginPath();\n      context.arc(\n        0,\n        0,\n        r,\n        drawings.radians(options.startAngle),\n        drawings.radians(options.startAngle + options.ticksAngle),\n        false\n      );\n      closeStrokedPath(context);\n    }\n  }\n\n  /* istanbul ignore next: private, not testable */\n  function radialNextAngle(options, i, s) {\n    if (options.exactTicks) {\n      var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n      return options.startAngle + ratio * (i - options.minValue);\n    }\n\n    return options.startAngle + i * (options.ticksAngle / (s - 1));\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Strokes, closes path and restores previous context state\n   *\n   * @param {Canvas2DContext} context\n   */\n  function closeStrokedPath(context) {\n    context.stroke();\n    context.restore();\n    context.closePath();\n    context.save();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge bar numbers\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawRadialNumbers(context, options) {\n    var radius = radialTicksRadius(context, options) - context.max * 0.15;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n    var isAnimated = options.animationTarget !== \"needle\";\n    var colors =\n      options.colorNumbers instanceof Array\n        ? options.colorNumbers\n        : new Array(s).fill(options.colorNumbers);\n\n    var plateValueAngle = isAnimated\n      ? (-(options.value - options.minValue) /\n          (options.maxValue - options.minValue)) *\n        options.ticksAngle\n      : 0;\n\n    if (isAnimated) {\n      context.save();\n      context.rotate(-drawings.radians(plateValueAngle));\n    }\n\n    context.font = drawings.font(options, \"Numbers\", context.max / 200);\n    context.lineWidth = 0;\n    context.textAlign = \"center\";\n    context.textBaseline = \"middle\";\n\n    if (options.customAngles) {\n      for (; i < s; ++i) {\n        var angle = plateValueAngle + options.angles[i];\n        var textWidth = context.measureText(options.majorTicks[i]).width;\n        var textHeight = options.fontNumbersSize;\n        var textRadius =\n          Math.sqrt(textWidth * textWidth + textHeight * textHeight) / 2;\n        var point = drawings.radialPoint(\n          radius - textRadius - (options.numbersMargin / 100) * context.max,\n          drawings.radians(angle)\n        );\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n          continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.fillStyle = colors[i];\n        context.fillText(options.majorTicks[i], point.x, point.y);\n      }\n    } else {\n      for (; i < s; ++i) {\n        var angle =\n          plateValueAngle +\n          radialNextAngle(\n            options,\n            options.exactTicks ? options.majorTicks[i] : i,\n            s\n          );\n        var textWidth = context.measureText(options.majorTicks[i]).width;\n        var textHeight = options.fontNumbersSize;\n        var textRadius =\n          Math.sqrt(textWidth * textWidth + textHeight * textHeight) / 2;\n        var point = drawings.radialPoint(\n          radius - textRadius - (options.numbersMargin / 100) * context.max,\n          drawings.radians(angle)\n        );\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n          continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.fillStyle = colors[i];\n        context.fillText(options.majorTicks[i], point.x, point.y);\n      }\n    }\n\n    isAnimated && context.restore();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge title\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawRadialTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = drawings.font(options, \"Title\", context.max / 200);\n    context.fillStyle = options.colorTitle;\n    context.textAlign = \"center\";\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * 0.8);\n    context.restore();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws units name on the gauge\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawRadialUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = drawings.font(options, \"Units\", context.max / 200);\n    context.fillStyle = options.colorUnits;\n    context.textAlign = \"center\";\n    context.fillText(options.units, 0, context.max / 3.25, context.max * 0.8);\n    context.restore();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge needle\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawRadialNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value =\n      options.ticksAngle < 360\n        ? drawings.normalizedValue(options).indented\n        : options.value;\n    var angle = void 0;\n    var i = 0;\n    var max = maxRadialRadius(context, options);\n    //noinspection JSUnresolvedFunction\n    var r1 = abs((max / 100) * options.needleCircleSize);\n    //noinspection JSUnresolvedFunction\n    var r2 = abs((max / 100) * options.needleCircleSize * 0.75);\n    //noinspection JSUnresolvedFunction\n    var rIn = abs((max / 100) * options.needleEnd);\n    //noinspection JSUnresolvedFunction\n    var rStart = abs(\n      options.needleStart ? (max / 100) * options.needleStart : 0\n    );\n    //noinspection JSUnresolvedFunction\n    var pad1 = (max / 100) * options.needleWidth;\n    var pad2 = ((max / 100) * options.needleWidth) / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isFixed = options.animationTarget !== \"needle\";\n    var len = options.majorTicks.length;\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    if (options.customAngles) {\n      for (; i < len; ++i) {\n        var valueAngle =\n          (options.angles[i + 1] - options.angles[i]) /\n          (options.majorTicks[i + 1] - options.majorTicks[i]);\n        if (\n          value > options.majorTicks[i] &&\n          value < options.majorTicks[i + 1]\n        ) {\n          angle =\n            options.angles[i] + valueAngle * (value - options.majorTicks[i]);\n          break;\n        } else if (value == options.majorTicks[i]) {\n          angle = options.angles[i];\n          break;\n        } else if (options.value > options.majorTicks[len - 1]) {\n          angle = options.angles[len - 1] + 5;\n          break;\n        } else if (options.value < options.majorTicks[0]) {\n          angle = options.angles[0] - 5;\n          break;\n        } else {\n          angle = options.startAngle;\n        }\n      }\n      context.rotate(drawings.radians(isFixed ? options.startAngle : angle));\n    } else {\n      context.rotate(\n        drawings.radians(\n          isFixed\n            ? options.startAngle\n            : options.startAngle +\n                ((value - options.minValue) /\n                  (options.maxValue - options.minValue)) *\n                  options.ticksAngle\n        )\n      );\n    }\n    context.fillStyle = drawings.linearGradient(\n      context,\n      options.colorNeedle,\n      options.colorNeedleEnd,\n      rIn - rStart\n    );\n\n    if (options.needleType === \"arrow\") {\n      context.beginPath();\n      context.moveTo(-pad2, -rStart);\n      context.lineTo(-pad1, 0);\n      context.lineTo(-1 * pixelRatio, rIn);\n      context.lineTo(pixelRatio, rIn);\n      context.lineTo(pad1, 0);\n      context.lineTo(pad2, -rStart);\n      context.closePath();\n      context.fill();\n\n      context.beginPath();\n      context.lineTo(-0.5 * pixelRatio, rIn);\n      context.lineTo(-1 * pixelRatio, rIn);\n      context.lineTo(-pad1, 0);\n      context.lineTo(-pad2, -rStart);\n      context.lineTo((pad2 / 2) * pixelRatio - 2 * pixelRatio, -rStart);\n      context.closePath();\n      context.fillStyle = options.colorNeedleShadowUp;\n      context.fill();\n    } else {\n      // simple line needle\n      context.beginPath();\n      context.moveTo(-pad2, rIn);\n      context.lineTo(-pad2, rStart);\n      context.lineTo(pad2, rStart);\n      context.lineTo(pad2, rIn);\n      context.closePath();\n      context.fill();\n    }\n\n    if (options.needleCircleSize) {\n      context.restore();\n\n      drawings.drawNeedleShadow(context, options);\n\n      if (options.needleCircleOuter) {\n        context.beginPath();\n        context.arc(0, 0, r1, 0, PI * 2, true);\n        context.fillStyle = drawings.linearGradient(\n          context,\n          options.colorNeedleCircleOuter,\n          options.colorNeedleCircleOuterEnd,\n          r1\n        );\n        context.fill();\n        context.closePath();\n      }\n\n      if (options.needleCircleInner) {\n        context.beginPath();\n        context.arc(0, 0, r2, 0, PI * 2, true);\n        context.fillStyle = drawings.linearGradient(\n          context,\n          options.colorNeedleCircleInner,\n          options.colorNeedleCircleInnerEnd,\n          r2\n        );\n        context.fill();\n        context.closePath();\n      }\n\n      context.restore();\n    }\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge value box\n   *\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   * @param {number} value\n   */\n  function drawRadialValueBox(context, options, value) {\n    drawings.drawValueBox(\n      context,\n      options,\n      value,\n      0,\n      context.max - context.max * 0.33,\n      context.max\n    );\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge progress bar\n   *\n   * @param {Canvas2DContext} context\n   * @param {RadialGaugeOptions} options\n   */\n  function drawRadialProgressBar(context, options) {\n    var unit = context.max / 100;\n    var rMax = maxRadialRadius(context, options) - 5 * unit;\n    var sw = parseFloat(options.barStrokeWidth) || 0;\n    var w = (parseFloat(options.barWidth) || 0) * unit;\n    var rMin = rMax - sw * 2 - w;\n    var half = (rMax - rMin) / 2;\n    var r = rMin + half;\n    var delta = sw / r;\n    var sa = options.startAngle;\n    var ea = options.startAngle + options.ticksAngle;\n\n    context.save();\n    context.rotate(HPI);\n\n    if (sw) {\n      // draw stroke\n      context.beginPath();\n      context.arc(\n        0,\n        0,\n        r,\n        drawings.radians(sa) - delta,\n        drawings.radians(ea) + delta,\n        false\n      );\n      context.strokeStyle = options.colorBarStroke;\n      context.lineWidth = half * 2;\n      context.stroke();\n      context.closePath();\n    }\n\n    if (w) {\n      // draw bar\n      context.beginPath();\n      context.arc(0, 0, r, drawings.radians(sa), drawings.radians(ea), false);\n      context.strokeStyle = options.colorBar;\n      context.lineWidth = w;\n      context.stroke();\n      context.closePath();\n\n      if (options.barShadow) {\n        // draw shadow\n        context.beginPath();\n        context.arc(\n          0,\n          0,\n          rMax,\n          drawings.radians(sa),\n          drawings.radians(ea),\n          false\n        );\n        context.clip();\n\n        context.beginPath();\n        context.strokeStyle = options.colorBar;\n        context.lineWidth = 1;\n        context.shadowBlur = options.barShadow;\n        context.shadowColor = options.colorBarShadow;\n        context.shadowOffsetX = 0;\n        context.shadowOffsetY = 0;\n        context.arc(\n          0,\n          0,\n          rMax,\n          drawings.radians(options.startAngle),\n          drawings.radians(options.startAngle + options.ticksAngle),\n          false\n        );\n        context.stroke();\n        context.closePath();\n\n        context.restore();\n        context.rotate(HPI);\n      }\n\n      // draw bar progress\n      if (options.barProgress) {\n        context.beginPath();\n        context.arc(\n          0,\n          0,\n          r,\n          drawings.radians(sa),\n          drawings.radians(\n            sa +\n              ((drawings.normalizedValue(options).normal - options.minValue) /\n                (options.maxValue - options.minValue)) *\n                options.ticksAngle\n          ),\n          false\n        );\n        context.strokeStyle = options.colorBarProgress;\n        context.lineWidth = w;\n        context.stroke();\n        context.closePath();\n      }\n    }\n\n    context.restore();\n  }\n\n  /**\n   * Find and return gauge value to display\n   *\n   * @param {RadialGauge} gauge\n   */\n  function displayValue(gauge) {\n    if (gauge.options.animatedValue) {\n      return gauge.options.value;\n    }\n\n    return gauge.value;\n  }\n\n  /**\n   * Minimalistic HTML5 Canvas Gauge\n   * @example\n   *  var gauge = new RadialGauge({\n   *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\n   *     width: 400,\n   *     height: 400,\n   *     units: 'Km/h',\n   *     title: false,\n   *     value: 0,\n   *     minValue: 0,\n   *     maxValue: 220,\n   *     majorTicks: [\n   *         '0','20','40','60','80','100','120','140','160','180','200','220'\n   *     ],\n   *     minorTicks: 2,\n   *     strokeTicks: false,\n   *     highlights: [\n   *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n   *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n   *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n   *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n   *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n   *     ],\n   *     colorPlate: '#222',\n   *     colorMajorTicks: '#f5f5f5',\n   *     colorMinorTicks: '#ddd',\n   *     colorTitle: '#fff',\n   *     colorUnits: '#ccc',\n   *     colorNumbers: '#eee',\n   *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n   *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n   *     valueBox: true,\n   *     animationRule: 'bounce'\n   * });\n   * // draw initially\n   * gauge.draw();\n   * // animate\n   * setInterval(() => {\n   *    gauge.value = Math.random() * -220 + 220;\n   * }, 1000);\n   */\n\n  var RadialGauge = (function(_BaseGauge) {\n    _inherits(RadialGauge, _BaseGauge);\n\n    /**\n     * Fired each time before gauge plate is drawn\n     *\n     * @event RadialGauge#beforePlate\n     */\n\n    /**\n     * Fired each time before gauge highlight areas are drawn\n     *\n     * @event RadialGauge#beforeHighlights\n     */\n\n    /**\n     * Fired each time before gauge minor ticks are drawn\n     *\n     * @event RadialGauge#beforeMinorTicks\n     */\n\n    /**\n     * Fired each time before gauge major ticks are drawn\n     *\n     * @event RadialGauge#beforeMajorTicks\n     */\n\n    /**\n     * Fired each time before gauge tick numbers are drawn\n     *\n     * @event RadialGauge#beforeNumbers\n     */\n\n    /**\n     * Fired each time before gauge title is drawn\n     *\n     * @event RadialGauge#beforeTitle\n     */\n\n    /**\n     * Fired each time before gauge units text is drawn\n     *\n     * @event RadialGauge#beforeUnits\n     */\n\n    /**\n     * Fired each time before gauge progress bar is drawn\n     *\n     * @event RadialGauge#beforeProgressBar\n     */\n\n    /**\n     * Fired each time before gauge value box is drawn\n     *\n     * @event RadialGauge#beforeValueBox\n     */\n\n    /**\n     * Fired each time before gauge needle is drawn\n     *\n     * @event RadialGauge#beforeNeedle\n     */\n\n    /**\n     * @constructor\n     * @param {RadialGaugeOptions} options\n     */\n    function RadialGauge(options) {\n      _classCallCheck(this, RadialGauge);\n\n      options = Object.assign({}, defaultRadialGaugeOptions, options || {});\n      return _possibleConstructorReturn(\n        this,\n        (RadialGauge.__proto__ || Object.getPrototypeOf(RadialGauge)).call(\n          this,\n          RadialGauge.configure(options)\n        )\n      );\n    }\n\n    /**\n     * Checks and updates gauge options properly\n     *\n     * @param {*} options\n     * @return {*}\n     * @access protected\n     */\n\n    _createClass(\n      RadialGauge,\n      [\n        {\n          key: \"draw\",\n\n          /**\n           * Triggering gauge render on a canvas.\n           *\n           * @returns {RadialGauge}\n           */\n          value: function draw() {\n            try {\n              var canvas = this.canvas;\n              var _ref = [\n                  -canvas.drawX,\n                  -canvas.drawY,\n                  canvas.drawWidth,\n                  canvas.drawHeight\n                ],\n                x = _ref[0],\n                y = _ref[1],\n                w = _ref[2],\n                h = _ref[3];\n\n              var options = this.options;\n\n              if (options.animationTarget === \"needle\") {\n                if (!canvas.elementClone.initialized) {\n                  var context = canvas.contextClone;\n\n                  // clear the cache\n                  context.clearRect(x, y, w, h);\n                  context.save();\n\n                  this.emit(\"beforePlate\");\n                  drawRadialPlate(context, options);\n                  this.emit(\"beforeHighlights\");\n                  drawRadialHighlights(context, options);\n                  this.emit(\"beforeMinorTicks\");\n                  drawRadialMinorTicks(context, options);\n                  this.emit(\"beforeMajorTicks\");\n                  drawRadialMajorTicks(context, options);\n                  this.emit(\"beforeNumbers\");\n                  drawRadialNumbers(context, options);\n                  this.emit(\"beforeTitle\");\n                  drawRadialTitle(context, options);\n                  this.emit(\"beforeUnits\");\n                  drawRadialUnits(context, options);\n\n                  canvas.elementClone.initialized = true;\n                }\n\n                this.canvas.commit();\n\n                // clear the canvas\n                canvas.context.clearRect(x, y, w, h);\n                canvas.context.save();\n\n                canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                canvas.context.save();\n\n                this.emit(\"beforeProgressBar\");\n                drawRadialProgressBar(canvas.context, options);\n                this.emit(\"beforeValueBox\");\n                drawRadialValueBox(canvas.context, options, displayValue(this));\n                this.emit(\"beforeNeedle\");\n                drawRadialNeedle(canvas.context, options);\n              } else {\n                var plateValueAngle = -drawings.radians(\n                  ((options.value - options.minValue) /\n                    (options.maxValue - options.minValue)) *\n                    options.ticksAngle\n                );\n\n                // clear the canvas\n                canvas.context.clearRect(x, y, w, h);\n                canvas.context.save();\n\n                this.emit(\"beforePlate\");\n                drawRadialPlate(canvas.context, options);\n\n                canvas.context.rotate(plateValueAngle);\n\n                // animated\n                this.emit(\"beforeHighlights\");\n                drawRadialHighlights(canvas.context, options);\n                this.emit(\"beforeMinorTicks\");\n                drawRadialMinorTicks(canvas.context, options);\n                this.emit(\"beforeMajorTicks\");\n                drawRadialMajorTicks(canvas.context, options);\n                this.emit(\"beforeNumbers\");\n                drawRadialNumbers(canvas.context, options);\n                this.emit(\"beforeProgressBar\");\n                drawRadialProgressBar(canvas.context, options);\n\n                // non-animated\n                canvas.context.rotate(-plateValueAngle);\n                canvas.context.save();\n\n                if (!canvas.elementClone.initialized) {\n                  var _context = canvas.contextClone;\n\n                  // clear the cache\n                  _context.clearRect(x, y, w, h);\n                  _context.save();\n\n                  this.emit(\"beforeTitle\");\n                  drawRadialTitle(_context, options);\n                  this.emit(\"beforeUnits\");\n                  drawRadialUnits(_context, options);\n                  this.emit(\"beforeNeedle\");\n                  drawRadialNeedle(_context, options);\n\n                  canvas.elementClone.initialized = true;\n                }\n\n                canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n              }\n\n              // value box animations\n              this.emit(\"beforeValueBox\");\n              drawRadialValueBox(canvas.context, options, displayValue(this));\n\n              _get(\n                RadialGauge.prototype.__proto__ ||\n                  Object.getPrototypeOf(RadialGauge.prototype),\n                \"draw\",\n                this\n              ).call(this);\n            } catch (err) {\n              drawings.verifyError(err);\n            }\n\n            return this;\n          }\n        },\n        {\n          key: \"value\",\n\n          /**\n           * Sets the value for radial gauge\n           *\n           * @param {number} value\n           */\n          set: function set(value) {\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            if (\n              this.options.animation &&\n              this.options.ticksAngle === 360 &&\n              this.options.useMinPath\n            ) {\n              this._value = value;\n              value =\n                this.options.value +\n                ((((value - this.options.value) % 360) + 540) % 360) -\n                180;\n            }\n\n            _set(\n              RadialGauge.prototype.__proto__ ||\n                Object.getPrototypeOf(RadialGauge.prototype),\n              \"value\",\n              value,\n              this\n            );\n          },\n\n          /**\n           * Returns current gauge value\n           *\n           * @return {number}\n           */\n          get: function get() {\n            return _get(\n              RadialGauge.prototype.__proto__ ||\n                Object.getPrototypeOf(RadialGauge.prototype),\n              \"value\",\n              this\n            );\n          }\n        }\n      ],\n      [\n        {\n          key: \"configure\",\n          value: function configure(options) {\n            if (options.barWidth > 50) options.barWidth = 50;\n\n            /* istanbul ignore if */\n            if (isNaN(options.startAngle)) options.startAngle = 45;\n            /* istanbul ignore if */\n            if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n            /* istanbul ignore if */\n            if (options.ticksAngle > 360) options.ticksAngle = 360;\n            /* istanbul ignore if */\n            if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n            /* istanbul ignore if */\n            if (options.startAngle < 0) options.startAngle = 0;\n            /* istanbul ignore if */\n            if (options.startAngle > 360) options.startAngle = 360;\n\n            return options;\n          }\n        }\n      ]\n    );\n\n    return RadialGauge;\n  })(BaseGauge);\n\n  /**\n   * @ignore\n   * @typedef {object} ns\n   */\n  /* istanbul ignore if */\n\n  if (typeof ns !== \"undefined\") {\n    ns[\"RadialGauge\"] = RadialGauge;\n  }\n\n  BaseGauge.initialize(\"RadialGauge\", defaultRadialGaugeOptions);\n\n  /*!\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * Linear gauge configuration options\n   *\n   * @typedef {GenericOptions|{borderRadius: number, barBeginCircle: number, tickSide: string, needleSide: string, numberSide: string, ticksWidth: number, ticksWidthMinor: number, ticksPadding: number, barLength: number, colorBarEnd: string, colorBarProgressEnd: string}} LinearGaugeOptions\n   */\n\n  /**\n   * Default linear gauge configuration options\n   *\n   * @type {LinearGaugeOptions}\n   */\n  var defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    // width: 150,\n    // height: 400,\n\n    // bar\n    barBeginCircle: 30, // percents\n    colorBarEnd: \"\",\n    colorBarProgressEnd: \"\",\n\n    needleWidth: 6,\n\n    tickSide: \"both\", // available: 'left', 'right', 'both'\n    needleSide: \"both\", // available: 'left', 'right', 'both'\n\n    numberSide: \"both\", // available: 'left', 'right', 'both'\n\n    ticksWidth: 10,\n    ticksWidthMinor: 5,\n    ticksPadding: 5,\n    barLength: 85,\n    fontTitleSize: 26,\n\n    highlightsWidth: 10\n  });\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws rectangle on a canvas\n   *\n   * @param {Canvas2DContext} context\n   * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n   * @param {number} x x-coordinate of the top-left corner\n   * @param {number} y y-coordinate of the top-left corner\n   * @param {number} w width of the rectangle\n   * @param {number} h height of the rectangle\n   * @param {string} colorStart base fill color of the rectangle\n   * @param {string} [colorEnd] gradient color of the rectangle\n   */\n  function drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd\n      ? drawings.linearGradient(\n          context,\n          colorStart,\n          colorEnd,\n          w > h ? w : h,\n          h > w,\n          w > h ? x : y\n        )\n      : colorStart;\n\n    r > 0\n      ? drawings.roundRect(context, x, y, w, h, r)\n      : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws rectangle on a canvas\n   *\n   * @param {Canvas2DContext} context\n   * @param {number} width width of the border\n   * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n   * @param {number} x x-coordinate of the top-left corner\n   * @param {number} y y-coordinate of the top-left corner\n   * @param {number} w width of the rectangle\n   * @param {number} h height of the rectangle\n   * @param {string} colorStart base fill color of the rectangle\n   * @param {string} [colorEnd] gradient color of the rectangle\n   */\n  function drawLinearBorder(\n    context,\n    width,\n    r,\n    x,\n    y,\n    w,\n    h,\n    colorStart,\n    colorEnd\n  ) {\n    context.beginPath();\n    context.lineWidth = width;\n    context.strokeStyle = colorEnd\n      ? drawings.linearGradient(context, colorStart, colorEnd, h, true, y)\n      : colorStart;\n\n    r > 0\n      ? drawings.roundRect(context, x, y, w, h, r)\n      : context.rect(x, y, w, h);\n\n    context.stroke();\n    context.closePath();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws linear gauge plate\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   */\n  function drawLinearPlate(context, options, x, y, w, h) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    context.save();\n\n    var r = options.borderRadius * pxRatio;\n    var w1 = w - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var w2 =\n      w1 -\n      options.borderOuterWidth * pxRatio -\n      options.borderMiddleWidth * pxRatio;\n    var w3 =\n      w2 -\n      options.borderMiddleWidth * pxRatio -\n      options.borderInnerWidth * pxRatio;\n    var w4 = w3 - options.borderInnerWidth * pxRatio;\n\n    var h1 = h - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var h2 =\n      h1 -\n      options.borderOuterWidth * pxRatio -\n      options.borderMiddleWidth * pxRatio;\n    var h3 =\n      h2 -\n      options.borderMiddleWidth * pxRatio -\n      options.borderInnerWidth * pxRatio;\n    var h4 = h3 - options.borderInnerWidth * pxRatio;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n    var aliasingOffset = 0;\n    var shadowDrawn = false;\n\n    if (options.borderOuterWidth) {\n      shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n      drawLinearBorder(\n        context,\n        options.borderOuterWidth * pxRatio,\n        r,\n        x + (options.borderOuterWidth * pxRatio) / 2 - aliasingOffset,\n        y + (options.borderOuterWidth * pxRatio) / 2 - aliasingOffset,\n        w1,\n        h1,\n        options.colorBorderOuter,\n        options.colorBorderOuterEnd\n      );\n      aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderMiddleWidth) {\n      shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n      drawLinearBorder(\n        context,\n        options.borderMiddleWidth * pxRatio,\n        (r -= 1 + aliasingOffset * 2),\n        x2 + (options.borderMiddleWidth * pxRatio) / 2 - aliasingOffset,\n        y2 + (options.borderMiddleWidth * pxRatio) / 2 - aliasingOffset,\n        w2 + aliasingOffset * 2,\n        h2 + aliasingOffset * 2,\n        options.colorBorderMiddle,\n        options.colorBorderMiddleEnd\n      );\n      aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderInnerWidth) {\n      shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n      drawLinearBorder(\n        context,\n        options.borderInnerWidth * pxRatio,\n        (r -= 1 + aliasingOffset * 2),\n        x3 + (options.borderInnerWidth * pxRatio) / 2 - aliasingOffset,\n        y3 + (options.borderInnerWidth * pxRatio) / 2 - aliasingOffset,\n        w3 + aliasingOffset * 2,\n        h3 + aliasingOffset * 2,\n        options.colorBorderInner,\n        options.colorBorderInnerEnd\n      );\n      aliasingOffset += 0.5 * pxRatio;\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    drawRectangle(\n      context,\n      r,\n      x4,\n      y4,\n      w4 + aliasingOffset * 2,\n      h4 + aliasingOffset * 2,\n      options.colorPlate,\n      options.colorPlateEnd\n    );\n\n    context.restore();\n\n    return [x4, y4, w4, h4];\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Calculates and returns linear gauge base bar dimensions.\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions|{barStrokeWidth: number, barBeginCircle: number, barWidth: number, hasLeft: boolean, hasRight: boolean}} options\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   * @return {{isVertical: boolean, width: number, length: number, barWidth: number, barLength: number, strokeWidth: number, barMargin: number, radius: number, x0: number, y0: number, barOffset: number, titleMargin: number, unitsMargin: number, X: number, Y: number, baseX: number, baseY: number, ticksPadding: number}}\n   */\n  function barDimensions(context, options, x, y, w, h) {\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isVertical = h >= w;\n    var width = isVertical ? w * 0.85 : h;\n    var length = isVertical ? h : w;\n\n    //noinspection JSUnresolvedFunction\n    x = isVertical ? round(x + (w - width) / 2) : x;\n\n    var hasTitle = !!options.title;\n    var hasUnits = !!options.units;\n    var hasValue = !!options.valueBox;\n\n    var titleMargin = void 0;\n    var unitsMargin = void 0;\n    var valueMargin = void 0;\n\n    if (isVertical) {\n      //noinspection JSUnresolvedFunction\n      unitsMargin = round(length * 0.05);\n      //noinspection JSUnresolvedFunction\n      titleMargin = round(length * 0.075);\n      //noinspection JSUnresolvedFunction\n      valueMargin = round(length * 0.11);\n\n      if (hasTitle) {\n        length -= titleMargin;\n        y += titleMargin;\n      }\n\n      if (hasUnits) length -= unitsMargin;\n      if (hasValue) length -= valueMargin;\n    } else {\n      //noinspection JSUnresolvedFunction\n      unitsMargin = titleMargin = round(width * 0.15);\n\n      if (hasTitle) {\n        width -= titleMargin;\n        y += titleMargin;\n      }\n\n      if (hasUnits) width -= unitsMargin;\n    }\n\n    var strokeWidth = options.barStrokeWidth * 2;\n    //noinspection JSUnresolvedFunction\n    var radius = options.barBeginCircle\n      ? round((width * options.barBeginCircle) / 200 - strokeWidth / 2)\n      : 0;\n    //noinspection JSUnresolvedFunction\n    var barWidth = round((width * options.barWidth) / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barLength = round((length * options.barLength) / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barMargin = round((length - barLength) / 2);\n\n    // coordinates for arc of the bar if configured\n    //noinspection JSUnresolvedFunction\n    var x0 = round(x + (isVertical ? width / 2 : barMargin + radius));\n    //noinspection JSUnresolvedFunction\n    var y0 = round(\n      y +\n        (isVertical ? length - barMargin - radius + strokeWidth / 2 : width / 2)\n    );\n    var dx =\n      isVertical && !(options.hasLeft && options.hasRight)\n        ? (((options.hasRight ? -1 : 1) * options.ticksWidth) / 100) * width\n        : 0;\n    var dy =\n      !isVertical && !(options.hasLeft && options.hasRight)\n        ? (((options.hasRight ? -1 : 1) * options.ticksWidth) / 100) * width\n        : 0;\n\n    //noinspection JSUndefinedPropertyAssignment\n    context.barDimensions = {\n      isVertical: isVertical,\n      width: width,\n      length: length,\n      barWidth: barWidth,\n      barLength: barLength,\n      strokeWidth: strokeWidth,\n      barMargin: barMargin,\n      radius: radius,\n      pixelRatio: pixelRatio,\n      barOffset: null,\n      titleMargin: hasTitle ? titleMargin : 0,\n      unitsMargin: hasUnits ? unitsMargin : 0,\n      get ticksLength() {\n        return this.barLength - this.barOffset - this.strokeWidth;\n      },\n      X: x + dx,\n      Y: y + dy,\n      x0: x0 + dx,\n      y0: y0 + dy,\n      baseX: x,\n      baseY: y,\n      ticksPadding: options.ticksPadding / 100\n    };\n\n    return context.barDimensions;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws bar shape from the given options on a given canvas context\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   * @param {string} type\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   */\n  function drawLinearBarShape(context, options, type, x, y, w, h) {\n    var _barDimensions = barDimensions(context, options, x, y, w, h),\n      isVertical = _barDimensions.isVertical,\n      width = _barDimensions.width,\n      barWidth = _barDimensions.barWidth,\n      barLength = _barDimensions.barLength,\n      strokeWidth = _barDimensions.strokeWidth,\n      barMargin = _barDimensions.barMargin,\n      radius = _barDimensions.radius,\n      x0 = _barDimensions.x0,\n      y0 = _barDimensions.y0,\n      X = _barDimensions.X,\n      Y = _barDimensions.Y;\n\n    var fullBarLength = barLength;\n\n    context.save();\n    context.beginPath();\n\n    if (options.barBeginCircle) {\n      var direction = drawings.radians(isVertical ? 270 : 0);\n      var alpha = Math.asin(barWidth / 2 / radius);\n      var cosAlpha = Math.cos(alpha);\n      var sinAlpha = Math.sin(alpha);\n\n      var x1 =\n        x0 +\n        (isVertical ? radius * sinAlpha : radius * cosAlpha - strokeWidth / 2);\n      var y1 = isVertical ? y0 - radius * cosAlpha : y0 + radius * sinAlpha;\n      //noinspection JSUnresolvedFunction\n      var cutRadius = isVertical ? abs(y1 - y0) : abs(x1 - x0);\n\n      //noinspection JSUnresolvedFunction\n      context.barDimensions.barOffset = round(cutRadius + radius);\n\n      // bottom point\n      //noinspection JSUnresolvedFunction\n      var x2 = isVertical ? round(x0 - radius * sinAlpha) : x1;\n      //noinspection JSUnresolvedFunction\n      var y2 = isVertical ? y1 : round(y0 - radius * sinAlpha);\n\n      if (type === \"progress\") {\n        barLength =\n          context.barDimensions.barOffset +\n          ((barLength - context.barDimensions.barOffset) *\n            (drawings.normalizedValue(options).normal - options.minValue)) /\n            (options.maxValue - options.minValue);\n      }\n\n      // bar ends at\n      //noinspection JSUnresolvedFunction\n      var x3 = round(\n        x1 + barLength - context.barDimensions.barOffset + strokeWidth / 2\n      ); // h\n      //noinspection JSUnresolvedFunction\n      var y3 = round(\n        y1 - barLength + context.barDimensions.barOffset - strokeWidth / 2\n      ); // v\n\n      context.arc(x0, y0, radius, direction + alpha, direction - alpha);\n\n      if (isVertical) {\n        context.moveTo(x1, y2);\n        context.lineTo(x1, y3);\n        context.lineTo(x2, y3);\n        context.lineTo(x2, y2);\n      } else {\n        context.moveTo(x1, y2);\n        context.lineTo(x3, y2);\n        context.lineTo(x3, y1);\n        context.lineTo(x1, y1);\n      }\n    } else {\n      // simply rectangle\n      //noinspection JSUnresolvedFunction\n      var rx = round(isVertical ? X + (width - barWidth) / 2 : X + barMargin);\n      //noinspection JSUnresolvedFunction\n      var ry = round(\n        isVertical ? Y + barLength + barMargin : Y + (width - barWidth) / 2\n      );\n\n      if (type === \"progress\") {\n        barLength *=\n          (options.value - options.minValue) /\n          (options.maxValue - options.minValue);\n      }\n\n      if (isVertical) context.rect(rx, ry, barWidth, -barLength);\n      else context.rect(rx, ry, barLength, barWidth);\n    }\n\n    if (type !== \"progress\" && options.barStrokeWidth) {\n      context.lineWidth = strokeWidth;\n      context.strokeStyle = options.colorBarStroke;\n      //context.lineJoin = 'round';\n      context.stroke();\n    }\n\n    if (type !== \"progress\" && options.colorBar) {\n      context.fillStyle = options.colorBarEnd\n        ? drawings.linearGradient(\n            context,\n            options.colorBar,\n            options.colorBarEnd,\n            barLength,\n            isVertical,\n            isVertical ? Y : X\n          )\n        : options.colorBar;\n      context.fill();\n    } else if (type === \"progress\" && options.colorBarProgress) {\n      context.fillStyle = options.colorBarProgressEnd\n        ? drawings.linearGradient(\n            context,\n            options.colorBarProgress,\n            options.colorBarProgressEnd,\n            fullBarLength,\n            isVertical,\n            isVertical ? Y : X\n          )\n        : options.colorBarProgress;\n      context.fill();\n    }\n\n    context.closePath();\n\n    // fix dimensions for further usage\n    if (options.barBeginCircle) context.barDimensions.radius += strokeWidth;\n\n    context.barDimensions.barWidth += strokeWidth;\n    context.barDimensions.barLength += strokeWidth;\n  }\n\n  /**\n   * Draws gauge bar\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   * @param {number} x x-coordinate of the top-left corner of the gauge\n   * @param {number} y y-coordinate of the top-left corner of the gauge\n   * @param {number} w width of the gauge\n   * @param {number} h height of the gauge\n   */\n  function drawLinearBar(context, options, x, y, w, h) {\n    drawLinearBarShape(context, options, \"\", x, y, w, h);\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Helper function to calculate bar ticks presence on the sides\n   *\n   * @param {string} notWhich\n   * @param {LinearGaugeOptions} options\n   * @return {boolean}\n   */\n  function hasTicksBar(notWhich, options) {\n    return (\n      options.needleSide !== notWhich ||\n      options.tickSide !== notWhich ||\n      options.numberSide !== notWhich\n    );\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge bar progress\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   * @param {number} x x-coordinate of the top-left corner of the gauge\n   * @param {number} y y-coordinate of the top-left corner of the gauge\n   * @param {number} w width of the gauge\n   * @param {number} h height of the gauge\n   */\n  function drawLinearBarProgress(context, options, x, y, w, h) {\n    options.barProgress &&\n      drawLinearBarShape(context, options, \"progress\", x, y, w, h);\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws gauge bar highlighted areas\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   */\n  function drawLinearBarHighlights(context, options) {\n    var _context$barDimension = context.barDimensions,\n      isVertical = _context$barDimension.isVertical,\n      width = _context$barDimension.width,\n      length = _context$barDimension.length,\n      barWidth = _context$barDimension.barWidth,\n      barOffset = _context$barDimension.barOffset,\n      barMargin = _context$barDimension.barMargin,\n      X = _context$barDimension.X,\n      Y = _context$barDimension.Y,\n      ticksLength = _context$barDimension.ticksLength,\n      ticksPadding = _context$barDimension.ticksPadding;\n\n    var hlWidth = (width * (parseFloat(options.highlightsWidth) || 0)) / 100;\n\n    if (!options.highlights || !hlWidth) return;\n\n    var hasLeft = options.tickSide !== \"right\";\n    var hasRight = options.tickSide !== \"left\";\n    var i = 0;\n    var s = options.highlights.length;\n    var tickOffset = (width - barWidth) / 2;\n    var interval = options.maxValue - options.minValue;\n    //noinspection JSUnresolvedFunction\n    var eX = round(isVertical ? X + tickOffset : X + barMargin + barOffset);\n    var eH = hlWidth;\n    var eY = isVertical ? Y + length - barMargin - barOffset : Y + tickOffset;\n    //noinspection JSUnresolvedFunction\n    var hLeft =\n      round((options.ticksWidth / 100 + ticksPadding) * width) +\n      (hlWidth - (options.ticksWidth / 100) * width);\n    //noinspection JSUnresolvedFunction\n    var hRight = round(barWidth + ticksPadding * width);\n\n    context.save();\n\n    for (; i < s; i++) {\n      var entry = options.highlights[i];\n      //noinspection JSUnresolvedFunction\n      var eStart =\n        (ticksLength * abs(options.minValue - entry.from)) / interval;\n      //noinspection JSUnresolvedFunction\n      var eW = ticksLength * abs((entry.to - entry.from) / interval);\n\n      context.beginPath();\n      context.fillStyle = entry.color;\n\n      if (isVertical) {\n        if (hasLeft) context.rect(eX - hLeft, eY - eStart, eH, -eW);\n\n        if (hasRight) context.rect(eX + hRight, eY - eStart, eH, -eW);\n      } else {\n        if (hasLeft) context.rect(eX + eStart, eY - hLeft, eW, eH);\n\n        if (hasRight) context.rect(eX + eStart, eY + hRight, eW, eH);\n      }\n\n      context.fill();\n      context.closePath();\n    }\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws a tick line on a linear gauge\n   *\n   * @param {Canvas2DContext} context\n   * @param x1\n   * @param y1\n   * @param x2\n   * @param y2\n   */\n  function drawLinearTick(context, x1, y1, x2, y2) {\n    context.beginPath();\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n\n    context.closePath();\n    context.save();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws ticks\n   *\n   * @param {Canvas2DContext} context\n   * @param {string} color\n   * @param {number[]} ticks\n   * @param {number} minVal\n   * @param {number} maxVal\n   * @param {boolean} hasLeft\n   * @param {boolean} hasRight\n   * @param {number} lineWidth\n   * @param {number} lineLength\n   */\n  function drawLinearTicks(\n    context,\n    color,\n    ticks,\n    minVal,\n    maxVal,\n    hasLeft,\n    hasRight,\n    lineWidth,\n    lineLength\n  ) {\n    var _context$barDimension2 = context.barDimensions,\n      isVertical = _context$barDimension2.isVertical,\n      length = _context$barDimension2.length,\n      barWidth = _context$barDimension2.barWidth,\n      barOffset = _context$barDimension2.barOffset,\n      barMargin = _context$barDimension2.barMargin,\n      pixelRatio = _context$barDimension2.pixelRatio,\n      width = _context$barDimension2.width,\n      X = _context$barDimension2.X,\n      Y = _context$barDimension2.Y,\n      ticksLength = _context$barDimension2.ticksLength,\n      ticksPadding = _context$barDimension2.ticksPadding;\n\n    var tickOffset = (width - barWidth) / 2;\n    var tickX = void 0,\n      tickY = void 0;\n    var i = 0;\n    var s = ticks.length;\n    var val = void 0;\n    var tickLen = lineLength * width;\n    var tickLeft = tickOffset - ticksPadding * width;\n    var tickRight = tickOffset + barWidth + tickLen + ticksPadding * width;\n    var colors =\n      color instanceof Array ? color : new Array(ticks.length).fill(color);\n\n    context.lineWidth = lineWidth * pixelRatio;\n    context.save();\n\n    var ratio = ticksLength / (maxVal - minVal);\n    for (; i < s; i++) {\n      val = ticks[i];\n      context.strokeStyle = colors[i];\n\n      if (isVertical) {\n        tickY = Y + length - barMargin - barOffset + (minVal - val) * ratio;\n\n        if (hasLeft) {\n          tickX = X + tickLeft;\n          //noinspection JSUnresolvedFunction\n          drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n        }\n\n        if (hasRight) {\n          tickX = X + tickRight;\n          //noinspection JSUnresolvedFunction\n          drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n        }\n      } else {\n        tickX = X + barMargin + barOffset - (minVal - val) * ratio;\n\n        if (hasLeft) {\n          tickY = Y + tickLeft;\n          //noinspection JSUnresolvedFunction\n          drawLinearTick(context, tickX, tickY, tickX, round(tickY - tickLen));\n        }\n\n        if (hasRight) {\n          tickY = Y + tickRight;\n          //noinspection JSUnresolvedFunction\n          drawLinearTick(context, tickX, round(tickY), tickX, tickY - tickLen);\n        }\n      }\n    }\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws major ticks\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   */\n  function drawLinearMajorTicks(context, options) {\n    var _drawings$prepareTick = drawings.prepareTicks(options),\n      _drawings$prepareTick2 = _slicedToArray(_drawings$prepareTick, 2),\n      hasLeft = _drawings$prepareTick2[0],\n      hasRight = _drawings$prepareTick2[1];\n\n    var lineWidth = 2;\n    var valuePerNonExactTick =\n      (options.maxValue - options.minValue) / (options.majorTicks.length - 1);\n    var colors =\n      options.colorMajorTicks instanceof Array\n        ? options.colorMajorTicks\n        : new Array(options.majorTicks.length).fill(\n            options.colorStrokeTicks || options.colorMajorTicks\n          );\n    var ticks = options.exactTicks\n      ? options.majorTicks\n      : options.majorTicks.map(function(tick, i) {\n          return options.minValue + valuePerNonExactTick * i;\n        });\n\n    drawLinearTicks(\n      context,\n      colors,\n      ticks,\n      options.minValue,\n      options.maxValue,\n      hasLeft,\n      hasRight,\n      lineWidth,\n      options.ticksWidth / 100\n    );\n\n    if (options.strokeTicks) {\n      var _context$barDimension3 = context.barDimensions,\n        isVertical = _context$barDimension3.isVertical,\n        length = _context$barDimension3.length,\n        width = _context$barDimension3.width,\n        barWidth = _context$barDimension3.barWidth,\n        barMargin = _context$barDimension3.barMargin,\n        barOffset = _context$barDimension3.barOffset,\n        X = _context$barDimension3.X,\n        Y = _context$barDimension3.Y,\n        ticksLength = _context$barDimension3.ticksLength,\n        pixelRatio = _context$barDimension3.pixelRatio,\n        ticksPadding = _context$barDimension3.ticksPadding;\n\n      var rightTicks = (width - barWidth) / 2 + barWidth + ticksPadding * width;\n      var leftTicks = (width - barWidth) / 2 - ticksPadding * width;\n      var sX = void 0,\n        sY = void 0,\n        eX = void 0,\n        eY = void 0;\n\n      context.strokeStyle = options.colorStrokeTicks || colors[0];\n\n      lineWidth *= pixelRatio;\n\n      if (isVertical) {\n        sY = Y + length - barMargin - barOffset + lineWidth / 2;\n        eY = sY - ticksLength - lineWidth;\n\n        if (hasLeft) {\n          //noinspection JSUnresolvedFunction\n          eX = sX = round(X + leftTicks);\n          drawLinearTickStroke(context, sX, sY, eX, eY);\n        }\n\n        if (hasRight) {\n          //noinspection JSUnresolvedFunction\n          eX = sX = round(X + rightTicks);\n          drawLinearTickStroke(context, sX, sY, eX, eY);\n        }\n      } else {\n        sX = X + barMargin + barOffset - lineWidth / 2;\n        eX = sX + ticksLength + lineWidth;\n\n        if (hasLeft) {\n          //noinspection JSUnresolvedFunction\n          eY = sY = round(Y + leftTicks);\n          drawLinearTickStroke(context, sX, sY, eX, eY);\n        }\n\n        if (hasRight) {\n          //noinspection JSUnresolvedFunction\n          eY = sY = round(Y + rightTicks);\n          drawLinearTickStroke(context, sX, sY, eX, eY);\n        }\n      }\n    }\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws ticks stroke\n   *\n   * @param {Canvas2DContext} context\n   * @param {number} sX\n   * @param {number} sY\n   * @param {number} eX\n   * @param {number} eY\n   */\n  function drawLinearTickStroke(context, sX, sY, eX, eY) {\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws minor ticks\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   */\n  function drawLinearMinorTicks(context, options) {\n    var _drawings$prepareTick3 = drawings.prepareTicks(options),\n      _drawings$prepareTick4 = _slicedToArray(_drawings$prepareTick3, 2),\n      hasLeft = _drawings$prepareTick4[0],\n      hasRight = _drawings$prepareTick4[1];\n\n    var ticks = [];\n    var i = options.minValue;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var valuePerNonExactTick = minTicks\n      ? (options.maxValue - options.minValue) /\n        (minTicks * (options.majorTicks.length - 1))\n      : 0;\n\n    if (minTicks) {\n      if (options.exactTicks) {\n        var delta = BaseGauge.mod(options.majorTicks[0], minTicks) || 0;\n\n        for (; i < options.maxValue; i += minTicks) {\n          if (delta + i < options.maxValue) {\n            ticks.push(delta + i);\n          }\n        }\n      } else {\n        for (; i < options.maxValue; i += valuePerNonExactTick) {\n          ticks.push(i);\n        }\n      }\n    }\n\n    drawLinearTicks(\n      context,\n      options.colorMinorTicks || options.colorStrokeTicks,\n      ticks,\n      options.minValue,\n      options.maxValue,\n      hasLeft,\n      hasRight,\n      1,\n      options.ticksWidthMinor / 100\n    );\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws major tick numbers\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   */\n  function drawLinearMajorTicksNumbers(context, options) {\n    var _context$barDimension4 = context.barDimensions,\n      isVertical = _context$barDimension4.isVertical,\n      length = _context$barDimension4.length,\n      width = _context$barDimension4.width,\n      barWidth = _context$barDimension4.barWidth,\n      barMargin = _context$barDimension4.barMargin,\n      barOffset = _context$barDimension4.barOffset,\n      X = _context$barDimension4.X,\n      Y = _context$barDimension4.Y,\n      ticksLength = _context$barDimension4.ticksLength,\n      ticksPadding = _context$barDimension4.ticksPadding;\n\n    var range = options.maxValue - options.minValue;\n    var valuePerNonExactTick = range / (options.majorTicks.length - 1);\n    var tickValues = options.exactTicks\n      ? options.majorTicks\n      : options.majorTicks.map(function(tick, i) {\n          return options.minValue + valuePerNonExactTick * i;\n        });\n    var ticks = tickValues.length;\n    var hasLeft = options.numberSide !== \"right\";\n    var hasRight = options.numberSide !== \"left\";\n    var textHeight = (options.fontNumbersSize * width) / 200;\n    var i = 0;\n    var ticksWidth = (options.ticksWidth / 100 + ticksPadding * 2) * width;\n    var numLeft = (width - barWidth) / 2 - ticksWidth;\n    var numRight = (width - barWidth) / 2 + barWidth + ticksWidth;\n    var textX = void 0,\n      textY = void 0,\n      textWidth = void 0,\n      numberOffset = void 0,\n      tick = void 0;\n    var colors =\n      options.colorNumbers instanceof Array\n        ? options.colorNumbers\n        : new Array(ticks).fill(options.colorNumbers);\n    var textMargin = (options.numbersMargin / 100) * width;\n\n    context.font = drawings.font(options, \"Numbers\", width / 200);\n    context.lineWidth = 0;\n    context.textAlign = \"center\";\n\n    for (; i < ticks; i++) {\n      context.fillStyle = colors[i];\n      tick = options.majorTicks[i];\n      numberOffset = options.exactTicks\n        ? ticksLength * ((tickValues[i] - options.minValue) / range)\n        : (i * ticksLength) / (ticks - 1);\n\n      if (isVertical) {\n        textY =\n          Y + length - barMargin - barOffset - numberOffset + textHeight / 3;\n\n        if (hasLeft) {\n          context.textAlign = \"right\";\n          context.fillText(tick, X + numLeft - textMargin, textY);\n        }\n\n        if (hasRight) {\n          context.textAlign = \"left\";\n          context.fillText(tick, X + numRight + textMargin, textY);\n        }\n      } else {\n        textWidth = context.measureText(tick).width;\n        textX = X + barMargin + barOffset + numberOffset;\n\n        if (hasLeft) {\n          context.fillText(tick, textX, Y + numLeft - textMargin);\n        }\n\n        if (hasRight) {\n          context.fillText(tick, textX, Y + numRight + textHeight + textMargin);\n        }\n      }\n    }\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws linear gauge title\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   */\n  function drawLinearTitle(context, options) {\n    if (!options.title) return;\n\n    var _context$barDimension5 = context.barDimensions,\n      isVertical = _context$barDimension5.isVertical,\n      width = _context$barDimension5.width,\n      length = _context$barDimension5.length,\n      baseX = _context$barDimension5.baseX,\n      baseY = _context$barDimension5.baseY,\n      titleMargin = _context$barDimension5.titleMargin;\n\n    var textHeight = (options.fontTitleSize * width) / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(\n      baseY +\n        titleMargin / 2 -\n        (isVertical ? textHeight : textHeight / 2) -\n        0.025 * (isVertical ? length : width)\n    );\n\n    context.save();\n    context.textAlign = \"center\";\n    context.fillStyle = options.colorTitle;\n    context.font = drawings.font(options, \"Title\", width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.title, textX, textY, isVertical ? width : length);\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws linear gauge units\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   */\n  function drawLinearUnits(context, options) {\n    if (!options.units) return;\n\n    var _context$barDimension6 = context.barDimensions,\n      isVertical = _context$barDimension6.isVertical,\n      width = _context$barDimension6.width,\n      length = _context$barDimension6.length,\n      baseX = _context$barDimension6.baseX,\n      baseY = _context$barDimension6.baseY,\n      unitsMargin = _context$barDimension6.unitsMargin;\n\n    var textHeight = (options.fontUnitsSize * width) / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(\n      baseY + (isVertical ? length : width) + unitsMargin / 2 - textHeight / 2\n    );\n\n    context.save();\n    context.textAlign = \"center\";\n    context.fillStyle = options.colorUnits;\n    context.font = drawings.font(options, \"Units\", width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.units, textX, textY, isVertical ? width : length);\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws linear gauge needles\n   *\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   */\n  function drawLinearBarNeedle(context, options) {\n    if (!options.needle) return;\n\n    var _context$barDimension7 = context.barDimensions,\n      isVertical = _context$barDimension7.isVertical,\n      width = _context$barDimension7.width,\n      length = _context$barDimension7.length,\n      barWidth = _context$barDimension7.barWidth,\n      barOffset = _context$barDimension7.barOffset,\n      barMargin = _context$barDimension7.barMargin,\n      ticksLength = _context$barDimension7.ticksLength,\n      X = _context$barDimension7.X,\n      Y = _context$barDimension7.Y,\n      ticksPadding = _context$barDimension7.ticksPadding;\n\n    var hasLeft = options.needleSide !== \"right\";\n    var hasRight = options.needleSide !== \"left\";\n    var position =\n      (ticksLength *\n        (drawings.normalizedValue(options).indented - options.minValue)) /\n      (options.maxValue - options.minValue);\n    var tickWidth = (options.ticksWidth / 100 + ticksPadding) * width;\n    var baseLength = barWidth / 2 + tickWidth;\n    var needleLength = baseLength * (options.needleEnd / 100);\n    var sX = void 0,\n      eX = void 0,\n      sY = void 0,\n      eY = void 0;\n    var draw =\n      options.needleType.toLowerCase() === \"arrow\"\n        ? drawLinearArrowNeedle\n        : drawLinearLineNeedle;\n    var barStart = (width - barWidth) / 2;\n    var needleStart = baseLength * (options.needleStart / 100);\n    var nLeft = barStart - tickWidth - needleStart;\n    var nRight = barStart + barWidth + tickWidth + needleStart;\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    if (isVertical) {\n      //noinspection JSUnresolvedFunction\n      sY = round(Y + length - barMargin - barOffset - position);\n\n      if (hasLeft) {\n        //noinspection JSUnresolvedFunction\n        sX = round(X + nLeft);\n        eX = sX + needleLength;\n        draw(context, options, sX, sY, eX, sY, needleLength);\n      }\n\n      if (hasRight) {\n        //noinspection JSUnresolvedFunction\n        sX = round(X + nRight);\n        eX = sX - needleLength;\n        draw(context, options, sX, sY, eX, sY, needleLength, true);\n      }\n    } else {\n      //noinspection JSUnresolvedFunction\n      sX = round(X + barMargin + barOffset + position);\n\n      if (hasLeft) {\n        //noinspection JSUnresolvedFunction\n        sY = round(Y + nLeft);\n        eY = sY + needleLength;\n        draw(context, options, sX, sY, sX, eY, needleLength);\n      }\n\n      if (hasRight) {\n        //noinspection JSUnresolvedFunction\n        sY = round(Y + nRight);\n        eY = sY - needleLength;\n        draw(context, options, sX, sY, sX, eY, needleLength, true);\n      }\n    }\n\n    context.restore();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Returns needle color style\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   * @param {number} length\n   * @param {boolean} [isRight]\n   * @return {CanvasGradient|string}\n   */\n  function needleStyle(context, options, length, isRight) {\n    return options.colorNeedleEnd\n      ? drawings.linearGradient(\n          context,\n          isRight ? options.colorNeedleEnd : options.colorNeedle,\n          isRight ? options.colorNeedle : options.colorNeedleEnd,\n          length,\n          !context.barDimensions.isVertical\n        )\n      : options.colorNeedle;\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws line needle shape\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   * @param {number} sX\n   * @param {number} sY\n   * @param {number} eX\n   * @param {number} eY\n   * @param {number} length\n   * @param {boolean} [isRight]\n   */\n  function drawLinearLineNeedle(\n    context,\n    options,\n    sX,\n    sY,\n    eX,\n    eY,\n    length,\n    isRight\n  ) {\n    context.lineWidth = options.needleWidth;\n    context.strokeStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws arrow needle shape\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   * @param {number} sX\n   * @param {number} sY\n   * @param {number} eX\n   * @param {number} eY\n   * @param {number} length\n   * @param {boolean} [isRight]\n   */\n  function drawLinearArrowNeedle(\n    context,\n    options,\n    sX,\n    sY,\n    eX,\n    eY,\n    length,\n    isRight\n  ) {\n    //noinspection JSUnresolvedFunction\n    var peakLength = round(length * 0.4);\n    var bodyLength = length - peakLength;\n    var isVertical = sX === eX;\n    var halfWidth = options.needleWidth / 2;\n\n    context.fillStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n\n    if (isVertical) {\n      if (sY > eY) bodyLength *= -1;\n\n      context.moveTo(sX - halfWidth, sY);\n      context.lineTo(sX + halfWidth, sY);\n      context.lineTo(sX + halfWidth, sY + bodyLength);\n      context.lineTo(sX, eY);\n      context.lineTo(sX - halfWidth, sY + bodyLength);\n      context.lineTo(sX - halfWidth, sY);\n    } else {\n      if (sX > eX) bodyLength *= -1;\n\n      context.moveTo(sX, sY - halfWidth);\n      context.lineTo(sX, sY + halfWidth);\n      context.lineTo(sX + bodyLength, sY + halfWidth);\n      context.lineTo(eX, sY);\n      context.lineTo(sX + bodyLength, sY - halfWidth);\n      context.lineTo(sX, sY - halfWidth);\n    }\n\n    context.fill();\n    context.closePath();\n  }\n\n  /* istanbul ignore next: private, not testable */\n  /**\n   * Draws value box for linear gauge\n   *\n   * @access private\n   * @param {Canvas2DContext} context\n   * @param {LinearGaugeOptions} options\n   * @param {number} value\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   */\n  function drawLinearValueBox(context, options, value, x, y, w, h) {\n    // currently value box is available only for vertical linear gauge,\n    // as far as by design it is hard to find a proper place for\n    // horizontal ones\n    var boxWidth = ((parseFloat(options.fontValueSize) || 0) * w) / 200;\n    var dy = (0.11 * h - boxWidth) / 2;\n\n    context.barDimensions.isVertical &&\n      drawings.drawValueBox(\n        context,\n        options,\n        value,\n        x + w / 2,\n        y + h - boxWidth - dy,\n        w\n      );\n  }\n\n  /**\n   * Minimalistic HTML5 Canvas Linear Gauge\n   */\n\n  var LinearGauge = (function(_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\n     * Fired each time before gauge plate is drawn\n     *\n     * @event LinearGauge#beforePlate\n     */\n\n    /**\n     * Fired each time before gauge highlight areas are drawn\n     *\n     * @event LinearGauge#beforeHighlights\n     */\n\n    /**\n     * Fired each time before gauge minor ticks are drawn\n     *\n     * @event LinearGauge#beforeMinorTicks\n     */\n\n    /**\n     * Fired each time before gauge major ticks are drawn\n     *\n     * @event LinearGauge#beforeMajorTicks\n     */\n\n    /**\n     * Fired each time before gauge tick numbers are drawn\n     *\n     * @event LinearGauge#beforeNumbers\n     */\n\n    /**\n     * Fired each time before gauge title is drawn\n     *\n     * @event LinearGauge#beforeTitle\n     */\n\n    /**\n     * Fired each time before gauge units text is drawn\n     *\n     * @event LinearGauge#beforeUnits\n     */\n\n    /**\n     * Fired each time before gauge bar area is drawn\n     *\n     * @event LinearGauge#beforeBar\n     */\n\n    /**\n     * Fired each time before gauge progress bar is drawn\n     *\n     * @event LinearGauge#beforeProgressBar\n     */\n\n    /**\n     * Fired each time before gauge value box is drawn\n     *\n     * @event LinearGauge#beforeValueBox\n     */\n\n    /**\n     * Fired each time before gauge needle is drawn\n     *\n     * @event LinearGauge#beforeNeedle\n     */\n\n    /**\n     * @constructor\n     * @param {LinearGaugeOptions} options\n     */\n    function LinearGauge(options) {\n      _classCallCheck(this, LinearGauge);\n\n      options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n      return _possibleConstructorReturn(\n        this,\n        (LinearGauge.__proto__ || Object.getPrototypeOf(LinearGauge)).call(\n          this,\n          LinearGauge.configure(options)\n        )\n      );\n    }\n\n    /**\n     * Checks and updates gauge options properly\n     *\n     * @param {*} options\n     * @return {*}\n     * @access protected\n     */\n\n    _createClass(\n      LinearGauge,\n      [\n        {\n          key: \"draw\",\n\n          /* istanbul ignore next */\n          /**\n           * Triggering linear gauge render on a canvas.\n           *\n           * @returns {LinearGauge}\n           */\n          value: function draw() {\n            try {\n              var canvas = this.canvas;\n              var _ref2 = [\n                  -canvas.drawX,\n                  -canvas.drawY,\n                  canvas.drawWidth,\n                  canvas.drawHeight\n                ],\n                x = _ref2[0],\n                y = _ref2[1],\n                w = _ref2[2],\n                h = _ref2[3];\n\n              var options = this.options;\n\n              if (!canvas.elementClone.initialized) {\n                var context = canvas.contextClone;\n\n                // clear the cache\n                context.clearRect(x, y, w, h);\n                context.save();\n\n                this.emit(\"beforePlate\");\n                this.drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                this.emit(\"beforeBar\");\n                drawLinearBar.apply(\n                  undefined,\n                  [context, options].concat(_toConsumableArray(this.drawBox))\n                );\n\n                canvas.context.barDimensions = context.barDimensions;\n\n                this.emit(\"beforeHighlights\");\n                drawLinearBarHighlights(context, options);\n                this.emit(\"beforeMinorTicks\");\n                drawLinearMinorTicks(context, options);\n                this.emit(\"beforeMajorTicks\");\n                drawLinearMajorTicks(context, options);\n                this.emit(\"beforeNumbers\");\n                drawLinearMajorTicksNumbers(context, options);\n                this.emit(\"beforeTitle\");\n                drawLinearTitle(context, options);\n                this.emit(\"beforeUnits\");\n                drawLinearUnits(context, options);\n\n                canvas.elementClone.initialized = true;\n              }\n\n              this.canvas.commit();\n\n              // clear the canvas\n              canvas.context.clearRect(x, y, w, h);\n              canvas.context.save();\n\n              canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n              canvas.context.save();\n\n              this.emit(\"beforeProgressBar\");\n              drawLinearBarProgress.apply(\n                undefined,\n                [canvas.context, options].concat(\n                  _toConsumableArray(this.drawBox)\n                )\n              );\n              this.emit(\"beforeNeedle\");\n              drawLinearBarNeedle(canvas.context, options);\n              this.emit(\"beforeValueBox\");\n              drawLinearValueBox.apply(\n                undefined,\n                [\n                  canvas.context,\n                  options,\n                  options.animatedValue ? this.options.value : this.value\n                ].concat(_toConsumableArray(this.drawBox))\n              );\n\n              _get(\n                LinearGauge.prototype.__proto__ ||\n                  Object.getPrototypeOf(LinearGauge.prototype),\n                \"draw\",\n                this\n              ).call(this);\n            } catch (err) {\n              drawings.verifyError(err);\n            }\n\n            return this;\n          }\n        }\n      ],\n      [\n        {\n          key: \"configure\",\n          value: function configure(options) {\n            /* istanbul ignore else */\n            if (options.barStrokeWidth >= options.barWidth) {\n              //noinspection JSUnresolvedFunction\n              options.barStrokeWidth = round(options.barWidth / 2);\n            }\n\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasLeft = hasTicksBar(\"right\", options);\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasRight = hasTicksBar(\"left\", options);\n\n            if (options.value > options.maxValue) {\n              options.value = options.maxValue;\n            }\n\n            if (options.value < options.minValue) {\n              options.value = options.minValue;\n            }\n\n            return BaseGauge.configure(options);\n          }\n        }\n      ]\n    );\n\n    return LinearGauge;\n  })(BaseGauge);\n\n  /**\n   * @ignore\n   * @typedef {object} ns\n   */\n  /* istanbul ignore if */\n\n  if (typeof ns !== \"undefined\") {\n    ns[\"LinearGauge\"] = LinearGauge;\n  }\n\n  BaseGauge.initialize(\"LinearGauge\", defaultLinearGaugeOptions);\n  typeof module !== \"undefined\" &&\n    Object.assign(ns, {\n      Collection: Collection,\n      GenericOptions: GenericOptions,\n      Animation: Animation,\n      BaseGauge: BaseGauge,\n      drawings: drawings,\n      SmartCanvas: SmartCanvas,\n      DomObserver: DomObserver,\n      vendorize: vendorize\n    });\n})(typeof module !== \"undefined\" ? module.exports : window);\n"]}