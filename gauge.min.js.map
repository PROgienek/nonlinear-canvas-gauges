{"version":3,"sources":["gauge.js"],"names":["ns","_get","object","property","receiver","Function","prototype","desc","Object","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","get","value","getter","call","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","length","err","sliceIterator","TypeError","_createClass","Constructor","protoProps","staticProps","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_toConsumableArray","arr2","from","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_classCallCheck","instance","vendorize","prop","window","global","vendors","s","capitalized","charAt","toUpperCase","substr","vendorProp","assign","firstSource","to","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","indexOf","searchElement","fromIndex","k","this","O","n","Math","abs","Infinity","max","fill","_value","relativeStart","min","relativeEnd","final","EventEmitter","event","_events","_len","args","_key","apply","_len2","handlers","_key2","_loop","handler","wrapper","off","on","concat","_handler","index","splice","addListener","removeListener","requestAnimationFrame","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","sin","acos","decycle","bounce","debounce","a","b","elastic","delastic","cos","PI","Animation","draw","end","_this","frame","cancel","start","performance","now","time","step","rule","duration","anim","progress","percent","animationTransformed","isFinite","isNaN","inProgress","id","DomObserver","node","tagName","toLowerCase","element","getAttribute","type","elements","document","getElementsByTagName","process","isObservable","mutationsObserved","MutationObserver","observe","bind","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","records","record","attributeName","isValidNode","oldValue","addedNodes","ii","ss","_this2","options","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","Type","observer","forEach","attr","disconnect","destroy","_prop","split","map","part","join","_options","update","test","e","camelCase","str","dashed","toDashed","readyState","addEventListener","attachEvent","GAUGES_NO_AUTO_INIT","domReady","traverse","SmartCanvas","pixelRatio","width","height","style","elementClone","cloneNode","context","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","save","maxRadius","collection","clearRect","onRedraw","scale","init","redraw","devicePixelRatio","canvas","matchMedia","GenericOptions","minValue","maxValue","units","exactTicks","majorTicks","minorTicks","strokeTicks","animatedValue","animateOnInit","title","borders","numbersMargin","listeners","valueInt","valueDec","majorTicksInt","majorTicksDec","animation","animationDuration","animationRule","colorPlate","colorPlateEnd","colorMajorTicks","colorMinorTicks","colorStrokeTicks","colorTitle","colorUnits","colorNumbers","colorNeedle","colorNeedleEnd","colorValueText","colorValueTextShadow","colorBorderShadow","colorBorderOuter","colorBorderOuterEnd","colorBorderMiddle","colorBorderMiddleEnd","colorBorderInner","colorBorderInnerEnd","colorValueBoxRect","colorValueBoxRectEnd","colorValueBoxBackground","colorValueBoxShadow","colorNeedleShadowUp","colorNeedleShadowDown","colorBarStroke","colorBar","colorBarProgress","colorBarShadow","fontNumbers","fontTitle","fontUnits","fontValue","fontNumbersSize","fontTitleSize","fontUnitsSize","fontValueSize","fontNumbersStyle","fontTitleStyle","fontUnitsStyle","fontValueStyle","fontNumbersWeight","fontTitleWeight","fontUnitsWeight","fontValueWeight","needle","needleShadow","needleType","needleStart","needleEnd","needleWidth","borderOuterWidth","borderMiddleWidth","borderInnerWidth","borderShadowWidth","valueBox","valueBoxStroke","valueBoxWidth","valueText","valueTextShadow","valueBoxBorderRadius","highlights","color","highlightsWidth","barWidth","barStrokeWidth","barProgress","barShadow","Collection","getElementById","version","round","gauges","BaseGauge","configure","emit","set","_this4","ensureValue","fromValue","animate","newValue","toCamelCase","name","replace","parseFloat","m","_this3","className","HTMLCanvasElement","parentNode","offsetWidth","offsetHeight","roundRect","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","dec","int","strVal","toFixed","toString","font","baseSize","reset","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","strokeStyle","lineWidth","drawValueTextShadow","offset","blur","drawings","formatMajorTickNumber","num","right","hasDec","radians","degrees","radialPoint","radius","angle","linearGradient","colorFrom","colorTo","isVertical","grad","createLinearGradient","addColorStop","drawNeedleShadow","drawValueBox","addLength","maxValueWidth","repeat","String","parseInt","text","tunit","runit","tw","measureText","Number","th","sw","bmax","bw","bh","br","obw","bx","by","gy","rect","grd","createRadialGradient","stroke","fillStyle","restore","textAlign","textBaseline","fillText","verifyError","DOMException","result","prepareTicks","tickSide","drawShadow","normalizedValue","dt","normal","indented","HPI","defaultRadialGaugeOptions","ticksAngle","startAngle","colorNeedleCircleOuter","colorNeedleCircleOuterEnd","colorNeedleCircleInner","colorNeedleCircleInnerEnd","needleCircleSize","needleCircleInner","needleCircleOuter","animationTarget","useMinPath","drawRadialBorder","arc","maxRadialRadius","pxRatio","drawRadialPlate","d0","r0","r1","r2","r3","shadowDrawn","drawRadialHighlights","hlWidth","radialTicksRadius","vd","hlt","rotate","drawRadialMinorTicks","range","delta","minTicks","ratio","mod","closeStrokedPath","unit","drawRadialMajorTicks","colors","radialNextAngle","drawRadialNumbers","points","isAnimated","plateValueAngle","textWidth","textHeight","textRadius","sqrt","point","drawRadialTitle","drawRadialUnits","drawRadialNeedle","rIn","rStart","pad1","pad2","isFixed","drawRadialValueBox","drawRadialProgressBar","rMax","rMin","half","sa","ea","clip","displayValue","gauge","RadialGauge","console","log","_ref","commit","drawImage","_context","setter","_set","initialize","defaultLinearGaugeOptions","borderRadius","barBeginCircle","colorBarEnd","colorBarProgressEnd","needleSide","numberSide","ticksWidth","ticksWidthMinor","ticksPadding","barLength","drawLinearBorder","colorStart","colorEnd","drawLinearPlate","w1","w2","w3","w4","h1","h2","h3","h4","x2","x3","x4","y2","y3","y4","aliasingOffset","drawRectangle","drawLinearBarShape","_barDimensions","hasTitle","hasUnits","hasValue","titleMargin","unitsMargin","valueMargin","strokeWidth","barMargin","x0","y0","dx","hasLeft","hasRight","dy","barDimensions","barOffset","ticksLength","X","Y","baseX","baseY","fullBarLength","direction","alpha","asin","cosAlpha","sinAlpha","x1","y1","cutRadius","rx","ry","hasTicksBar","notWhich","drawLinearTick","drawLinearTicks","ticks","minVal","maxVal","lineLength","_context$barDimension2","tickOffset","tickX","tickY","tickLen","tickLeft","tickRight","drawLinearTickStroke","sX","sY","eX","eY","needleStyle","isRight","drawLinearLineNeedle","drawLinearArrowNeedle","bodyLength","halfWidth","LinearGauge","_ref2","drawBox","_context$barDimension","interval","eH","hLeft","hRight","entry","eStart","eW","drawLinearBarHighlights","_drawings$prepareTick3","_drawings$prepareTick4","valuePerNonExactTick","drawLinearMinorTicks","_drawings$prepareTick","_drawings$prepareTick2","tick","_context$barDimension3","rightTicks","leftTicks","drawLinearMajorTicks","_context$barDimension4","tickValues","numLeft","numRight","textX","textY","numberOffset","textMargin","drawLinearMajorTicksNumbers","_context$barDimension5","drawLinearTitle","_context$barDimension6","drawLinearUnits","_context$barDimension7","position","tickWidth","baseLength","needleLength","barStart","nLeft","nRight","drawLinearBarNeedle","boxWidth","module","exports"],"mappings":"CAyBC,SAASA,GAAK,aAIJ,SAAPC,EAAoBC,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAASC,WAAW,IAAIC,EAAOC,OAAOC,yBAAyBP,EAAQC,GAAW,QAAaO,IAATH,EAAoB,CAAE,IAAII,EAASH,OAAOI,eAAeV,GAAS,OAAe,OAAXS,OAAmB,EAAkCE,EAAIF,EAAQR,EAAUC,GAAoB,GAAI,UAAWG,EAAQ,OAAOA,EAAKO,MAAgB,IAAIC,EAASR,EAAKM,IAAK,YAAeH,IAAXK,EAAmDA,EAAOC,KAAKZ,QAAnE,EAFzZ,IAAIa,EAAgb,SAAUC,EAAKC,GAAK,GAAIC,MAAMC,QAAQH,GAAQ,OAAOA,EAAY,GAAII,OAAOC,YAAYf,OAAOU,GAAQ,OAAxf,SAAuBA,EAAKC,GAAK,IAAIK,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAWC,OAAKjB,EAAW,IAAM,IAAK,IAAiCkB,EAA7BC,EAAKX,EAAII,OAAOC,cAAmBE,GAAMG,EAAKC,EAAGC,QAAQC,QAAoBP,EAAKQ,KAAKJ,EAAGd,QAAYK,GAAKK,EAAKS,SAAWd,GAA3DM,GAAK,IAAoE,MAAOS,GAAOR,GAAK,EAAMC,EAAKO,EAAO,QAAU,KAAWT,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,MAAMC,GAAQ,OAAOH,EAA6HW,CAAcjB,EAAKC,GAAa,MAAM,IAAIiB,UAAU,yDAMllBC,EAAiW,SAAUC,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYE,EAAiBH,EAAYhC,UAAWiC,GAAiBC,GAAaC,EAAiBH,EAAaE,GAAqBF,GAA/f,SAASG,EAAiBC,EAAQC,GAAS,IAAK,IAAIxB,EAAI,EAAGA,EAAIwB,EAAMV,OAAQd,IAAK,CAAE,IAAIyB,EAAaD,EAAMxB,GAAIyB,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMvC,OAAOwC,eAAeN,EAAQE,EAAWK,IAAKL,IAE7U,SAASM,EAAmBhC,GAAO,GAAIE,MAAMC,QAAQH,GAAM,CAAE,IAAK,IAAIC,EAAI,EAAGgC,EAAO/B,MAAMF,EAAIe,QAASd,EAAID,EAAIe,OAAQd,IAAOgC,EAAKhC,GAAKD,EAAIC,GAAM,OAAOgC,EAAe,OAAO/B,MAAMgC,KAAKlC,GAE1L,SAASmC,EAA2BC,EAAMtC,GAAQ,IAAKsC,EAAQ,MAAM,IAAIC,eAAe,6DAAgE,OAAOvC,GAAyB,iBAATA,GAAqC,mBAATA,EAA8BsC,EAAPtC,EAElO,SAASwC,EAAUC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAItB,UAAU,kEAAoEsB,GAAeD,EAASnD,UAAYE,OAAOmD,OAAOD,GAAcA,EAAWpD,UAAW,CAAEsD,YAAa,CAAE9C,MAAO2C,EAAUZ,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAeY,IAAYlD,OAAOqD,eAAiBrD,OAAOqD,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GAEje,SAASK,EAAgBC,EAAU1B,GAAe,KAAM0B,aAAoB1B,GAAgB,MAAM,IAAIF,UAAU,qCAyKhH,SAAS6B,EAAUC,EAAMd,GAMrB,QAA0B,KAHtBA,EADCA,IACwB,oBAAXe,OAAyBC,OAASD,SAGpCD,GACZ,OAAOd,EAAKc,GAQhB,IALA,IAAIG,EAAU,CAAC,SAAU,MAAO,KAAM,KAClClD,EAAI,EACJmD,EAAID,EAAQpC,OACZsC,EAAcL,EAAKM,OAAO,GAAGC,cAAgBP,EAAKQ,OAAO,GAEtDvD,EAAImD,EAAGnD,IAAK,CACf,IAAIwD,EAAavB,EAAKiB,EAAQlD,GAAKoD,GAGnC,QAA0B,IAAfI,EACP,OAAOA,EAIf,OAAO,KA3LNnE,OAAOoE,QACRpE,OAAOwC,eAAexC,OAAQ,SAAU,CACpCqC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVjC,MAAO,SAAe4B,EAAQmC,GAG1B,GAAInC,MAAAA,EACA,MAAM,IAAIN,UAAU,2CAMxB,IAHA,IAAI0C,EAAKtE,OAAOkC,GACZvB,EAAI,EAEDA,EAAI4D,UAAU9C,OAAQd,IAAK,CAC9B,IAAI6D,EAAaD,UAAU5D,GAE3B,GAAI6D,MAAAA,EAQJ,IAJA,IAAIC,EAAYzE,OAAO0E,KAAK1E,OAAOwE,IAC/BG,EAAY,EACZC,EAAMH,EAAUhD,OAEbkD,EAAYC,EAAKD,IAAa,CACjC,IAAIE,EAAUJ,EAAUE,GACpB5E,EAAOC,OAAOC,yBAAyBuE,EAAYK,QAE1C3E,IAATH,GAAsBA,EAAKsC,aAC3BiC,EAAGO,GAAWL,EAAWK,KAKrC,OAAOP,KASd1D,MAAMd,UAAUgF,SACjB9E,OAAOwC,eAAe5B,MAAMd,UAAW,UAAW,CAC9CQ,MAAO,SAAeyE,EAAeC,GACjC,IAAIC,EAEJ,GAAa,OAATC,KACA,MAAM,IAAItD,UAAU,iCAGxB,IAAIuD,EAAInF,OAAOkF,MACXN,EAAMO,EAAE1D,SAAW,EAEvB,GAAY,GAARmD,EACA,OAAQ,EAGZ,IAAIQ,GAAKJ,GAAa,EAMtB,GAJIK,KAAKC,IAAIF,KAAOG,EAAAA,IAChBH,EAAI,GAGCR,GAALQ,EACA,OAAQ,EAKZ,IAFAH,EAAII,KAAKG,IAAS,GAALJ,EAASA,EAAIR,EAAMS,KAAKC,IAAIF,GAAI,GAEtCH,EAAIL,GAAK,CACZ,GAAIK,KAAKE,GAAKA,EAAEF,KAAOF,EACnB,OAAOE,EAGXA,IAGJ,OAAQ,KASfrE,MAAMd,UAAU2F,MACjBzF,OAAOwC,eAAe5B,MAAMd,UAAW,OAAQ,CAC3CQ,MAAO,SAAeoF,EAAf,EAAA,GACH,GAAa,OAATR,KACA,MAAM,IAAItD,UAAU,+BAWxB,IARA,IAAIuD,EAAInF,OAAOkF,MACXN,EAAMO,EAAE1D,SAAW,EAEnBkE,EARD,GAQ0B,EACzBV,EAAIU,EAAgB,EAAIN,KAAKG,IAAIZ,EAAMe,EAAe,GAAKN,KAAKO,IAAID,EAAef,GAEnFiB,OAAsB3F,IAXvB,EAWmC0E,EAXnC,GAWgD,EAC/CkB,EAAQD,EAAc,EAAIR,KAAKG,IAAIZ,EAAMiB,EAAa,GAAKR,KAAKO,IAAIC,EAAajB,GAC9EK,EAAIa,GACPX,EAAEF,GAAKS,EACPT,IAGJ,OAAOE,KAQG,oBAAXxB,SACPA,OAA2B,oBAAXC,OAAyB,GAAKA,QAmGlD,IAAImC,GAoBAlE,EAAakE,EAAc,CAAC,CACxBtD,IAAK,OASLnC,MAAO,SAAc0F,GACjB,GAAId,KAAKe,QAAQD,GAAQ,CAIrB,IAHA,IAAIrF,EAAI,EACJmD,EAAIoB,KAAKe,QAAQD,GAAOvE,OAEnByE,EAAO3B,UAAU9C,OAAQ0E,EAAOvF,MAAa,EAAPsF,EAAWA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAC5FD,EAAKC,EAAO,GAAK7B,UAAU6B,GAG/B,KAAOzF,EAAImD,EAAGnD,IACVuE,KAAKe,QAAQD,GAAOrF,IAAMuE,KAAKe,QAAQD,GAAOrF,GAAG0F,MAAMnB,KAAMiB,MAa1E,CACC1D,IAAK,OACLnC,MAAO,SAAc0F,GACjB,IAAK,IAAIM,EAAQ/B,UAAU9C,OAAQ8E,EAAW3F,MAAc,EAAR0F,EAAYA,EAAQ,EAAI,GAAIE,EAAQ,EAAGA,EAAQF,EAAOE,IACtGD,EAASC,EAAQ,GAAKjC,UAAUiC,GAiBpC,IAdA,IAAI7F,EAAI,EACJmD,EAAIyC,EAAS9E,OACbqB,EAAOoC,KAEPuB,EAAQ,WACR,IAAIC,EAAUH,EAAS5F,GAMvB4F,EAAS5F,GALK,SAASgG,IACnB7D,EAAK8D,IAAIZ,EAAOW,GAChBD,EAAQL,MAAMvD,EAAMyB,aAMrB5D,EAAImD,EAAGnD,IACV8F,IAGJvB,KAAK2B,GAAGR,MAAMnB,KAAM,CAACc,GAAOc,OAAOP,MAWxC,CACC9D,IAAK,KACLnC,MAAO,SAAY0F,GACVd,KAAKe,QAAQD,KACdd,KAAKe,QAAQD,GAAS,IAM1B,IAHA,IAAIrF,EAAI,EACJmD,EAAIS,UAAU9C,QAAU,EAAI,EAAI8C,UAAU9C,OAAS,EAEhDd,EAAImD,EAAGnD,IACVuE,KAAKe,QAAQD,GAAOxE,KAAK+C,UAAU9C,QAAUd,EAAI,OAAIT,EAAYqE,UAAU5D,EAAI,MAWxF,CACC8B,IAAK,MACLnC,MAAO,SAAa0F,GAChB,GAAKd,KAAKe,QAAQD,GAOlB,IAHA,IAAIrF,EAAI,EACJmD,EAAIS,UAAU9C,QAAU,EAAI,EAAI8C,UAAU9C,OAAS,EAEhDd,EAAImD,EAAGnD,IAIV,IAHA,IAAIoG,EAAWxC,UAAU9C,QAAUd,EAAI,OAAIT,EAAYqE,UAAU5D,EAAI,GACjEqG,OAAQ,IAEHA,EAAQ9B,KAAKe,QAAQD,GAAOlB,QAAQiC,KACzC7B,KAAKe,QAAQD,GAAOiB,OAAOD,EAAO,KAW/C,CACCvE,IAAK,qBACLnC,MAAO,SAA4B0F,UACxBd,KAAKe,QAAQD,KAEzB,CACCvD,IAAK,YACLpC,IAAK,WACD,OAAO6E,KAAKe,YAIbF,GAjJP,SAASA,IACLxC,EAAgB2B,KAAMa,GAEtBb,KAAKe,QAAU,GAEff,KAAKgC,YAAchC,KAAK2B,GACxB3B,KAAKiC,eAAiBjC,KAAK0B,IAmLnC,IAAIQ,EAAwB3D,EAAU,0BAA4B,SAAU4D,GACxE,OAAOC,WAAW,WACd,OAAOD,GAAS,IAAIE,MAAOC,YAC5B,IAAO,KAmCVC,EAAQ,CACRC,OAAQ,SAAgBC,GACpB,OAAOA,GAEXC,KAAM,SAAcD,GAChB,OAAOtC,KAAKwC,IAAIF,EAAG,IAEvBG,OAAQ,SAAgBH,GACpB,OAAO,EAAIF,EAAMG,KAAK,EAAID,IAE9BI,MAAO,SAAeJ,GAClB,OAAOtC,KAAKwC,IAAIF,EAAG,IAEvBK,QAAS,SAAiBL,GACtB,OAAO,EAAItC,KAAKwC,IAAI,EAAIF,EAAG,IAE/BM,MAAO,SAAeN,GAClB,OAAO,EAAItC,KAAK6C,IAAI7C,KAAK8C,KAAKR,KAElCS,QAAS,SAAiBT,GACtB,OAAOtC,KAAK6C,IAAI7C,KAAK8C,KAAK,EAAIR,KAElCU,OAAQ,SAAgBV,GACpB,OAAO,EAAIF,EAAMa,SAAS,EAAIX,IAElCW,SAAU,SAAkBX,GAGxB,IAFA,IAAIY,EAAI,EACJC,EAAI,GACED,GAAKC,EAAGA,GAAK,EACnB,IAAU,EAAI,EAAID,GAAK,IAAnBZ,EACA,OAAQtC,KAAKwC,KAAK,GAAK,EAAIU,EAAI,GAAKZ,GAAK,EAAG,GAAKtC,KAAKwC,IAAIW,EAAG,IAIzEC,QAAS,SAAiBd,GACtB,OAAO,EAAIF,EAAMiB,SAAS,EAAIf,IAElCe,SAAU,SAAkBf,GAExB,OAAOtC,KAAKwC,IAAI,EAAG,IAAMF,EAAI,IAAMtC,KAAKsD,IAAI,GAAKtD,KAAKuD,GAD9C,IACuD,EAAIjB,KAoF3E,IAAIkB,GA+FAhH,EAAagH,EAAW,CAAC,CACrBpG,IAAK,UACLnC,MAAO,SAAiBwI,EAAMC,GAC1B,IAAIC,EAAQ9D,KAEZA,KAAK+D,OAAS/D,KAAKgE,SAGnB,IAAIC,EAAQxF,OAAOyF,aAAezF,OAAOyF,YAAYC,IAAM1F,OAAOyF,YAAYC,MAAQ5F,EAAU,uBAAyB8D,KAAK8B,MAE9HP,EAAOA,GAAQ5D,KAAK4D,KACpBC,EAAMA,GAAO7D,KAAK6D,IAElB7D,KAAK4D,KAAOA,EACZ5D,KAAK6D,IAAMA,EAOX7D,KAAK+D,MAAQ7B,EAAsB,SAAUkC,GACzC,OAvLhB,SAASC,EAAKD,EAAMR,EAAMK,EAAOK,EAAMC,EAAUV,EAAKW,GAClD,GAAoB,mBAATF,EACP,MAAM,IAAI5H,UAAU,0BAA2B4H,GAGnD,IAAIG,EAAWL,EAAOH,EAClBS,EAAUD,EAAWF,EACrBI,EAAuB,EAEb,EAAVD,IACAA,EAAU,GAGE,IAAZA,IACAC,EAAuBL,EAAKI,GAIxBE,SAASD,KAA0BE,MAAMF,KACzCD,EAAUC,IAIlBf,GAAQA,EAAKc,GAETD,EAAWF,EACXC,EAAKT,MAAQ7B,EAAsB,SAAUkC,GACzC,OAAOC,EAAKD,EAAMR,EAAMK,EAAOK,EAAMC,EAAUV,EAAKW,MAGxDX,GAAOA,IACPW,EAAKM,YAAa,GAwJHT,CAAKD,EAAMR,EAAMK,EAAO1B,EAAMuB,EAAMQ,OAASR,EAAMQ,KAAMR,EAAMS,SAAUV,EAAKC,OAQ9F,CACCvG,IAAK,SACLnC,MAAO,WACC4E,KAAK+D,SACsBxF,EAAU,yBAErC,SAAUwG,MAEW/E,KAAK+D,OAC1B/D,KAAK+D,MAAQ,QAQtB,CACCxG,IAAK,UACLnC,MAAO,WACH4E,KAAKgE,SACLhE,KAAK4D,KAAO,KACZ5D,KAAK6D,IAAM,SAIZF,GA9IP,SAASA,IACL,IAAIW,EAA0B,EAAnBjF,UAAU9C,aAA+BvB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,SAC3EkF,EAA8B,EAAnBlF,UAAU9C,aAA+BvB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,IAC/EuE,EAA0B,EAAnBvE,UAAU9C,aAA+BvB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,aAC3EwE,EAAyB,EAAnBxE,UAAU9C,aAA+BvB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,aAoC9E,GAlCAhB,EAAgB2B,KAAM2D,GAQtB3D,KAAKuE,SAAWA,EAUhBvE,KAAKsE,KAAOA,EAOZtE,KAAK4D,KAAOA,EAOZ5D,KAAK6D,IAAMA,EAEc,mBAAd7D,KAAK4D,KACZ,MAAM,IAAIlH,UAAU,mCAAoCkH,GAG5D,GAAwB,mBAAb5D,KAAK6D,IACZ,MAAM,IAAInH,UAAU,kCAAmCmH,GA4GnEF,EAAUpB,MAAQA,EA4DlB,IAAIyC,GAqEArI,EAAaqI,EAAa,CAAC,CACvBzH,IAAK,cACLnC,MAAO,SAAqB6J,GAExB,SAAUA,EAAKC,SAAWD,EAAKC,QAAQC,gBAAkBnF,KAAKoF,SAAWH,EAAKI,aAAa,eAAiBrF,KAAKsF,QAQtH,CACC/H,IAAK,WACLnC,MAAO,WAMH,IALA,IAAImK,EAAWC,SAASC,qBAAqBzF,KAAKoF,SAC9C3J,EAAI,EACJmD,EAAI2G,EAAShJ,OAGVd,EAAImD,EAAGnD,IACVuE,KAAK0F,QAAQH,EAAS9J,IAGtBuE,KAAK2F,eAAiB3F,KAAK4F,oBAC3B,IAAIC,iBAAiB7F,KAAK8F,QAAQC,KAAK/F,OAAO8F,QAAQN,SAASQ,KAAM,CACjEC,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,eAAe,EACfC,mBAAmB,EACnBC,uBAAuB,IAG3BtG,KAAK4F,mBAAoB,KAUlC,CACCrI,IAAK,UACLnC,MAAO,SAAiBmL,GAKpB,IAJA,IAAI9K,EAAI,EACJmD,EAAI2H,EAAQhK,OAGTd,EAAImD,EAAGnD,IAAK,CACf,IAAI+K,EAASD,EAAQ9K,GAErB,GAAoB,eAAhB+K,EAAOlB,MAAkD,cAAzBkB,EAAOC,eAAiCzG,KAAK0G,YAAYF,EAAOxJ,SAAWwJ,EAAOG,WAAa3G,KAAKsF,KAEhIlD,WAAWpC,KAAK0F,QAAQK,KAAK/F,KAAMwG,EAAOxJ,cACvC,GAAIwJ,EAAOI,YAAcJ,EAAOI,WAAWrK,OAIlD,IAHA,IAAIsK,EAAK,EACLC,EAAKN,EAAOI,WAAWrK,OAEpBsK,EAAKC,EAAID,IACZzE,WAAWpC,KAAK0F,QAAQK,KAAK/F,KAAMwG,EAAOI,WAAWC,QAetE,CACCtJ,IAAK,UASLnC,MAAO,SAAiB6J,GACpB,IAAI8B,EAAS/G,KAEb,IAAKA,KAAK0G,YAAYzB,GAAO,OAAO,KAEpC,IAAIzG,OAAO,EACPwI,EAAUC,KAAKC,MAAMD,KAAKE,UAAUnH,KAAKgH,UACzC1I,EAAW,KAEf,IAAKE,KAAQwI,EAET,GAAIA,EAAQI,eAAe5I,GAAO,CAC9B,IAAIiI,EAAgBzB,EAAYqC,gBAAgB7I,GAC5C8I,EAAiBtC,EAAYkC,MAAMjC,EAAKI,aAAaoB,IAErDa,MAAAA,IACAN,EAAQxI,GAAQ8I,GAS5B,OAJAN,EAAQO,SAAWtC,GACnB3G,EAAW,IAAI0B,KAAKwH,KAAKR,IAChBpD,MAAQtF,EAASsF,OAErB5D,KAAK2F,eAEVrH,EAASmJ,SAAW,IAAI5B,iBAAiB,SAAUU,GAC/CA,EAAQmB,QAAQ,SAAUlB,GACtB,GAAoB,eAAhBA,EAAOlB,KAAuB,CAC9B,IAAIqC,EAAOnB,EAAOC,cAActB,cAC5BG,EAAOL,EAAKI,aAAasC,GAAMxC,cAEnC,GAAa,cAATwC,GAAwBrC,GAAQA,IAASyB,EAAOzB,KAChDhH,EAASmJ,SAASG,oBACXtJ,EAASmJ,SAChBnJ,EAASuJ,SAAWvJ,EAASuJ,eAC1B,GAA0B,UAAtBF,EAAK3I,OAAO,EAAG,GAAgB,CACtC,IAAI8I,EAAQH,EAAK3I,OAAO,GAAG+I,MAAM,KAAKC,IAAI,SAAUC,EAAMxM,GACtD,OAAQA,EAAWwM,EAAKnJ,OAAO,GAAGC,cAAgBkJ,EAAKjJ,OAAO,GAAlDiJ,IACbC,KAAK,IACJC,EAAW,GAEfA,EAASL,GAAS9C,EAAYkC,MAAMjC,EAAKI,aAAamB,EAAOC,gBAE/C,UAAVqB,EACAxJ,IAAaA,EAASlD,MAAQ+M,EAASL,IAEvCxJ,EAAS8J,QAAU9J,EAAS8J,OAAOD,SAQvD7J,EAASmJ,SAAS3B,QAAQb,EAAM,CAAEkB,YAAY,KAEvC7H,KAWX,CAAC,CACDf,IAAK,QACLnC,MAAO,SAAeA,GAElB,GAAc,SAAVA,EAAkB,OAAO,EAC7B,GAAc,UAAVA,EAAmB,OAAO,EAG9B,GAAc,cAAVA,EAAJ,CAGA,GAAc,SAAVA,EAAkB,OAAO,KAQ7B,GAAI,qCAAqCiN,KAAKjN,GAC1C,OAAOA,EAAM2M,MAAM,KAIvB,IACI,OAAOd,KAAKC,MAAM9L,GACpB,MAAOkN,IAGT,OAAOlN,KAEZ,CACCmC,IAAK,WACLnC,MAAO,SAAkBmN,GAMrB,IALA,IAAI/M,EAAM+M,EAAUR,MAAM,aACtBtM,EAAI,EACJmD,EAAIpD,EAAIe,OACRiM,EAAMhN,EAAI,GAAG2J,cAEV1J,EAAImD,EAAGnD,IACV+M,GAAO,IAAMhN,EAAIC,GAAG0J,cAGxB,OAAOqD,IAWZ,CACCjL,IAAK,cACLnC,MAAO,SAAqBqN,EAArB,GAQH,IAPA,IAAI5J,IAAiC,EAAnBQ,UAAU9C,aAA+BvB,IADxD,IAAA,EAGCQ,EAAMiN,EAAOV,MAAM,KACnBtM,EAAI,EACJmD,EAAIpD,EAAIe,OACRiM,EAAM,GAEH/M,EAAImD,EAAGnD,IAIN+M,GAHE/M,GAAKoD,EAGArD,EAAIC,GAAG,GAAGsD,cAAgBvD,EAAIC,GAAGuD,OAAO,GAAGmG,cAF3C3J,EAAIC,GAAG0J,cAMtB,OAAOqD,IAWZ,CACCjL,IAAK,kBACLnC,MAAO,SAAyBoN,GAC5B,MAAO,QAAUxD,EAAY0D,SAASF,KAU3C,CACCjL,IAAK,WACLnC,MAAO,SAAkBoG,GACrB,GAAI,oBAAoB6G,MAAM5J,OAAO+G,UAAY,IAAImD,WAAa,IAAK,OAAOnH,IAE1E/C,OAAOmK,iBAAkBnK,OAAOmK,iBAAiB,mBAAoBpH,GAAS,GAAgB/C,OAAOoK,aAAapK,OAAOoK,YAAY,SAAUrH,OAIpJwD,GAlUP,SAASA,EAAYgC,EAAS5B,EAASE,GACnCjH,EAAgB2B,KAAMgF,GAQtBhF,KAAKgH,QAAUA,EAOfhH,KAAKoF,QAAUA,EAAQD,cAOvBnF,KAAKsF,KAAON,EAAY0D,SAASpD,GAOjCtF,KAAKwH,KAAOlN,EAAGgL,GAOftF,KAAK4F,mBAAoB,EAQzB5F,KAAK2F,eAAiBlH,OAAOoH,iBAGxBpH,OAAOqK,qBACR9D,EAAY+D,SAAS/I,KAAKgJ,SAASjD,KAAK/F,OAwTpD,IAAIiJ,GA0CAtM,EAAasM,EAAa,CAAC,CACvB1L,IAAK,OACLnC,MAAO,WACH,IAAI8N,EAAaD,EAAYC,WAE7BlJ,KAAKoF,QAAQ+D,MAAQnJ,KAAKmJ,MAAQD,EAClClJ,KAAKoF,QAAQgE,OAASpJ,KAAKoJ,OAASF,EAEpClJ,KAAKoF,QAAQiE,MAAMF,MAAQnJ,KAAKmJ,MAAQ,KACxCnJ,KAAKoF,QAAQiE,MAAMD,OAASpJ,KAAKoJ,OAAS,KAO1CpJ,KAAKsJ,aAAetJ,KAAKoF,QAAQmE,WAAU,GAQ3CvJ,KAAKwJ,QAAUxJ,KAAKoF,QAAQqE,WAAW,MAOvCzJ,KAAK0J,aAAe1J,KAAKsJ,aAAaG,WAAW,MAOjDzJ,KAAK2J,UAAY3J,KAAKoF,QAAQ+D,MAO9BnJ,KAAK4J,WAAa5J,KAAKoF,QAAQgE,OAO/BpJ,KAAK6J,MAAQ7J,KAAK2J,UAAY,EAO9B3J,KAAK8J,MAAQ9J,KAAK4J,WAAa,EAO/B5J,KAAK+J,QAAU/J,KAAK6J,MAAQ7J,KAAK8J,MAAQ9J,KAAK6J,MAAQ7J,KAAK8J,MAE3D9J,KAAKsJ,aAAaU,aAAc,EAEhChK,KAAK0J,aAAaO,UAAUjK,KAAK6J,MAAO7J,KAAK8J,OAC7C9J,KAAK0J,aAAaQ,OAElBlK,KAAKwJ,QAAQS,UAAUjK,KAAK6J,MAAO7J,KAAK8J,OACxC9J,KAAKwJ,QAAQU,OAEblK,KAAKwJ,QAAQlJ,IAAMN,KAAK0J,aAAapJ,IAAMN,KAAK+J,QAChD/J,KAAKwJ,QAAQW,UAAYnK,KAAK0J,aAAaS,UAAY,OAO5D,CACC5M,IAAK,UACLnC,MAAO,WACH,IAAI0G,EAAQmH,EAAYmB,WAAWxK,QAAQI,OAGtC8B,GACDmH,EAAYmB,WAAWrI,OAAOD,EAAO,GAGzC9B,KAAKwJ,QAAQa,WAAWrK,KAAK6J,OAAQ7J,KAAK8J,MAAO9J,KAAK2J,UAAW3J,KAAK4J,YAGtE5J,KAAKwJ,QAAQlJ,IAAM,YACZN,KAAKwJ,QAAQlJ,IAEpBN,KAAKwJ,QAAQW,UAAY,YAClBnK,KAAKwJ,QAAQW,UAEpBnK,KAAKwJ,QAAU,KACfxJ,KAAK0J,aAAe,KACpB1J,KAAKsJ,aAAe,KACpBtJ,KAAKoF,QAAU,KAOfpF,KAAKsK,SAAW,OAOrB,CACC/M,IAAK,SACLnC,MAAO,WACH,IAAImP,EAAQtB,EAAYC,WAOxB,OALc,IAAVqB,IACAvK,KAAK0J,aAAaa,MAAMA,EAAOA,GAC/BvK,KAAK0J,aAAaQ,QAGflK,OAOZ,CACCzC,IAAK,SACLnC,MAAO,WAUH,OATA4E,KAAKwK,OAOLxK,KAAKsK,UAAYtK,KAAKsK,WAEftK,QASX,CAAC,CACDzC,IAAK,SAMLnC,MAAO,WAIH,IAHA,IAAIK,EAAI,EACJmD,EAAIqK,EAAYmB,WAAW7N,OAExBd,EAAImD,EAAGnD,IACVwN,EAAYmB,WAAW3O,GAAGgP,WAGnC,CACClN,IAAK,aACLpC,IAAK,WAGD,OAAOsD,OAAOiM,kBAAoB,MAInCzB,GAxNP,SAASA,EAAY0B,EAAQxB,EAAOC,GAChC/K,EAAgB2B,KAAMiJ,GAEtBA,EAAYmB,WAAW9N,KAAK0D,MAO5BA,KAAKmJ,MAAQA,GAAS,EAOtBnJ,KAAKoJ,OAASA,GAAU,EAOxBpJ,KAAKoF,QAAUuF,EAEf3K,KAAKwK,OAiMbvB,EAAYmB,WAAa,GAIrB3L,OAAOmM,YAEPnM,OAAOmM,WAAW,sCAAsC5I,YAAYiH,EAAYwB,QA+CpF,IAAII,EAAiB,CAEjBtD,SAAU,KACV4B,MAAO,EACPC,OAAQ,EACR0B,SAAU,EACVC,SAAU,IACV3P,MAAO,EACP4P,OAAO,EACPC,YAAY,EACZC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAChCC,WAAY,GACZC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,OAAO,EACPC,SAAS,EACTC,cAAe,EAEfC,UAAW,KAGXC,SAAU,EACVC,SAAU,EACVC,cAAe,EACfC,cAAe,EAGfC,WAAW,EACXC,kBAAmB,IACnBC,cAAe,QAGfC,WAAY,OACZC,cAAe,GACfC,gBAAiB,OACjBC,gBAAiB,OACjBC,iBAAkB,GAClBC,WAAY,OACZC,WAAY,OACZC,aAAc,OACdC,YAAa,sBACbC,eAAgB,uBAChBC,eAAgB,OAChBC,qBAAsB,kBACtBC,kBAAmB,kBACnBC,iBAAkB,OAClBC,oBAAqB,OACrBC,kBAAmB,OACnBC,qBAAsB,UACtBC,iBAAkB,UAClBC,oBAAqB,OACrBC,kBAAmB,OACnBC,qBAAsB,OACtBC,wBAAyB,UACzBC,oBAAqB,gBACrBC,oBAAqB,sBACrBC,sBAAuB,yBACvBC,eAAgB,OAChBC,SAAU,OACVC,iBAAkB,OAClBC,eAAgB,OAEhBC,YAAa,QACbC,UAAW,QACXC,UAAW,QACXC,UAAW,QAEXC,gBAAiB,GACjBC,cAAe,GACfC,cAAe,GACfC,cAAe,GAEfC,iBAAkB,SAClBC,eAAgB,SAChBC,eAAgB,SAChBC,eAAgB,SAEhBC,kBAAmB,SACnBC,gBAAiB,SACjBC,gBAAiB,SACjBC,gBAAiB,SAGjBC,QAAQ,EACRC,cAAc,EACdC,WAAY,QACZC,YAAa,EACbC,UAAW,GACXC,YAAa,EAGbC,iBAAkB,EAClBC,kBAAmB,EACnBC,iBAAkB,EAClBC,kBAAmB,EAGnBC,UAAU,EACVC,eAAgB,EAChBC,cAAe,EACfC,UAAW,GACXC,iBAAiB,EACjBC,qBAAsB,IAGtBC,WAAY,CAAC,CAAErS,KAAM,GAAI0B,GAAI,GAAI4Q,MAAO,QAAU,CAAEtS,KAAM,GAAI0B,GAAI,GAAI4Q,MAAO,QAAU,CAAEtS,KAAM,GAAI0B,GAAI,IAAK4Q,MAAO,SACnHC,gBAAiB,GAGjBC,SAAU,GACVC,eAAgB,EAChBC,aAAa,EACbC,UAAW,GAoCf,SAASC,IACL5U,MAAMd,UAAUsD,YAAYiD,MAAMnB,KAAMX,aAG5CiR,EAAW1V,UAAYE,OAAOmD,OAAOvC,MAAMd,YACtBsD,YAAcoS,GAQxB1V,UAAUO,IAAM,SAAU4J,GACjC,GAAkB,iBAAPA,EAIP,IAHA,IAAItJ,EAAI,EACJmD,EAAIoB,KAAKzD,OAENd,EAAImD,EAAGnD,IAAK,CAKf,IAJauE,KAAKvE,GAAGuL,QAAQO,SAASrC,QAAUlF,KAAKvE,GAAGuL,QAAQO,SAEhE/B,SAAS+K,eAAevQ,KAAKvE,GAAGuL,QAAQO,UAAY,KAEzClC,aAAa,QAAUN,EAC9B,OAAO/E,KAAKvE,QAGjB,GAAkB,iBAAPsJ,EACd,OAAO/E,KAAK+E,GAGhB,OAAO,MA2BX,IAAIyL,EAAU,QAEVC,EAAQtQ,KAAKsQ,MACbrQ,EAAMD,KAAKC,IAEXsQ,EAAS,IAAIJ,EAEjBI,EAAOF,QAAUA,EA6BjB,IAAIG,GACA7S,EAAU6S,EAwZZ9P,GA1PElE,EAAagU,EAAW,CAAC,CACrBpT,IAAK,SASLnC,MAAO,SAAgB4L,GAWnB,OAVAlM,OAAOoE,OAAOc,KAAKgH,QAAShH,KAAKsF,KAAKsL,UAAU5J,GAAW,KAE3DhH,KAAK2K,OAAOxB,MAAQnJ,KAAKgH,QAAQmC,MACjCnJ,KAAK2K,OAAOvB,OAASpJ,KAAKgH,QAAQoC,OAElCpJ,KAAK+L,UAAUzH,KAAOtE,KAAKgH,QAAQiF,cACnCjM,KAAK+L,UAAUxH,SAAWvE,KAAKgH,QAAQgF,kBAEvChM,KAAK2K,OAAOF,SAELzK,OAOZ,CACCzC,IAAK,UACLnC,MAAO,WACH,IAAI0G,EAAQ4O,EAAO9Q,QAAQI,OAGtB8B,GAED4O,EAAO3O,OAAOD,EAAO,GAGzB9B,KAAK2K,OAAO9C,UACZ7H,KAAK2K,OAAS,KAEd3K,KAAK+L,UAAUlE,UACf7H,KAAK+L,UAAY,KAEjB/L,KAAK6Q,KAAK,aASf,CACCtT,IAAK,OASLnC,MAAO,WASH,OARI4E,KAAKgH,QAAQsE,gBAAkBtL,KAAKgK,cACpChK,KAAK5E,MAAQ4E,KAAKQ,OAClBR,KAAKgK,aAAc,EACnBhK,KAAK6Q,KAAK,SAGd7Q,KAAK6Q,KAAK,UAEH7Q,OAUZ,CACCzC,IAAK,QACLuT,IAAK,SAAa1V,GACd,IAAI2V,EAAS/Q,KAEb5E,EAAQuV,EAAUK,YAAY5V,EAAO4E,KAAKgH,QAAQ8D,UAElD,IAAImG,EAAYjR,KAAKgH,QAAQ5L,MAE7B,GAAIA,IAAU6V,EAId,GAAIjR,KAAKgH,QAAQ+E,UAAW,CACxB,GAAI/L,KAAK+L,UAAUhI,QAIf/D,KAAKgH,QAAQ5L,MAAQ4E,KAAKQ,OAGtBR,KAAKQ,SAAWpF,GAGhB,OAFA4E,KAAK+L,UAAU/H,qBACRhE,KAAKQ,YASAxF,IAAhBgF,KAAKQ,SACLR,KAAKQ,OAASpF,GAGlB4E,KAAK6Q,KAAK,kBAEV7Q,KAAK+L,UAAUmF,QAAQ,SAAUxM,GAC7B,IAAIyM,EAAWF,GAAa7V,EAAQ6V,GAAavM,EAEjDqM,EAAO/J,QAAQqE,eAAiB0F,EAAOF,KAAK,QAASM,EAAUJ,EAAO3V,OAEtE2V,EAAO/J,QAAQ5L,MAAQ+V,EAEvBJ,EAAOnN,OAEPmN,EAAOF,KAAK,UAAWnM,EAASqM,EAAO/J,QAAQ5L,QAChD,gBACuBJ,IAAlB+V,EAAOvQ,SACPuQ,EAAOF,KAAK,QAASE,EAAOvQ,OAAQuQ,EAAO3V,OAC3C2V,EAAO/J,QAAQ5L,MAAQ2V,EAAOvQ,cACvBuQ,EAAOvQ,QAGlBuQ,EAAOnN,OACPmN,EAAOF,KAAK,uBAGhB7Q,KAAK6Q,KAAK,QAASzV,EAAO4E,KAAK5E,OAC/B4E,KAAKgH,QAAQ5L,MAAQA,EACrB4E,KAAK4D,QAUbzI,IAAK,WACD,YAA8B,IAAhB6E,KAAKQ,OAAyBR,KAAKgH,QAAQ5L,MAAQ4E,KAAKQ,UAW1E,CAAC,CACDjD,IAAK,YACLnC,MAAO,SAAmB4L,GACtB,OAAOA,IAEZ,CACCzJ,IAAK,aACLnC,MAAO,SAAoBkK,EAAM0B,GAC7B,OAAO,IAAIhC,EAAYgC,EAAS,SAAU1B,KAU/C,CACC/H,IAAK,cACLnC,MAAO,SAAqBgK,GACxB,IAAIE,EAAON,EAAYoM,YAAYhM,EAAQC,aAAa,cACpDc,EAAaf,EAAQe,WACrB1K,EAAI,EACJmD,EAAIuH,EAAW5J,OACfyK,EAAU,GAEd,GAAK1B,EAAL,CAQA,IAJK,SAAS+C,KAAK/C,KACfA,GAAQ,SAGL7J,EAAImD,EAAGnD,IACVuL,EAAQhC,EAAYoM,YAAYjL,EAAW1K,GAAG4V,KAAKC,QAAQ,SAAU,KAAK,IAAUtM,EAAYkC,MAAMf,EAAW1K,GAAGL,OAGxH,IAAI4J,EAAYgC,EAAS5B,EAAQF,QAASI,GAAMI,QAAQN,MAW7D,CACC7H,IAAK,cACLnC,MAAO,SAAqBA,EAArB,GACH,IAAIsF,EAAyB,EAAnBrB,UAAU9C,aAA+BvB,IADhD,EAAA,EAC2E,EAQ9E,OANAI,EAAQmW,WAAWnW,IAEfyJ,MAAMzJ,IAAWwJ,SAASxJ,KAC1BA,EAAQmW,WAAW7Q,IAAQ,GAGxBtF,IAUZ,CACCmC,IAAK,MACLnC,MAAO,SAAa8E,EAAGsR,GACnB,OAAQtR,EAAIsR,EAAIA,GAAKA,IAE1B,CACCjU,IAAK,UACLpC,IAAK,WACD,OAAOqV,MAIRG,GApWP,SAASA,EAAU3J,GACf3I,EAAgB2B,KAAM2Q,GAEtB,IAAIc,EAAS9T,EAA2BqC,MAAO2Q,EAAUvS,WAAatD,OAAOI,eAAeyV,IAAYrV,KAAK0E,OAEzG0R,EAAYD,EAAOvT,YAAYmT,KAEnC,GAAkB,cAAdK,EACA,MAAM,IAAIhV,UAAU,0CA6CxB,GA1CAgU,EAAOpU,KAAKmV,GAERzK,EAAQ0E,WACR5Q,OAAO0E,KAAKwH,EAAQ0E,WAAWhE,QAAQ,SAAU5G,IAC9BkG,EAAQ0E,UAAU5K,aAAkBpF,MAAQsL,EAAQ0E,UAAU5K,GAAS,CAACkG,EAAQ0E,UAAU5K,KAEhG4G,QAAQ,SAAUlG,GACvBiQ,EAAO9P,GAAGb,EAAOU,OAW7BiQ,EAAOjB,QAAUA,EAOjBiB,EAAOnM,KAAOhL,EAAGoX,IAAcf,EAO/Bc,EAAOzH,aAAc,EAErBhD,EAAQ8D,SAAWyG,WAAWvK,EAAQ8D,UACtC9D,EAAQ+D,SAAWwG,WAAWvK,EAAQ+D,UACtC/D,EAAQ5L,MAAQmW,WAAWvK,EAAQ5L,QAAU,EAExC4L,EAAQwE,UACTxE,EAAQuI,iBAAmBvI,EAAQsI,kBAAoBtI,EAAQqI,iBAAmB,IAGjFrI,EAAQO,SACT,MAAM7K,UAAU,oEAGpB,IAAIiO,EAAS3D,EAAQO,SAASrC,QAAU8B,EAAQO,SAEhD/B,SAAS+K,eAAevJ,EAAQO,UAEhC,KAAMoD,aAAkBgH,mBACpB,MAAMjV,UAAU,0CAiCpB,OA9BAsK,EAAQmC,MAAQoI,WAAWvK,EAAQmC,QAAU,EAC7CnC,EAAQoC,OAASmI,WAAWvK,EAAQoC,SAAW,EAE1CpC,EAAQmC,OAAUnC,EAAQoC,SACtBpC,EAAQmC,QAAOnC,EAAQmC,MAAQwB,EAAOiH,WAAajH,EAAOiH,WAAWC,YAAclH,EAAOkH,aAC1F7K,EAAQoC,SAAQpC,EAAQoC,OAASuB,EAAOiH,WAAajH,EAAOiH,WAAWE,aAAenH,EAAOmH,eAQtGL,EAAOzK,QAAUA,GAAW,GAExByK,EAAOzK,QAAQsE,gBACfmG,EAAOjR,OAASiR,EAAOzK,QAAQ5L,MAC/BqW,EAAOzK,QAAQ5L,MAAQqW,EAAOzK,QAAQ8D,UAM1C2G,EAAO9G,OAAS,IAAI1B,EAAY0B,EAAQ3D,EAAQmC,MAAOnC,EAAQoC,QAC/DqI,EAAO9G,OAAOL,SAAWmH,EAAO7N,KAAKmC,KAAK0L,GAK1CA,EAAO1F,UAAY,IAAIpI,EAAUqD,EAAQiF,cAAejF,EAAQgF,mBACzDyF,EAkWf,SAASM,EAAUvI,EAASwI,EAAGC,EAAGC,EAAGC,EAAGC,GACpC5I,EAAQ6I,YAER7I,EAAQ8I,OAAON,EAAII,EAAGH,GACtBzI,EAAQ+I,OAAOP,EAAIE,EAAIE,EAAGH,GAE1BzI,EAAQgJ,iBAAiBR,EAAIE,EAAGD,EAAGD,EAAIE,EAAGD,EAAIG,GAC9C5I,EAAQ+I,OAAOP,EAAIE,EAAGD,EAAIE,EAAIC,GAE9B5I,EAAQgJ,iBAAiBR,EAAIE,EAAGD,EAAIE,EAAGH,EAAIE,EAAIE,EAAGH,EAAIE,GACtD3I,EAAQ+I,OAAOP,EAAII,EAAGH,EAAIE,GAE1B3I,EAAQgJ,iBAAiBR,EAAGC,EAAIE,EAAGH,EAAGC,EAAIE,EAAIC,GAC9C5I,EAAQ+I,OAAOP,EAAGC,EAAIG,GAEtB5I,EAAQgJ,iBAAiBR,EAAGC,EAAGD,EAAII,EAAGH,GAEtCzI,EAAQiJ,YAWZ,SAASC,EAASC,EAAK3L,GACnB,IAKI9G,EALA0S,EAAM5L,EAAQ4E,SACdiH,EAAM7L,EAAQ2E,SACdlQ,EAAI,EACJmD,OAAI,EACJkU,OAAS,EAOb,GAHA5S,GADAyS,EAAMpB,WAAWoB,IACP,EACVA,EAAMxS,KAAKC,IAAIuS,GAEL,EAANC,EAAS,CAIT,IAFAhU,EAAIiU,GADJC,EAASH,EAAII,QAAQH,GAAKI,WAAWjL,MAAM,MAC1B,GAAGxL,OAEbd,EAAImD,IAAKnD,EACZqX,EAAO,GAAK,IAAMA,EAAO,GAG7BA,GAAU5S,EAAI,IAAM,IAAM4S,EAAO,GAAK,IAAMA,EAAO,OAChD,CAIH,IAFAlU,EAAIiU,GADJC,EAAS3S,KAAKsQ,MAAMkC,GAAKK,YACRzW,OAEVd,EAAImD,IAAKnD,EACZqX,EAAS,IAAMA,EAGnBA,GAAU5S,EAAI,IAAM,IAAM4S,EAG9B,OAAOA,EA4IX,SAASG,EAAKjM,EAAShK,EAAQkW,GAC3B,OAAOlM,EAAQ,OAAShK,EAAS,SAAW,IAAMgK,EAAQ,OAAShK,EAAS,UAAY,IAAMgK,EAAQ,OAAShK,EAAS,QAAUkW,EAAW,MAAQlM,EAAQ,OAAShK,GAS1K,SAASmW,EAAM3J,GACXA,EAAQ4J,cAAgB,KACxB5J,EAAQ6J,cAAgB,KACxB7J,EAAQ8J,WAAa,KACrB9J,EAAQ+J,YAAc,GACtB/J,EAAQgK,YAAc,KACtBhK,EAAQiK,UAAY,EACpBjK,EAAQU,OAYZ,SAASwJ,EAAoBlK,EAASxC,EAAS2M,EAAQC,GAC/C5M,EAAQ6I,kBACRrG,EAAQ4J,cAAgBO,EACxBnK,EAAQ6J,cAAgBM,EACxBnK,EAAQ8J,WAAaM,EACrBpK,EAAQ+J,YAAcvM,EAAQ6F,2BA7TpB,IAAPvS,IACPA,EAAc,UAAIqW,EAClBrW,EAAW,QAAKmE,OAAO+G,UAAY,IAAY,OAAIkL,GAwavD,IAAImD,EAAW,CACX9B,UAAWA,EACXW,SAAUA,EACVoB,sBAlRJ,SAA+BC,EAAK/M,GAChC,IAAIgN,OAAQ,EACRC,GAAS,EAUb,OANID,EAD0B,IAA1BhN,EAAQ8E,cACA3L,KAAKsQ,MAAMsD,GAAKf,WAEhBe,EAAIhB,QAAQ/L,EAAQ8E,eAIJ,EAAxB9E,EAAQ6E,eAERoI,GAAUD,EAAMpU,QAAQ,MAGnBoU,EAAMpU,QAAQ,KACR,IAAM,CAACoH,EAAQ6E,cAAgB7E,EAAQ8E,cAAgB,GAAKmI,EAAS,EAAI,GAAKD,EAAMzX,QAAQ2L,KAAK,KAAO8L,EAAM1C,QAAQ,IAAK,IAE3H,CAACtK,EAAQ6E,cAAgB7E,EAAQ8E,cAAgB,GAAKmI,EAAS,EAAI,GAAKD,EAAMzX,QAAQ2L,KAAK,KAAO8L,GAI1GA,GA2PPE,QAjPJ,SAAiBC,GACb,OAAOA,EAAUhU,KAAKuD,GAAK,KAiP3B0Q,YAtOJ,SAAqBC,EAAQC,GACzB,MAAO,CAAEtC,GAAIqC,EAASlU,KAAK6C,IAAIsR,GAAQrC,EAAGoC,EAASlU,KAAKsD,IAAI6Q,KAsO5DC,eAvNJ,SAAwB/K,EAASgL,EAAWC,EAASlY,GACjD,IAAImY,IAAgC,EAAnBrV,UAAU9C,aAA+BvB,IAAjBqE,UAAU,KAAmBA,UAAU,GAC5E3B,EAA0B,EAAnB2B,UAAU9C,aAA+BvB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,EAE3EsV,EAAOnL,EAAQoL,qBAAqBF,EAAa,EAAIhX,EAAMgX,EAAahX,EAAO,EAAGgX,EAAa,EAAInY,EAAQmY,EAAanY,EAAS,GAKrI,OAHAoY,EAAKE,aAAa,EAAGL,GACrBG,EAAKE,aAAa,EAAGJ,GAEdE,GA+MPG,iBAvKJ,SAA0BtL,EAASxC,GAC1BA,EAAQgI,eAEbxF,EAAQ4J,cAAgB,EACxB5J,EAAQ6J,cAAgB,EACxB7J,EAAQ8J,WAAa,GACrB9J,EAAQ+J,YAAcvM,EAAQ0G,wBAkK9BqH,aAtGJ,SAAsBvL,EAASxC,EAAS5L,EAAO4W,EAAGC,EAAG3R,GACjD,GAAK0G,EAAQyI,SAAb,CAEA0D,EAAM3J,GAEN,IAAIwL,EAAYhO,EAAQ4E,SAAW,EAAI5E,EAAQ4E,SAAW,EACtDqJ,EAAgB,IAAIC,OAAO/U,KAAKG,IAAIa,MAAM,KAAM,CAACgU,OAAOC,SAASha,IAAQmB,OAASyY,GAAWpT,OAAOoF,EAAQkE,WAAWlD,IAAI,SAAU2K,GACrI,OAAOwC,OAAOC,SAASzC,EAAK,KAAKpW,OAASyY,OAE1CK,EAAOrO,EAAQ4I,WAAa8C,EAAStX,EAAO4L,GAC5CsO,EAAQhV,EAAM,IACdiV,EAAQjV,EAAM,IACdqT,EAAS,GAAM4B,EACf3B,EAAO,IAAM2B,EAEjB/L,EAAQyJ,KAAOA,EAAKjM,EAAS,QAASsO,GACtC5B,EAAoBlK,EAASxC,EAAS2M,EAAQC,GAE9C,IAAI4B,EAAKhM,EAAQiM,YAAYzO,EAAQ4I,UAAYyF,EAAO,IAAM3C,EAASgD,OAAOT,GAAgBjO,IAAUmC,MAExGgK,EAAM3J,GAEN,IAAImM,EAAKpE,WAAWvK,EAAQsH,eAAiBgH,EAAQ3B,EAASC,EAC1DgC,EAAKL,EAAQhE,WAAWvK,EAAQ0I,gBAChCmG,EAAa,EAANvV,EAAe,EAALsV,EAEjBE,EAAKN,EAAK,GAAKD,EACfQ,EAAK,IAAMJ,EAAKhC,EAASC,EACzBoC,EAAKT,EAAQvO,EAAQ8I,qBACrBmG,GAAO1E,WAAWvK,EAAQ2I,gBAAkB,GAAK,IAAMkG,EAErDC,EAANG,IAAaH,EAAKG,GACbJ,EAALC,IAAcA,EAAKD,GAEnB,IAAIK,EAAKlE,EAAI8D,EAAK,EACdK,EAAKlE,EAAI8D,EAAK,EACdK,EAAKnE,EAAI,KAAOsD,EAMpB,GAJA/L,EAAQ6I,YAEJ2D,EAAIjE,EAAUvI,EAAS0M,EAAIC,EAAIL,EAAIC,EAAIC,GAASxM,EAAQ6M,KAAKH,EAAIC,EAAIL,EAAIC,GAEzEH,EAAI,CACJ,IAAIU,EAAM9M,EAAQ+M,qBAAqBvE,EAAGoE,EAAY,GAARb,EAAYvD,EAAGoE,EAAY,GAARb,GAEjEe,EAAIzB,aAAa,EAAG7N,EAAQqG,mBAC5BiJ,EAAIzB,aAAa,EAAG7N,EAAQsG,sBAE5B9D,EAAQgK,YAAc8C,EACtB9M,EAAQiK,UAAYmC,EACpBpM,EAAQgN,SAGRxP,EAAQwG,sBACRhE,EAAQ8J,WAAa,IAAMiC,EAC3B/L,EAAQ+J,YAAcvM,EAAQwG,qBAG9BxG,EAAQuG,0BACR/D,EAAQiN,UAAYzP,EAAQuG,wBAC5B/D,EAAQjJ,QAGZiJ,EAAQiJ,YACRjJ,EAAQkN,UAERhD,EAAoBlK,EAASxC,EAAS2M,EAAQC,GAE9CpK,EAAQiN,UAAYzP,EAAQ4F,eAC5BpD,EAAQmN,UAAY,SACpBnN,EAAQoN,aAAe,aACvBpN,EAAQqN,SAASxB,EAAMa,EAAKJ,EAAK,EAAG7D,EAAI8D,EAAK,EAAIJ,EAAK,GACtDnM,EAAQkN,YA+BRI,YA3YJ,SAAqBta,GAIjB,KAAIA,aAAeua,cAA+B,aAAfva,EAAIwa,QAIvC,MAAMxa,GAoYNya,aAzXJ,SAAsBjQ,GAUlB,OATMA,EAAQkE,sBAAsBxP,QAChCsL,EAAQkE,WAAalE,EAAQkE,WAAa,CAAClE,EAAQkE,YAAc,IAGhElE,EAAQkE,WAAW3O,SACpByK,EAAQkE,WAAW5O,KAAKuX,EAASC,sBAAsB9M,EAAQ8D,SAAU9D,IACzEA,EAAQkE,WAAW5O,KAAKuX,EAASC,sBAAsB9M,EAAQ+D,SAAU/D,KAGtE,CAAsB,UAArBA,EAAQkQ,SAA2C,SAArBlQ,EAAQkQ,WAgX9CC,WAvMJ,SAAoB3N,EAASxC,GAGzB,GAFqC,EAAnB3H,UAAU9C,aAA+BvB,IAAjBqE,UAAU,IAAmBA,UAAU,GAI7E,OADAmK,EAAQkN,WACD,EAGXlN,EAAQU,OAER,IAAIgI,EAAIlL,EAAQwI,kBAOhB,OALI0C,IACA1I,EAAQ8J,WAAapB,EACrB1I,EAAQ+J,YAAcvM,EAAQ8F,oBAG3B,GAuLPmG,KAAMA,EACNmE,gBAzBJ,SAAyBpQ,GACrB,IAAI5L,EAAQ4L,EAAQ5L,MAChBsF,EAAMsG,EAAQ8D,SACdxK,EAAM0G,EAAQ+D,SACdsM,EAAmB,KAAb/W,EAAMI,GAEhB,MAAO,CACH4W,OAAQlc,EAAQsF,EAAMA,EAAcJ,EAARlF,EAAckF,EAAMlF,EAChDmc,SAAUnc,EAAQsF,EAAMA,EAAM2W,EAAa/W,EAARlF,EAAckF,EAAM+W,EAAKjc,KA8ChEsI,EAAKvD,KAAKuD,GACV8T,EAAM9T,EAAK,EAcX+T,EAA4B3c,OAAOoE,OAAO,GAAI2L,EAAgB,CAE9D6M,WAAY,IACZC,WAAY,GAGZC,uBAAwB,UACxBC,0BAA2B,OAC3BC,uBAAwB,UACxBC,0BAA2B,UAG3BC,iBAAkB,GAClBC,mBAAmB,EACnBC,mBAAmB,EACnBhJ,YAAa,GAGbiJ,gBAAiB,SACjBC,YAAY,EAEZlI,SAAU,IAcd,SAASmI,EAAiBhE,EAAQlL,EAAOK,EAASvF,EAAOJ,GACrD2F,EAAQ6I,YAER7I,EAAQ8O,IAAI,EAAG,EAAGlY,EAAIiU,GAAS,EAAQ,EAAL3Q,GAAQ,GAC1C8F,EAAQiK,UAAYtK,EACpBK,EAAQgK,YAAc3P,EAAMgQ,EAASU,eAAe/K,EAASvF,EAAOJ,EAAKwQ,GAAUpQ,EACnFuF,EAAQgN,SACRhN,EAAQiJ,YAWZ,SAAS8F,EAAgB/O,EAASxC,GAC9B,IAAIwR,EAAUvP,EAAYC,WAM1B,OAJKM,EAAQW,YACTX,EAAQW,UAAYX,EAAQlJ,IAAM0G,EAAQwI,kBAAoBxI,EAAQqI,iBAAmBmJ,EAAUxR,EAAQsI,kBAAoBkJ,EAAUxR,EAAQuI,iBAAmBiJ,GAAWxR,EAAQqI,iBAAmB,GAAM,IAAMrI,EAAQsI,kBAAoB,GAAM,IAAMtI,EAAQuI,iBAAmB,GAAM,IAG5R/F,EAAQW,UAWnB,SAASsO,EAAgBjP,EAASxC,GAC9B,IAAIwR,EAAUvP,EAAYC,WACtBwP,EAAK1R,EAAQwI,kBAAoBgJ,EACjCG,EAAKnP,EAAQlJ,IAAMoY,EAAK1R,EAAQqI,iBAAmBmJ,EAAU,EAC7DI,EAAKD,EAAK3R,EAAQqI,iBAAmBmJ,EAAU,EAAIxR,EAAQsI,kBAAoBkJ,EAAU,EAAI,GAC7FK,EAAKD,EAAK5R,EAAQsI,kBAAoBkJ,EAAU,EAAIxR,EAAQuI,iBAAmBiJ,EAAU,EAAI,GAC7FM,EAAKP,EAAgB/O,EAASxC,GAC9B2N,OAAO,EACPoE,GAAc,EAElBvP,EAAQU,OAEJlD,EAAQqI,mBACR0J,EAAclF,EAASsD,WAAW3N,EAASxC,EAAS+R,GACpDV,EAAiBM,EAAI3R,EAAQqI,iBAAmBmJ,EAAShP,EAASxC,EAAQ+F,iBAAkB/F,EAAQgG,sBAGpGhG,EAAQsI,oBACRyJ,EAAclF,EAASsD,WAAW3N,EAASxC,EAAS+R,GACpDV,EAAiBO,EAAI5R,EAAQsI,kBAAoBkJ,EAAShP,EAASxC,EAAQiG,kBAAmBjG,EAAQkG,uBAGtGlG,EAAQuI,mBACRwJ,EAAclF,EAASsD,WAAW3N,EAASxC,EAAS+R,GACpDV,EAAiBQ,EAAI7R,EAAQuI,iBAAmBiJ,EAAShP,EAASxC,EAAQmG,iBAAkBnG,EAAQoG,sBAGxGyG,EAASsD,WAAW3N,EAASxC,EAAS+R,GAEtCvP,EAAQ6I,YAER7I,EAAQ8O,IAAI,EAAG,EAAGlY,EAAI0Y,GAAK,EAAQ,EAALpV,GAAQ,GAElCsD,EAAQmF,gBACRwI,EAAOnL,EAAQ+M,qBAAqB,EAAG,EAAGuC,EAAK,EAAG,EAAG,EAAGA,IACnDjE,aAAa,EAAG7N,EAAQkF,YAC7ByI,EAAKE,aAAa,EAAG7N,EAAQmF,gBAE7BwI,EAAO3N,EAAQkF,WAGnB1C,EAAQiN,UAAY9B,EAEpBnL,EAAQjJ,OACRiJ,EAAQiJ,YAERjJ,EAAQkN,UAWZ,SAASsC,EAAqBxP,EAASxC,GACnC,IAAIiS,EAAUzP,EAAQlJ,KAAOiR,WAAWvK,EAAQiJ,kBAAoB,GAAK,IAEzE,GAAKgJ,EAAL,CAGA,IAAI7G,EAAIhS,EAAI8Y,EAAkB1P,EAASxC,GAAWiS,EAAU,GACxDxd,EAAI,EACJmD,EAAIoI,EAAQ+I,WAAWxT,OACvB4c,GAAMnS,EAAQ+D,SAAW/D,EAAQ8D,UAAY9D,EAAQ0Q,WAIzD,IAFAlO,EAAQU,OAEDzO,EAAImD,EAAGnD,IAAK,CACf,IAAI2d,EAAMpS,EAAQ+I,WAAWtU,GAE7B+N,EAAQ6I,YAER7I,EAAQ6P,OAAO7B,GACfhO,EAAQ8O,IAAI,EAAG,EAAGlG,EAAGyB,EAASK,QAAQlN,EAAQ2Q,YAAcyB,EAAI1b,KAAOsJ,EAAQ8D,UAAYqO,GAAKtF,EAASK,QAAQlN,EAAQ2Q,YAAcyB,EAAIha,GAAK4H,EAAQ8D,UAAYqO,IAAK,GACzK3P,EAAQgK,YAAc4F,EAAIpJ,MAC1BxG,EAAQiK,UAAYwF,EACpBzP,EAAQgN,SACRhN,EAAQiJ,YAERjJ,EAAQkN,UACRlN,EAAQU,SAYhB,SAASoP,EAAqB9P,EAASxC,GACnC,IAAIqN,EAAS6E,EAAkB1P,EAASxC,GACpCpI,OAAI,EACJ2a,OAAQ,EACRjF,OAAQ,EACR7Y,EAAI,EACJ+d,EAAQ,EACRC,EAAWtZ,KAAKC,IAAI4G,EAAQmE,aAAe,EAC3CuO,EAAQ1S,EAAQ0Q,YAAc1Q,EAAQ+D,SAAW/D,EAAQ8D,UAe7D,IAbAtB,EAAQiK,UAAYxK,EAAYC,WAChCM,EAAQgK,YAAcxM,EAAQqF,iBAAmBrF,EAAQsF,iBAEzD9C,EAAQU,OAEJlD,EAAQiE,YACRsO,EAAQvS,EAAQ+D,SAAW/D,EAAQ8D,SACnClM,EAAI6a,EAAWF,EAAQE,EAAW,EAClCD,GAAS7I,EAAUgJ,IAAI3S,EAAQkE,WAAW,GAAIuO,IAAa,GAAKC,GAEhE9a,EAAI6a,GAAYzS,EAAQkE,WAAW3O,OAAS,GAGzCd,EAAImD,IAAKnD,GACZ6Y,EAAQtN,EAAQ2Q,WAAa6B,EAAQ/d,GAAKuL,EAAQ0Q,WAAa9Y,KAClDoI,EAAQ0Q,WAAa1Q,EAAQ2Q,aACtCnO,EAAQ6P,OAAOxF,EAASK,QAAQI,IAEhC9K,EAAQ6I,YACR7I,EAAQ8I,OAAO,EAAG+B,GAClB7K,EAAQ+I,OAAO,EAAG8B,EAAuB,KAAd7K,EAAQlJ,KACnCsZ,EAAiBpQ,IAc7B,SAAS0P,EAAkB1P,EAASxC,GAChC,IAAI6S,EAAOrQ,EAAQlJ,IAAM,IAEzB,OAAOiY,EAAgB/O,EAASxC,GAAW,EAAI6S,GAAQ7S,EAAQkJ,SAAuD,GAA3CqB,WAAWvK,EAAQmJ,iBAAmB,KAAWoB,WAAWvK,EAAQkJ,WAAa,GAAK,GAAK2J,EAAO,GAUjL,SAASC,EAAqBtQ,EAASxC,GACnC6M,EAASoD,aAAajQ,GAGtB,IAEI+S,EAFA3H,EAAIhS,EAAI8Y,EAAkB1P,EAASxC,IACnCvL,OAAI,EAEJmD,EAAIoI,EAAQkE,WAAW3O,OACvB2M,EAAaD,EAAYC,WAQ7B,IANAM,EAAQiK,UAAY,EAAIvK,EACxBM,EAAQU,OAER6P,EAAS/S,EAAQoF,2BAA2B1Q,MAAQsL,EAAQoF,gBAAkB,IAAI1Q,MAAMkD,GAAG2B,KAAKyG,EAAQsF,kBAAoBtF,EAAQoF,iBAEpI3Q,EAAI,EACGA,EAAImD,IAAKnD,EACZ+N,EAAQgK,YAAcuG,EAAOte,GAC7B+N,EAAQ6P,OAAOxF,EAASK,QAAQ8F,EAAgBhT,EAASA,EAAQiE,WAAajE,EAAQkE,WAAWzP,GAAKA,EAAGmD,KAEzG4K,EAAQ6I,YACR7I,EAAQ8I,OAAO,EAAGF,GAClB5I,EAAQ+I,OAAO,EAAGH,EAAkB,IAAd5I,EAAQlJ,KAC9BsZ,EAAiBpQ,GAGjBxC,EAAQoE,cACR5B,EAAQgK,YAAcxM,EAAQsF,kBAAoByN,EAAO,GACzDvQ,EAAQ6P,OAAO7B,GAEfhO,EAAQ6I,YACR7I,EAAQ8O,IAAI,EAAG,EAAGlG,EAAGyB,EAASK,QAAQlN,EAAQ2Q,YAAa9D,EAASK,QAAQlN,EAAQ2Q,WAAa3Q,EAAQ0Q,aAAa,GACtHkC,EAAiBpQ,IAKzB,SAASwQ,EAAgBhT,EAASvL,EAAGmD,GACjC,GAAIoI,EAAQiE,WAAY,CACpB,IAAIyO,EAAQ1S,EAAQ0Q,YAAc1Q,EAAQ+D,SAAW/D,EAAQ8D,UAC7D,OAAO9D,EAAQ2Q,WAAa+B,GAASje,EAAIuL,EAAQ8D,UAGrD,OAAO9D,EAAQ2Q,WAAalc,GAAKuL,EAAQ0Q,YAAc9Y,EAAI,IAS/D,SAASgb,EAAiBpQ,GACtBA,EAAQgN,SACRhN,EAAQkN,UACRlN,EAAQiJ,YACRjJ,EAAQU,OAWZ,SAAS+P,EAAkBzQ,EAASxC,GAChC,IAAIqN,EAAS6E,EAAkB1P,EAASxC,GAAyB,IAAdwC,EAAQlJ,IACvD4Z,EAAS,GACTze,EAAI,EACJmD,EAAIoI,EAAQkE,WAAW3O,OACvB4d,EAAyC,WAA5BnT,EAAQmR,gBACrB4B,EAAS/S,EAAQyF,wBAAwB/Q,MAAQsL,EAAQyF,aAAe,IAAI/Q,MAAMkD,GAAG2B,KAAKyG,EAAQyF,cAElG2N,EAAkBD,IAAenT,EAAQ5L,MAAQ4L,EAAQ8D,WAAa9D,EAAQ+D,SAAW/D,EAAQ8D,UAAY9D,EAAQ0Q,WAAa,EAYtI,IAVIyC,IACA3Q,EAAQU,OACRV,EAAQ6P,QAAQxF,EAASK,QAAQkG,KAGrC5Q,EAAQyJ,KAAOY,EAASZ,KAAKjM,EAAS,UAAWwC,EAAQlJ,IAAM,KAC/DkJ,EAAQiK,UAAY,EACpBjK,EAAQmN,UAAY,SACpBnN,EAAQoN,aAAe,SAEhBnb,EAAImD,IAAKnD,EAAG,CACf,IAAI6Y,EAAQ8F,EAAkBJ,EAAgBhT,EAASA,EAAQiE,WAAajE,EAAQkE,WAAWzP,GAAKA,EAAGmD,GACnGyb,EAAY7Q,EAAQiM,YAAYzO,EAAQkE,WAAWzP,IAAI0N,MACvDmR,EAAatT,EAAQmH,gBACrBoM,EAAapa,KAAKqa,KAAKH,EAAYA,EAAYC,EAAaA,GAAc,EAC1EG,EAAQ5G,EAASO,YAAYC,EAASkG,EAAavT,EAAQyE,cAAgB,IAAMjC,EAAQlJ,IAAKuT,EAASK,QAAQI,IAErG,MAAVA,IAAeA,EAAQ,GAEvB4F,EAAO5F,KAIX4F,EAAO5F,IAAS,EAEhB9K,EAAQiN,UAAYsD,EAAOte,GAC3B+N,EAAQqN,SAAS7P,EAAQkE,WAAWzP,GAAIgf,EAAMzI,EAAGyI,EAAMxI,IAG3DkI,GAAc3Q,EAAQkN,UAW1B,SAASgE,EAAgBlR,EAASxC,GACzBA,EAAQuE,QAEb/B,EAAQU,OACRV,EAAQyJ,KAAOY,EAASZ,KAAKjM,EAAS,QAASwC,EAAQlJ,IAAM,KAC7DkJ,EAAQiN,UAAYzP,EAAQuF,WAC5B/C,EAAQmN,UAAY,SACpBnN,EAAQqN,SAAS7P,EAAQuE,MAAO,GAAI/B,EAAQlJ,IAAM,KAAoB,GAAdkJ,EAAQlJ,KAChEkJ,EAAQkN,WAWZ,SAASiE,EAAgBnR,EAASxC,GACzBA,EAAQgE,QAEbxB,EAAQU,OACRV,EAAQyJ,KAAOY,EAASZ,KAAKjM,EAAS,QAASwC,EAAQlJ,IAAM,KAC7DkJ,EAAQiN,UAAYzP,EAAQwF,WAC5BhD,EAAQmN,UAAY,SACpBnN,EAAQqN,SAAS7P,EAAQgE,MAAO,EAAGxB,EAAQlJ,IAAM,KAAoB,GAAdkJ,EAAQlJ,KAC/DkJ,EAAQkN,WAWZ,SAASkE,EAAiBpR,EAASxC,GAC/B,GAAKA,EAAQ+H,OAAb,CAEA,IAAI3T,EAAQ4L,EAAQ0Q,WAAa,IAAM7D,EAASuD,gBAAgBpQ,GAASuQ,SAAWvQ,EAAQ5L,MACxFkF,EAAMiY,EAAgB/O,EAASxC,GAE/B4R,EAAKxY,EAAIE,EAAM,IAAM0G,EAAQgR,kBAE7Ba,EAAKzY,EAAIE,EAAM,IAAM0G,EAAQgR,iBAAmB,KAEhD6C,EAAMza,EAAIE,EAAM,IAAM0G,EAAQmI,WAE9B2L,EAAS1a,EAAI4G,EAAQkI,YAAc5O,EAAM,IAAM0G,EAAQkI,YAAc,GAErE6L,EAAOza,EAAM,IAAM0G,EAAQoI,YAC3B4L,EAAO1a,EAAM,IAAM0G,EAAQoI,YAAc,EACzClG,EAAaD,EAAYC,WACzB+R,EAAsC,WAA5BjU,EAAQmR,gBAEtB3O,EAAQU,OAER2J,EAASiB,iBAAiBtL,EAASxC,GAEnCwC,EAAQ6P,OAAOxF,EAASK,QAAQ+G,EAAUjU,EAAQ2Q,WAAa3Q,EAAQ2Q,YAAcvc,EAAQ4L,EAAQ8D,WAAa9D,EAAQ+D,SAAW/D,EAAQ8D,UAAY9D,EAAQ0Q,aAEjKlO,EAAQiN,UAAY5C,EAASU,eAAe/K,EAASxC,EAAQ0F,YAAa1F,EAAQ2F,eAAgBkO,EAAMC,GAE7E,UAAvB9T,EAAQiI,YACRzF,EAAQ6I,YACR7I,EAAQ8I,QAAQ0I,GAAOF,GACvBtR,EAAQ+I,QAAQwI,EAAM,GACtBvR,EAAQ+I,QAAQ,EAAIrJ,EAAY2R,GAChCrR,EAAQ+I,OAAOrJ,EAAY2R,GAC3BrR,EAAQ+I,OAAOwI,EAAM,GACrBvR,EAAQ+I,OAAOyI,GAAOF,GACtBtR,EAAQiJ,YACRjJ,EAAQjJ,OAERiJ,EAAQ6I,YACR7I,EAAQ+I,QAAQ,GAAMrJ,EAAY2R,GAClCrR,EAAQ+I,QAAQ,EAAIrJ,EAAY2R,GAChCrR,EAAQ+I,QAAQwI,EAAM,GACtBvR,EAAQ+I,QAAQyI,GAAOF,GACvBtR,EAAQ+I,OAAOyI,EAAO,EAAI9R,EAAa,EAAIA,GAAa4R,GACxDtR,EAAQiJ,YACRjJ,EAAQiN,UAAYzP,EAAQyG,sBAI5BjE,EAAQ6I,YACR7I,EAAQ8I,QAAQ0I,EAAMH,GACtBrR,EAAQ+I,QAAQyI,EAAMF,GACtBtR,EAAQ+I,OAAOyI,EAAMF,GACrBtR,EAAQ+I,OAAOyI,EAAMH,GACrBrR,EAAQiJ,aARRjJ,EAAQjJ,OAYRyG,EAAQgR,mBACRxO,EAAQkN,UAER7C,EAASiB,iBAAiBtL,EAASxC,GAE/BA,EAAQkR,oBACR1O,EAAQ6I,YACR7I,EAAQ8O,IAAI,EAAG,EAAGM,EAAI,EAAQ,EAALlV,GAAQ,GACjC8F,EAAQiN,UAAY5C,EAASU,eAAe/K,EAASxC,EAAQ4Q,uBAAwB5Q,EAAQ6Q,0BAA2Be,GACxHpP,EAAQjJ,OACRiJ,EAAQiJ,aAGRzL,EAAQiR,oBACRzO,EAAQ6I,YACR7I,EAAQ8O,IAAI,EAAG,EAAGO,EAAI,EAAQ,EAALnV,GAAQ,GACjC8F,EAAQiN,UAAY5C,EAASU,eAAe/K,EAASxC,EAAQ8Q,uBAAwB9Q,EAAQ+Q,0BAA2Bc,GACxHrP,EAAQjJ,OACRiJ,EAAQiJ,aAGZjJ,EAAQkN,YAYhB,SAASwE,EAAmB1R,EAASxC,EAAS5L,GAC1CyY,EAASkB,aAAavL,EAASxC,EAAS5L,EAAO,EAAGoO,EAAQlJ,IAAoB,IAAdkJ,EAAQlJ,IAAYkJ,EAAQlJ,KAUhG,SAAS6a,EAAsB3R,EAASxC,GACpC,IAAI6S,EAAOrQ,EAAQlJ,IAAM,IACrB8a,EAAO7C,EAAgB/O,EAASxC,GAAW,EAAI6S,EAC/CjE,EAAKrE,WAAWvK,EAAQmJ,iBAAmB,EAC3C+B,GAAKX,WAAWvK,EAAQkJ,WAAa,GAAK2J,EAC1CwB,EAAOD,EAAY,EAALxF,EAAS1D,EACvBoJ,GAAQF,EAAOC,GAAQ,EACvBjJ,EAAIiJ,EAAOC,EACX9B,EAAQ5D,EAAKxD,EACbmJ,EAAKvU,EAAQ2Q,WACb6D,EAAKxU,EAAQ2Q,WAAa3Q,EAAQ0Q,WAEtClO,EAAQU,OACRV,EAAQ6P,OAAO7B,GAEX5B,IAEApM,EAAQ6I,YACR7I,EAAQ8O,IAAI,EAAG,EAAGlG,EAAGyB,EAASK,QAAQqH,GAAM/B,EAAO3F,EAASK,QAAQsH,GAAMhC,GAAO,GACjFhQ,EAAQgK,YAAcxM,EAAQ2G,eAC9BnE,EAAQiK,UAAmB,EAAP6H,EACpB9R,EAAQgN,SACRhN,EAAQiJ,aAGRP,IAEA1I,EAAQ6I,YACR7I,EAAQ8O,IAAI,EAAG,EAAGlG,EAAGyB,EAASK,QAAQqH,GAAK1H,EAASK,QAAQsH,IAAK,GACjEhS,EAAQgK,YAAcxM,EAAQ4G,SAC9BpE,EAAQiK,UAAYvB,EACpB1I,EAAQgN,SACRhN,EAAQiJ,YAEJzL,EAAQqJ,YAER7G,EAAQ6I,YACR7I,EAAQ8O,IAAI,EAAG,EAAG8C,EAAMvH,EAASK,QAAQqH,GAAK1H,EAASK,QAAQsH,IAAK,GACpEhS,EAAQiS,OAERjS,EAAQ6I,YACR7I,EAAQgK,YAAcxM,EAAQ4G,SAC9BpE,EAAQiK,UAAY,EACpBjK,EAAQ8J,WAAatM,EAAQqJ,UAC7B7G,EAAQ+J,YAAcvM,EAAQ8G,eAC9BtE,EAAQ4J,cAAgB,EACxB5J,EAAQ6J,cAAgB,EACxB7J,EAAQ8O,IAAI,EAAG,EAAG8C,EAAMvH,EAASK,QAAQlN,EAAQ2Q,YAAa9D,EAASK,QAAQlN,EAAQ2Q,WAAa3Q,EAAQ0Q,aAAa,GACzHlO,EAAQgN,SACRhN,EAAQiJ,YAERjJ,EAAQkN,UACRlN,EAAQ6P,OAAO7B,IAIfxQ,EAAQoJ,cACR5G,EAAQ6I,YACR7I,EAAQ8O,IAAI,EAAG,EAAGlG,EAAGyB,EAASK,QAAQqH,GAAK1H,EAASK,QAAQqH,GAAM1H,EAASuD,gBAAgBpQ,GAASsQ,OAAStQ,EAAQ8D,WAAa9D,EAAQ+D,SAAW/D,EAAQ8D,UAAY9D,EAAQ0Q,aAAa,GAC9LlO,EAAQgK,YAAcxM,EAAQ6G,iBAC9BrE,EAAQiK,UAAYvB,EACpB1I,EAAQgN,SACRhN,EAAQiJ,cAIhBjJ,EAAQkN,UAQZ,SAASgF,EAAaC,GAClB,OAAIA,EAAM3U,QAAQqE,cACPsQ,EAAM3U,QAAQ5L,MAGlBugB,EAAMvgB,MA8CjB,IAAIwgB,GACA9d,EAAU8d,GAiQZjL,GA/KEhU,EAAaif,GAAa,CAAC,CACvBre,IAAK,OAQLnC,MAAO,WACHygB,QAAQC,IAAI,QACZ,IACI,IAAInR,EAAS3K,KAAK2K,OACdoR,EAAO,EAAEpR,EAAOd,OAAQc,EAAOb,MAAOa,EAAOhB,UAAWgB,EAAOf,YAC/DoI,EAAI+J,EAAK,GACT9J,EAAI8J,EAAK,GACT7J,EAAI6J,EAAK,GACT5J,EAAI4J,EAAK,GAET/U,EAAUhH,KAAKgH,QAEnB,GAAgC,WAA5BA,EAAQmR,gBAA8B,CACtC,IAAKxN,EAAOrB,aAAaU,YAAa,CAClC,IAAIR,EAAUmB,EAAOjB,aAGrBF,EAAQa,UAAU2H,EAAGC,EAAGC,EAAGC,GAC3B3I,EAAQU,OAERlK,KAAK6Q,KAAK,eACV4H,EAAgBjP,EAASxC,GACzBhH,KAAK6Q,KAAK,oBACVmI,EAAqBxP,EAASxC,GAC9BhH,KAAK6Q,KAAK,oBACVyI,EAAqB9P,EAASxC,GAC9BhH,KAAK6Q,KAAK,oBACViJ,EAAqBtQ,EAASxC,GAC9BhH,KAAK6Q,KAAK,iBACVoJ,EAAkBzQ,EAASxC,GAC3BhH,KAAK6Q,KAAK,eACV6J,EAAgBlR,EAASxC,GACzBhH,KAAK6Q,KAAK,eACV8J,EAAgBnR,EAASxC,GAEzB2D,EAAOrB,aAAaU,aAAc,EAGtChK,KAAK2K,OAAOqR,SAGZrR,EAAOnB,QAAQa,UAAU2H,EAAGC,EAAGC,EAAGC,GAClCxH,EAAOnB,QAAQU,OAEfS,EAAOnB,QAAQyS,UAAUtR,EAAOrB,aAAc0I,EAAGC,EAAGC,EAAGC,GACvDxH,EAAOnB,QAAQU,OAEflK,KAAK6Q,KAAK,qBACVsK,EAAsBxQ,EAAOnB,QAASxC,GACtChH,KAAK6Q,KAAK,kBACVqK,EAAmBvQ,EAAOnB,QAASxC,EAAS0U,EAAa1b,OACzDA,KAAK6Q,KAAK,gBACV+J,EAAiBjQ,EAAOnB,QAASxC,OAC9B,CACH,IAAIoT,GAAmBvG,EAASK,SAASlN,EAAQ5L,MAAQ4L,EAAQ8D,WAAa9D,EAAQ+D,SAAW/D,EAAQ8D,UAAY9D,EAAQ0Q,YA2B7H,GAxBA/M,EAAOnB,QAAQa,UAAU2H,EAAGC,EAAGC,EAAGC,GAClCxH,EAAOnB,QAAQU,OAEflK,KAAK6Q,KAAK,eACV4H,EAAgB9N,EAAOnB,QAASxC,GAEhC2D,EAAOnB,QAAQ6P,OAAOe,GAGtBpa,KAAK6Q,KAAK,oBACVmI,EAAqBrO,EAAOnB,QAASxC,GACrChH,KAAK6Q,KAAK,oBACVyI,EAAqB3O,EAAOnB,QAASxC,GACrChH,KAAK6Q,KAAK,oBACViJ,EAAqBnP,EAAOnB,QAASxC,GACrChH,KAAK6Q,KAAK,iBACVoJ,EAAkBtP,EAAOnB,QAASxC,GAClChH,KAAK6Q,KAAK,qBACVsK,EAAsBxQ,EAAOnB,QAASxC,GAGtC2D,EAAOnB,QAAQ6P,QAAQe,GACvBzP,EAAOnB,QAAQU,QAEVS,EAAOrB,aAAaU,YAAa,CAClC,IAAIkS,EAAWvR,EAAOjB,aAGtBwS,EAAS7R,UAAU2H,EAAGC,EAAGC,EAAGC,GAC5B+J,EAAShS,OAETlK,KAAK6Q,KAAK,eACV6J,EAAgBwB,EAAUlV,GAC1BhH,KAAK6Q,KAAK,eACV8J,EAAgBuB,EAAUlV,GAC1BhH,KAAK6Q,KAAK,gBACV+J,EAAiBsB,EAAUlV,GAE3B2D,EAAOrB,aAAaU,aAAc,EAGtCW,EAAOnB,QAAQyS,UAAUtR,EAAOrB,aAAc0I,EAAGC,EAAGC,EAAGC,GAI3DnS,KAAK6Q,KAAK,kBACVqK,EAAmBvQ,EAAOnB,QAASxC,EAAS0U,EAAa1b,OAEzDzF,EAAKqhB,GAAYhhB,UAAUwD,WAAatD,OAAOI,eAAe0gB,GAAYhhB,WAAY,OAAQoF,MAAM1E,KAAK0E,MAC3G,MAAOxD,GACLqX,EAASiD,YAAYta,GAGzB,OAAOwD,OAEZ,CACCzC,IAAK,QAQLuT,IAAK,SAAa1V,GACdA,EAAQuV,EAAUK,YAAY5V,EAAO4E,KAAKgH,QAAQ8D,UAE9C9K,KAAKgH,QAAQ+E,WAAyC,MAA5B/L,KAAKgH,QAAQ0Q,YAAsB1X,KAAKgH,QAAQoR,aAC1EpY,KAAKQ,OAASpF,EACdA,EAAQ4E,KAAKgH,QAAQ5L,QAAUA,EAAQ4E,KAAKgH,QAAQ5L,OAAS,IAAM,KAAO,IAAM,KA/1GrF,SAAS0V,EAAItW,EAAQC,EAAUW,EAAOV,GAAY,IAAIG,EAAOC,OAAOC,yBAAyBP,EAAQC,GAAW,QAAaO,IAATH,EAAoB,CAAE,IAAII,EAASH,OAAOI,eAAeV,GAAwB,OAAXS,GAAmB6V,EAAI7V,EAAQR,EAAUW,EAAOV,QAAoB,GAAI,UAAWG,GAAQA,EAAKwC,SAAYxC,EAAKO,MAAQA,MAAc,CAAE,IAAI+gB,EAASthB,EAAKiW,SAAoB9V,IAAXmhB,GAAwBA,EAAO7gB,KAAKZ,EAAUU,GAAY,OAAOA,EAk2G9ZghB,CAAKR,GAAYhhB,UAAUwD,WAAatD,OAAOI,eAAe0gB,GAAYhhB,WAAY,QAASQ,EAAO4E,OAS1G7E,IAAK,WACD,OAAOZ,EAAKqhB,GAAYhhB,UAAUwD,WAAatD,OAAOI,eAAe0gB,GAAYhhB,WAAY,QAASoF,SAE1G,CAAC,CACDzC,IAAK,YACLnC,MAAO,SAAmB4L,GAkBtB,OAjBuB,GAAnBA,EAAQkJ,WAAelJ,EAAQkJ,SAAW,IAG1CrL,MAAMmC,EAAQ2Q,cAAa3Q,EAAQ2Q,WAAa,IAEhD9S,MAAMmC,EAAQ0Q,cAAa1Q,EAAQ0Q,WAAa,KAG3B,IAArB1Q,EAAQ0Q,aAAkB1Q,EAAQ0Q,WAAa,KAE/C1Q,EAAQ0Q,WAAa,IAAG1Q,EAAQ0Q,WAAa,GAG7C1Q,EAAQ2Q,WAAa,IAAG3Q,EAAQ2Q,WAAa,GAExB,IAArB3Q,EAAQ2Q,aAAkB3Q,EAAQ2Q,WAAa,KAE5C3Q,MAIR4U,IA9LP,SAASA,GAAY5U,GAIjB,OAHA3I,EAAgB2B,KAAM4b,IAEtB5U,EAAUlM,OAAOoE,OAAO,GAAIuY,EAA2BzQ,GAAW,IAC3DrJ,EAA2BqC,MAAO4b,GAAYxd,WAAatD,OAAOI,eAAe0gB,KAActgB,KAAK0E,KAAM4b,GAAYhL,UAAU5J,UAoM7H,IAAP1M,IACPA,EAAgB,YAAIshB,GAGxBjL,EAAU0L,WAAW,cAAe5E,GAqCpC,IAAI6E,GAA4BxhB,OAAOoE,OAAO,GAAI2L,EAAgB,CAE9D0R,aAAc,EAKdC,eAAgB,GAChBC,YAAa,GACbC,oBAAqB,GAErBtN,YAAa,EAEb8H,SAAU,OACVyF,WAAY,OAEZC,WAAY,OAEZC,WAAY,GACZC,gBAAiB,EACjBC,aAAc,EACdC,UAAW,GACX5O,cAAe,GAEf6B,gBAAiB,KAwCrB,SAASgN,GAAiBzT,EAASL,EAAOiJ,EAAGJ,EAAGC,EAAGC,EAAGC,EAAG+K,EAAYC,GACjE3T,EAAQ6I,YACR7I,EAAQiK,UAAYtK,EACpBK,EAAQgK,YAAc2J,EAAWtJ,EAASU,eAAe/K,EAAS0T,EAAYC,EAAUhL,GAAG,EAAMF,GAAKiL,EAElG,EAAJ9K,EAAQyB,EAAS9B,UAAUvI,EAASwI,EAAGC,EAAGC,EAAGC,EAAGC,GAAK5I,EAAQ6M,KAAKrE,EAAGC,EAAGC,EAAGC,GAE3E3I,EAAQgN,SACRhN,EAAQiJ,YAcZ,SAAS2K,GAAgB5T,EAASxC,EAASgL,EAAGC,EAAGC,EAAGC,GAChD,IAAIqG,EAAUvP,EAAYC,WAC1BM,EAAQU,OAER,IAAIkI,EAAIpL,EAAQuV,aAAe/D,EAC3B6E,EAAKnL,EAAIlL,EAAQwI,kBAAoBxI,EAAQqI,iBAAmBmJ,EAChE8E,EAAKD,EAAKrW,EAAQqI,iBAAmBmJ,EAAUxR,EAAQsI,kBAAoBkJ,EAC3E+E,EAAKD,EAAKtW,EAAQsI,kBAAoBkJ,EAAUxR,EAAQuI,iBAAmBiJ,EAC3EgF,EAAKD,EAAKvW,EAAQuI,iBAAmBiJ,EAErCiF,EAAKtL,EAAInL,EAAQwI,kBAAoBxI,EAAQqI,iBAAmBmJ,EAChEkF,EAAKD,EAAKzW,EAAQqI,iBAAmBmJ,EAAUxR,EAAQsI,kBAAoBkJ,EAC3EmF,EAAKD,EAAK1W,EAAQsI,kBAAoBkJ,EAAUxR,EAAQuI,iBAAmBiJ,EAC3EoF,EAAKD,EAAK3W,EAAQuI,iBAAmBiJ,EAErCqF,EAAK7L,GAAKsL,EAAKD,GAAM,EACrBS,EAAKD,GAAMN,EAAKD,GAAM,EACtBS,EAAKD,GAAMN,EAAKD,GAAM,EAEtBS,EAAK/L,GAAKyL,EAAKD,GAAM,EACrBQ,EAAKD,GAAML,EAAKD,GAAM,EACtBQ,EAAKD,GAAML,EAAKD,GAAM,EACtBQ,EAAiB,EACjBpF,GAAc,EA0BlB,OAxBI/R,EAAQqI,mBACR0J,EAAclF,EAASsD,WAAW3N,EAASxC,EAAS+R,GACpDkE,GAAiBzT,EAASxC,EAAQqI,iBAAmBmJ,EAASpG,EAAGJ,EAAIhL,EAAQqI,iBAAmBmJ,EAAU,EAAI2F,EAAgBlM,EAAIjL,EAAQqI,iBAAmBmJ,EAAU,EAAI2F,EAAgBd,EAAII,EAAIzW,EAAQ+F,iBAAkB/F,EAAQgG,qBACrOmR,GAAkB,GAAM3F,GAGxBxR,EAAQsI,oBACRyJ,EAAclF,EAASsD,WAAW3N,EAASxC,EAAS+R,GACpDkE,GAAiBzT,EAASxC,EAAQsI,kBAAoBkJ,EAASpG,GAAK,EAAqB,EAAjB+L,EAAoBN,EAAK7W,EAAQsI,kBAAoBkJ,EAAU,EAAI2F,EAAgBH,EAAKhX,EAAQsI,kBAAoBkJ,EAAU,EAAI2F,EAAgBb,EAAsB,EAAjBa,EAAoBT,EAAsB,EAAjBS,EAAoBnX,EAAQiG,kBAAmBjG,EAAQkG,sBAC/SiR,GAAkB,GAAM3F,GAGxBxR,EAAQuI,mBACRwJ,EAAclF,EAASsD,WAAW3N,EAASxC,EAAS+R,GACpDkE,GAAiBzT,EAASxC,EAAQuI,iBAAmBiJ,EAASpG,GAAK,EAAqB,EAAjB+L,EAAoBL,EAAK9W,EAAQuI,iBAAmBiJ,EAAU,EAAI2F,EAAgBF,EAAKjX,EAAQuI,iBAAmBiJ,EAAU,EAAI2F,EAAgBZ,EAAsB,EAAjBY,EAAoBR,EAAsB,EAAjBQ,EAAoBnX,EAAQmG,iBAAkBnG,EAAQoG,qBAC3S+Q,GAAkB,GAAM3F,GAG5B3E,EAASsD,WAAW3N,EAASxC,EAAS+R,GAzF1C,SAAuBvP,EAAS4I,EAAGJ,EAAGC,EAAGC,EAAGC,EAAG+K,EAAYC,GACvD3T,EAAQ6I,YACR7I,EAAQiN,UAAY0G,EAAWtJ,EAASU,eAAe/K,EAAS0T,EAAYC,EAAchL,EAAJD,EAAQA,EAAIC,EAAOD,EAAJC,EAAWA,EAAJD,EAAQF,EAAIC,GAAKiL,EAEzH,EAAJ9K,EAAQyB,EAAS9B,UAAUvI,EAASwI,EAAGC,EAAGC,EAAGC,EAAGC,GAAK5I,EAAQ6M,KAAKrE,EAAGC,EAAGC,EAAGC,GAE3E3I,EAAQjJ,OACRiJ,EAAQiJ,YAoFR2L,CAAc5U,EAAS4I,EAAG2L,EAAIG,EAAIV,EAAsB,EAAjBW,EAAoBP,EAAsB,EAAjBO,EAAoBnX,EAAQkF,WAAYlF,EAAQmF,eAEhH3C,EAAQkN,UAED,CAACqH,EAAIG,EAAIV,EAAII,GAuHxB,SAASS,GAAmB7U,EAASxC,EAAS1B,EAAM0M,EAAGC,EAAGC,EAAGC,GACzD,IAAImM,EAzGR,SAAuB9U,EAASxC,EAASgL,EAAGC,EAAGC,EAAGC,GAC9C,IAAIjJ,EAAaD,EAAYC,WACzBwL,EAAkBxC,GAALC,EACbhJ,EAAQuL,EAAiB,IAAJxC,EAAWC,EAChC5V,EAASmY,EAAavC,EAAID,EAG9BF,EAAI0C,EAAajE,EAAMuB,GAAKE,EAAI/I,GAAS,GAAK6I,EAE9C,IAAIuM,IAAavX,EAAQuE,MACrBiT,IAAaxX,EAAQgE,MACrByT,IAAazX,EAAQyI,SAErBiP,OAAc,EACdC,OAAc,EACdC,OAAc,EAEdlK,GAEAiK,EAAclO,EAAe,IAATlU,GAEpBmiB,EAAcjO,EAAe,KAATlU,GAEpBqiB,EAAcnO,EAAe,IAATlU,GAEhBgiB,IACAhiB,GAAUmiB,EACVzM,GAAKyM,GAGLF,IAAUjiB,GAAUoiB,GACpBF,IAAUliB,GAAUqiB,KAGxBD,EAAcD,EAAcjO,EAAc,IAARtH,GAE9BoV,IACApV,GAASuV,EACTzM,GAAKyM,GAGLF,IAAUrV,GAASwV,IAG3B,IAAIE,EAAuC,EAAzB7X,EAAQmJ,eAEtBkE,EAASrN,EAAQwV,eAAiB/L,EAAMtH,EAAQnC,EAAQwV,eAAiB,IAAMqC,EAAc,GAAK,EAElG3O,EAAWO,EAAMtH,EAAQnC,EAAQkJ,SAAW,IAAM2O,GAElD7B,EAAYvM,EAAMlU,EAASyK,EAAQgW,UAAY,IAAM6B,GAErDC,EAAYrO,GAAOlU,EAASygB,GAAa,GAIzC+B,EAAKtO,EAAMuB,GAAK0C,EAAavL,EAAQ,EAAI2V,EAAYzK,IAErD2K,EAAKvO,EAAMwB,GAAKyC,EAAanY,EAASuiB,EAAYzK,EAASwK,EAAc,EAAI1V,EAAQ,IACrF8V,GAAKvK,GAAgB1N,EAAQkY,SAAWlY,EAAQmY,SAA6E,GAAhEnY,EAAQmY,UAAY,EAAI,GAAKnY,EAAQ6V,WAAa,IAAM1T,EACrHiW,EAAM1K,GAAgB1N,EAAQkY,SAAWlY,EAAQmY,SAA6E,GAAhEnY,EAAQmY,UAAY,EAAI,GAAKnY,EAAQ6V,WAAa,IAAM1T,EA4B1H,OAzBAK,EAAQ6V,cAAgB,CACpB3K,WAAYA,EACZvL,MAAOA,EACP5M,OAAQA,EACR2T,SAAUA,EACV8M,UAAWA,EACX6B,YAAaA,EACbC,UAAWA,EACXzK,OAAQA,EACRnL,WAAYA,EACZoW,UAAW,KACXZ,YAAaH,EAAWG,EAAc,EACtCC,YAAaH,EAAWG,EAAc,EACtCY,kBACI,OAAOvf,KAAKgd,UAAYhd,KAAKsf,UAAYtf,KAAK6e,aAElDW,EAAGxN,EAAIiN,EACPQ,EAAGxN,EAAImN,EACPL,GAAIA,EAAKE,EACTD,GAAIA,EAAKI,EACTM,MAAO1N,EACP2N,MAAO1N,EACP8K,aAAc/V,EAAQ+V,aAAe,KAGlCvT,EAAQ6V,cAiBMA,CAAc7V,EAASxC,EAASgL,EAAGC,EAAGC,EAAGC,GAC1DuC,EAAa4J,EAAe5J,WAC5BvL,EAAQmV,EAAenV,MACvB+G,EAAWoO,EAAepO,SAC1B8M,EAAYsB,EAAetB,UAC3B6B,EAAcP,EAAeO,YAC7BC,EAAYR,EAAeQ,UAC3BzK,EAASiK,EAAejK,OACxB0K,EAAKT,EAAeS,GACpBC,EAAKV,EAAeU,GACpBQ,EAAIlB,EAAekB,EACnBC,EAAInB,EAAemB,EAEnBG,EAAgB5C,EAKpB,GAHAxT,EAAQU,OACRV,EAAQ6I,YAEJrL,EAAQwV,eAAgB,CACxB,IAAIqD,EAAYhM,EAASK,QAAQQ,EAAa,IAAM,GAChDoL,EAAQ3f,KAAK4f,KAAK7P,EAAW,EAAImE,GACjC2L,EAAW7f,KAAKsD,IAAIqc,GACpBG,EAAW9f,KAAK6C,IAAI8c,GAEpBI,EAAKnB,GAAMrK,EAAaL,EAAS4L,EAAW5L,EAAS2L,EAAWnB,EAAc,GAC9EsB,EAAKzL,EAAasK,EAAK3K,EAAS2L,EAAWhB,EAAK3K,EAAS4L,EAEzDG,EAAyBhgB,EAAbsU,EAAiByL,EAAKnB,EAAUkB,EAAKnB,GAGrDvV,EAAQ6V,cAAcC,UAAY7O,EAAM2P,EAAY/L,GAIpD,IAAIwJ,EAAKnJ,EAAajE,EAAMsO,EAAK1K,EAAS4L,GAAYC,EAElDlC,EAAKtJ,EAAayL,EAAK1P,EAAMuO,EAAK3K,EAAS4L,GAElC,aAAT3a,IACA0X,EAAYxT,EAAQ6V,cAAcC,WAAatC,EAAYxT,EAAQ6V,cAAcC,YAAczL,EAASuD,gBAAgBpQ,GAASsQ,OAAStQ,EAAQ8D,WAAa9D,EAAQ+D,SAAW/D,EAAQ8D,WAK9L,IAAIgT,EAAKrN,EAAMyP,EAAKlD,EAAYxT,EAAQ6V,cAAcC,UAAYT,EAAc,GAE5EZ,EAAKxN,EAAM0P,EAAKnD,EAAYxT,EAAQ6V,cAAcC,UAAYT,EAAc,GAEhFrV,EAAQ8O,IAAIyG,EAAIC,EAAI3K,EAAQwL,EAAYC,EAAOD,EAAYC,GAEvDpL,GACAlL,EAAQ8I,OAAO4N,EAAIlC,GACnBxU,EAAQ+I,OAAO2N,EAAIjC,GACnBzU,EAAQ+I,OAAOsL,EAAII,GACnBzU,EAAQ+I,OAAOsL,EAAIG,KAEnBxU,EAAQ8I,OAAO4N,EAAIlC,GACnBxU,EAAQ+I,OAAOuL,EAAIE,GACnBxU,EAAQ+I,OAAOuL,EAAIqC,GACnB3W,EAAQ+I,OAAO2N,EAAIC,QAEpB,CAGH,IAAIE,EAAK5P,EAAMiE,EAAa8K,GAAKrW,EAAQ+G,GAAY,EAAIsP,EAAIV,GAEzDwB,EAAK7P,EAAMiE,EAAa+K,EAAIzC,EAAY8B,EAAYW,GAAKtW,EAAQ+G,GAAY,GAEpE,aAAT5K,IACA0X,IAAchW,EAAQ5L,MAAQ4L,EAAQ8D,WAAa9D,EAAQ+D,SAAW/D,EAAQ8D,WAG9E4J,EAAYlL,EAAQ6M,KAAKgK,EAAIC,EAAIpQ,GAAW8M,GAAgBxT,EAAQ6M,KAAKgK,EAAIC,EAAItD,EAAW9M,GAGvF,aAAT5K,GAAuB0B,EAAQmJ,iBAC/B3G,EAAQiK,UAAYoL,EACpBrV,EAAQgK,YAAcxM,EAAQ2G,eAE9BnE,EAAQgN,UAGC,aAATlR,GAAuB0B,EAAQ4G,UAC/BpE,EAAQiN,UAAYzP,EAAQyV,YAAc5I,EAASU,eAAe/K,EAASxC,EAAQ4G,SAAU5G,EAAQyV,YAAaO,EAAWtI,EAAYA,EAAa+K,EAAID,GAAKxY,EAAQ4G,SACvKpE,EAAQjJ,QACQ,aAAT+E,GAAuB0B,EAAQ6G,mBACtCrE,EAAQiN,UAAYzP,EAAQ0V,oBAAsB7I,EAASU,eAAe/K,EAASxC,EAAQ6G,iBAAkB7G,EAAQ0V,oBAAqBkD,EAAelL,EAAYA,EAAa+K,EAAID,GAAKxY,EAAQ6G,iBACnMrE,EAAQjJ,QAGZiJ,EAAQiJ,YAGJzL,EAAQwV,iBAAgBhT,EAAQ6V,cAAchL,QAAUwK,GAE5DrV,EAAQ6V,cAAcnP,UAAY2O,EAClCrV,EAAQ6V,cAAcrC,WAAa6B,EAyBvC,SAAS0B,GAAYC,EAAUxZ,GAC3B,OAAOA,EAAQ2V,aAAe6D,GAAYxZ,EAAQkQ,WAAasJ,GAAYxZ,EAAQ4V,aAAe4D,EA8FtG,SAASC,GAAejX,EAAS0W,EAAIC,EAAItC,EAAIG,GACzCxU,EAAQ6I,YAER7I,EAAQ8I,OAAO4N,EAAIC,GACnB3W,EAAQ+I,OAAOsL,EAAIG,GACnBxU,EAAQgN,SAERhN,EAAQiJ,YACRjJ,EAAQU,OAiBZ,SAASwW,GAAgBlX,EAASwG,EAAO2Q,EAAOC,EAAQC,EAAQ3B,EAASC,EAAU1L,EAAWqN,GAC1F,IAAIC,EAAyBvX,EAAQ6V,cACjC3K,EAAaqM,EAAuBrM,WACpCnY,EAASwkB,EAAuBxkB,OAChC2T,EAAW6Q,EAAuB7Q,SAClCoP,EAAYyB,EAAuBzB,UACnCR,EAAYiC,EAAuBjC,UACnC5V,EAAa6X,EAAuB7X,WACpCC,EAAQ4X,EAAuB5X,MAC/BqW,EAAIuB,EAAuBvB,EAC3BC,EAAIsB,EAAuBtB,EAC3BF,EAAcwB,EAAuBxB,YACrCxC,EAAegE,EAAuBhE,aAEtCiE,GAAc7X,EAAQ+G,GAAY,EAClC+Q,OAAQ,EACRC,OAAQ,EACRzlB,EAAI,EACJmD,EAAI+hB,EAAMpkB,OACVoW,OAAM,EACNwO,EAAUL,EAAa3X,EACvBiY,EAAWJ,EAAajE,EAAe5T,EACvCkY,EAAYL,EAAa9Q,EAAWiR,EAAUpE,EAAe5T,EAC7D4Q,EAAS/J,aAAiBtU,MAAQsU,EAAQ,IAAItU,MAAMilB,EAAMpkB,QAAQgE,KAAKyP,GAE3ExG,EAAQiK,UAAYA,EAAYvK,EAChCM,EAAQU,OAGR,IADA,IAAIwP,EAAQ6F,GAAesB,EAASD,GAC7BnlB,EAAImD,EAAGnD,IACVkX,EAAMgO,EAAMllB,GACZ+N,EAAQgK,YAAcuG,EAAOte,GAEzBiZ,GACAwM,EAAQzB,EAAIljB,EAASuiB,EAAYQ,GAAasB,EAASjO,GAAO+G,EAE1DwF,GAGAuB,GAAejX,EAFfyX,EAAQzB,EAAI4B,EAEmBF,EAAOzQ,EAAMwQ,EAAQE,GAAUD,GAG9D/B,GAGAsB,GAAejX,EAFfyX,EAAQzB,EAAI6B,EAEmBH,EAAOzQ,EAAMwQ,EAAQE,GAAUD,KAGlED,EAAQzB,EAAIV,EAAYQ,GAAasB,EAASjO,GAAO+G,EAEjDwF,GAGAuB,GAAejX,EAASyX,EAFxBC,EAAQzB,EAAI2B,EAE0BH,EAAOxQ,EAAMyQ,EAAQC,IAG3DhC,GAGAsB,GAAejX,EAASyX,EAAOxQ,EAF/ByQ,EAAQzB,EAAI4B,GAEiCJ,EAAOC,EAAQC,IAiG5E,SAASG,GAAqB9X,EAAS+X,EAAIC,EAAIC,EAAIC,GAC/ClY,EAAQ6I,YACR7I,EAAQ8I,OAAOiP,EAAIC,GACnBhY,EAAQ+I,OAAOkP,EAAIC,GACnBlY,EAAQgN,SACRhN,EAAQiJ,YAiRZ,SAASkP,GAAYnY,EAASxC,EAASzK,EAAQqlB,GAC3C,OAAO5a,EAAQ2F,eAAiBkH,EAASU,eAAe/K,EAASoY,EAAU5a,EAAQ2F,eAAiB3F,EAAQ0F,YAAakV,EAAU5a,EAAQ0F,YAAc1F,EAAQ2F,eAAgBpQ,GAASiN,EAAQ6V,cAAc3K,YAAc1N,EAAQ0F,YAiB1O,SAASmV,GAAqBrY,EAASxC,EAASua,EAAIC,EAAIC,EAAIC,EAAInlB,EAAQqlB,GACpEpY,EAAQiK,UAAYzM,EAAQoI,YAC5B5F,EAAQgK,YAAcmO,GAAYnY,EAASxC,EAASzK,EAAQqlB,GAE5DpY,EAAQ6I,YACR7I,EAAQ8I,OAAOiP,EAAIC,GACnBhY,EAAQ+I,OAAOkP,EAAIC,GACnBlY,EAAQgN,SACRhN,EAAQiJ,YAiBZ,SAASqP,GAAsBtY,EAASxC,EAASua,EAAIC,EAAIC,EAAIC,EAAInlB,EAAQqlB,GAErE,IACIG,EAAaxlB,EADAkU,EAAe,GAATlU,GAEnBmY,EAAa6M,IAAOE,EACpBO,EAAYhb,EAAQoI,YAAc,EAEtC5F,EAAQiN,UAAYkL,GAAYnY,EAASxC,EAASzK,EAAQqlB,GAE1DpY,EAAQ6I,YAEJqC,GACSgN,EAALF,IAASO,IAAe,GAE5BvY,EAAQ8I,OAAOiP,EAAKS,EAAWR,GAC/BhY,EAAQ+I,OAAOgP,EAAKS,EAAWR,GAC/BhY,EAAQ+I,OAAOgP,EAAKS,EAAWR,EAAKO,GACpCvY,EAAQ+I,OAAOgP,EAAIG,GACnBlY,EAAQ+I,OAAOgP,EAAKS,EAAWR,EAAKO,GACpCvY,EAAQ+I,OAAOgP,EAAKS,EAAWR,KAEtBC,EAALF,IAASQ,IAAe,GAE5BvY,EAAQ8I,OAAOiP,EAAIC,EAAKQ,GACxBxY,EAAQ+I,OAAOgP,EAAIC,EAAKQ,GACxBxY,EAAQ+I,OAAOgP,EAAKQ,EAAYP,EAAKQ,GACrCxY,EAAQ+I,OAAOkP,EAAID,GACnBhY,EAAQ+I,OAAOgP,EAAKQ,EAAYP,EAAKQ,GACrCxY,EAAQ+I,OAAOgP,EAAIC,EAAKQ,IAG5BxY,EAAQjJ,OACRiJ,EAAQiJ,YA8BZ,IAAIwP,IACAnkB,EAAUmkB,GA8LZtR,GAtGEhU,EAAaslB,GAAa,CAAC,CACvB1kB,IAAK,OASLnC,MAAO,WACH,IACI,IAAIuP,EAAS3K,KAAK2K,OACduX,EAAQ,EAAEvX,EAAOd,OAAQc,EAAOb,MAAOa,EAAOhB,UAAWgB,EAAOf,YAChEoI,EAAIkQ,EAAM,GACVjQ,EAAIiQ,EAAM,GACVhQ,EAAIgQ,EAAM,GACV/P,EAAI+P,EAAM,GAEVlb,EAAUhH,KAAKgH,QAEnB,IAAK2D,EAAOrB,aAAaU,YAAa,CAClC,IAAIR,EAAUmB,EAAOjB,aAGrBF,EAAQa,UAAU2H,EAAGC,EAAGC,EAAGC,GAC3B3I,EAAQU,OAERlK,KAAK6Q,KAAK,eACV7Q,KAAKmiB,QAAU/E,GAAgB5T,EAASxC,EAASgL,EAAGC,EAAGC,EAAGC,GAE1DnS,KAAK6Q,KAAK,aAvxB9B,SAAuBrH,EAASxC,EAASgL,EAAGC,EAAGC,EAAGC,GAC9CkM,GAAmB7U,EAASxC,EAAS,GAAIgL,EAAGC,EAAGC,EAAGC,IAuxBpBhR,WAAMnG,EAAW,CAACwO,EAASxC,GAASpF,OAAOpE,EAAmBwC,KAAKmiB,WAEjFxX,EAAOnB,QAAQ6V,cAAgB7V,EAAQ6V,cAEvCrf,KAAK6Q,KAAK,oBAtvB9B,SAAiCrH,EAASxC,GACtC,IAAIob,EAAwB5Y,EAAQ6V,cAChC3K,EAAa0N,EAAsB1N,WACnCvL,EAAQiZ,EAAsBjZ,MAC9B5M,EAAS6lB,EAAsB7lB,OAC/B2T,EAAWkS,EAAsBlS,SACjCoP,EAAY8C,EAAsB9C,UAClCR,EAAYsD,EAAsBtD,UAClCU,EAAI4C,EAAsB5C,EAC1BC,EAAI2C,EAAsB3C,EAC1BF,EAAc6C,EAAsB7C,YACpCxC,EAAeqF,EAAsBrF,aAErC9D,EAAU9P,GAASoI,WAAWvK,EAAQiJ,kBAAoB,GAAK,IAEnE,GAAKjJ,EAAQ+I,YAAekJ,EAA5B,CAEA,IAAIiG,EAA+B,UAArBlY,EAAQkQ,SAClBiI,EAAgC,SAArBnY,EAAQkQ,SACnBzb,EAAI,EACJmD,EAAIoI,EAAQ+I,WAAWxT,OACvBykB,GAAc7X,EAAQ+G,GAAY,EAClCmS,EAAWrb,EAAQ+D,SAAW/D,EAAQ8D,SAEtC2W,EAAKhR,EAAMiE,EAAa8K,EAAIwB,EAAaxB,EAAIV,EAAYQ,GACzDgD,EAAKrJ,EACLyI,EAAKhN,EAAa+K,EAAIljB,EAASuiB,EAAYQ,EAAYG,EAAIuB,EAE3DuB,EAAQ9R,GAAOzJ,EAAQ6V,WAAa,IAAME,GAAgB5T,IAAU8P,EAAUjS,EAAQ6V,WAAa,IAAM1T,GAEzGqZ,EAAS/R,EAAMP,EAAW6M,EAAe5T,GAI7C,IAFAK,EAAQU,OAEDzO,EAAImD,EAAGnD,IAAK,CACf,IAAIgnB,EAAQzb,EAAQ+I,WAAWtU,GAE3BinB,EAASnD,EAAcnf,EAAI4G,EAAQ8D,SAAW2X,EAAM/kB,MAAQ2kB,EAE5DM,EAAKpD,EAAcnf,GAAKqiB,EAAMrjB,GAAKqjB,EAAM/kB,MAAQ2kB,GAErD7Y,EAAQ6I,YACR7I,EAAQiN,UAAYgM,EAAMzS,MAEtB0E,GACIwK,GAAS1V,EAAQ6M,KAAKoL,EAAKc,EAAOb,EAAKgB,EAAQJ,GAAKK,GAEpDxD,GAAU3V,EAAQ6M,KAAKoL,EAAKe,EAAQd,EAAKgB,EAAQJ,GAAKK,KAEtDzD,GAAS1V,EAAQ6M,KAAKoL,EAAKiB,EAAQhB,EAAKa,EAAOI,EAAIL,GAEnDnD,GAAU3V,EAAQ6M,KAAKoL,EAAKiB,EAAQhB,EAAKc,EAAQG,EAAIL,IAG7D9Y,EAAQjJ,OACRiJ,EAAQiJ,cAgsBImQ,CAAwBpZ,EAASxC,GACjChH,KAAK6Q,KAAK,oBA/e9B,SAA8BrH,EAASxC,GACnC,IAAI6b,EAAyBhP,EAASoD,aAAajQ,GAC/C8b,EAAyBvnB,EAAesnB,EAAwB,GAChE3D,EAAU4D,EAAuB,GACjC3D,EAAW2D,EAAuB,GAElCnC,EAAQ,GACRllB,EAAIuL,EAAQ8D,SACZ2O,EAAWtZ,KAAKC,IAAI4G,EAAQmE,aAAe,EAC3C4X,EAAuBtJ,GAAYzS,EAAQ+D,SAAW/D,EAAQ8D,WAAa2O,GAAYzS,EAAQkE,WAAW3O,OAAS,IAAM,EAE7H,GAAIkd,EACA,GAAIzS,EAAQiE,WAGR,IAFA,IAAIuO,EAAQ7I,EAAUgJ,IAAI3S,EAAQkE,WAAW,GAAIuO,IAAa,EAEvDhe,EAAIuL,EAAQ+D,SAAUtP,GAAKge,EAC1BD,EAAQ/d,EAAIuL,EAAQ+D,UACpB4V,EAAMrkB,KAAKkd,EAAQ/d,QAI3B,KAAOA,EAAIuL,EAAQ+D,SAAUtP,GAAKsnB,EAC9BpC,EAAMrkB,KAAKb,GAKvBilB,GAAgBlX,EAASxC,EAAQqF,iBAAmBrF,EAAQsF,iBAAkBqU,EAAO3Z,EAAQ8D,SAAU9D,EAAQ+D,SAAUmU,EAASC,EAAU,EAAGnY,EAAQ8V,gBAAkB,KAqdzJkG,CAAqBxZ,EAASxC,GAC9BhH,KAAK6Q,KAAK,oBAplB9B,SAA8BrH,EAASxC,GACnC,IAAIic,EAAwBpP,EAASoD,aAAajQ,GAC9Ckc,EAAyB3nB,EAAe0nB,EAAuB,GAC/D/D,EAAUgE,EAAuB,GACjC/D,EAAW+D,EAAuB,GAElCzP,EAAY,EACZsP,GAAwB/b,EAAQ+D,SAAW/D,EAAQ8D,WAAa9D,EAAQkE,WAAW3O,OAAS,GAC5Fwd,EAAS/S,EAAQoF,2BAA2B1Q,MAAQsL,EAAQoF,gBAAkB,IAAI1Q,MAAMsL,EAAQkE,WAAW3O,QAAQgE,KAAKyG,EAAQsF,kBAAoBtF,EAAQoF,iBAOhK,GAFAsU,GAAgBlX,EAASuQ,EAJb/S,EAAQiE,WAAajE,EAAQkE,WAAalE,EAAQkE,WAAWlD,IAAI,SAAUmb,EAAM1nB,GACzF,OAAOuL,EAAQ8D,SAAWiY,EAAuBtnB,IAGbuL,EAAQ8D,SAAU9D,EAAQ+D,SAAUmU,EAASC,EAAU1L,EAAWzM,EAAQ6V,WAAa,KAE3H7V,EAAQoE,YAAa,CACrB,IAAIgY,EAAyB5Z,EAAQ6V,cACjC3K,EAAa0O,EAAuB1O,WACpCnY,EAAS6mB,EAAuB7mB,OAChC4M,EAAQia,EAAuBja,MAC/B+G,EAAWkT,EAAuBlT,SAClC4O,EAAYsE,EAAuBtE,UACnCQ,EAAY8D,EAAuB9D,UACnCE,EAAI4D,EAAuB5D,EAC3BC,EAAI2D,EAAuB3D,EAC3BF,EAAc6D,EAAuB7D,YACrCrW,EAAaka,EAAuBla,WACpC6T,EAAeqG,EAAuBrG,aAEtCsG,GAAcla,EAAQ+G,GAAY,EAAIA,EAAW6M,EAAe5T,EAChEma,GAAana,EAAQ+G,GAAY,EAAI6M,EAAe5T,EACpDoY,OAAK,EACLC,OAAK,EACLC,OAAK,EACLC,OAAK,EAETlY,EAAQgK,YAAcxM,EAAQsF,kBAAoByN,EAAO,GAEzDtG,GAAavK,EAETwL,GAEAgN,GADAF,EAAK/B,EAAIljB,EAASuiB,EAAYQ,EAAY7L,EAAY,GAC5C8L,EAAc9L,EAEpByL,IAEAuC,EAAKF,EAAK9Q,EAAM+O,EAAI8D,GACpBhC,GAAqB9X,EAAS+X,EAAIC,EAAIC,EAAIC,IAG1CvC,IAEAsC,EAAKF,EAAK9Q,EAAM+O,EAAI6D,GACpB/B,GAAqB9X,EAAS+X,EAAIC,EAAIC,EAAIC,MAI9CD,GADAF,EAAK/B,EAAIV,EAAYQ,EAAY7L,EAAY,GACnC8L,EAAc9L,EAEpByL,IAEAwC,EAAKF,EAAK/Q,EAAMgP,EAAI6D,GACpBhC,GAAqB9X,EAAS+X,EAAIC,EAAIC,EAAIC,IAG1CvC,IAEAuC,EAAKF,EAAK/Q,EAAMgP,EAAI4D,GACpB/B,GAAqB9X,EAAS+X,EAAIC,EAAIC,EAAIC,MAihBtC6B,CAAqB/Z,EAASxC,GAC9BhH,KAAK6Q,KAAK,iBA9c9B,SAAqCrH,EAASxC,GAC1C,IAAIwc,EAAyBha,EAAQ6V,cACjC3K,EAAa8O,EAAuB9O,WACpCnY,EAASinB,EAAuBjnB,OAChC4M,EAAQqa,EAAuBra,MAC/B+G,EAAWsT,EAAuBtT,SAClC4O,EAAY0E,EAAuB1E,UACnCQ,EAAYkE,EAAuBlE,UACnCE,EAAIgE,EAAuBhE,EAC3BC,EAAI+D,EAAuB/D,EAC3BF,EAAciE,EAAuBjE,YACrCxC,EAAeyG,EAAuBzG,aAEtCxD,EAAQvS,EAAQ+D,SAAW/D,EAAQ8D,SACnCiY,EAAuBxJ,GAASvS,EAAQkE,WAAW3O,OAAS,GAC5DknB,EAAazc,EAAQiE,WAAajE,EAAQkE,WAAalE,EAAQkE,WAAWlD,IAAI,SAAUmb,EAAM1nB,GAC9F,OAAOuL,EAAQ8D,SAAWiY,EAAuBtnB,IAEjDklB,EAAQ8C,EAAWlnB,OACnB2iB,EAAiC,UAAvBlY,EAAQ4V,WAClBuC,EAAkC,SAAvBnY,EAAQ4V,WACnBtC,EAAatT,EAAQmH,gBAAkBhF,EAAQ,IAC/C1N,EAAI,EACJohB,GAAc7V,EAAQ6V,WAAa,IAAqB,EAAfE,GAAoB5T,EAC7Dua,GAAWva,EAAQ+G,GAAY,EAAI2M,EACnC8G,GAAYxa,EAAQ+G,GAAY,EAAIA,EAAW2M,EAC/C+G,OAAQ,EACRC,OAAQ,EAERC,OAAe,EACfX,OAAO,EACPpJ,EAAS/S,EAAQyF,wBAAwB/Q,MAAQsL,EAAQyF,aAAe,IAAI/Q,MAAMilB,GAAOpgB,KAAKyG,EAAQyF,cACtGsX,EAAa/c,EAAQyE,cAAgB,IAAMtC,EAM/C,IAJAK,EAAQyJ,KAAOY,EAASZ,KAAKjM,EAAS,UAAWmC,EAAQ,KACzDK,EAAQiK,UAAY,EACpBjK,EAAQmN,UAAY,SAEblb,EAAIklB,EAAOllB,IACd+N,EAAQiN,UAAYsD,EAAOte,GAC3B0nB,EAAOnc,EAAQkE,WAAWzP,GAC1BqoB,EAAe9c,EAAQiE,WAAasU,IAAgBkE,EAAWhoB,GAAKuL,EAAQ8D,UAAYyO,GAAS9d,EAAI8jB,GAAeoB,EAAQ,GAExHjM,GACAmP,EAAQpE,EAAIljB,EAASuiB,EAAYQ,EAAYwE,EAAexJ,EAAa,EAErE4E,IACA1V,EAAQmN,UAAY,QACpBnN,EAAQqN,SAASsM,EAAM3D,EAAIkE,EAAUK,EAAYF,IAGjD1E,IACA3V,EAAQmN,UAAY,OACpBnN,EAAQqN,SAASsM,EAAM3D,EAAImE,EAAWI,EAAYF,MAG1Cra,EAAQiM,YAAY0N,GAAMha,MACtCya,EAAQpE,EAAIV,EAAYQ,EAAYwE,EAEhC5E,GACA1V,EAAQqN,SAASsM,EAAMS,EAAOnE,EAAIiE,EAAUK,GAG5C5E,GACA3V,EAAQqN,SAASsM,EAAMS,EAAOnE,EAAIkE,EAAWrJ,EAAayJ,IA+YtDC,CAA4Bxa,EAASxC,GACrChH,KAAK6Q,KAAK,eAnY9B,SAAyBrH,EAASxC,GAC9B,GAAKA,EAAQuE,MAAb,CAEA,IAAI0Y,EAAyBza,EAAQ6V,cACjC3K,EAAauP,EAAuBvP,WACpCvL,EAAQ8a,EAAuB9a,MAC/B5M,EAAS0nB,EAAuB1nB,OAChCmjB,EAAQuE,EAAuBvE,MAC/BC,EAAQsE,EAAuBtE,MAC/BjB,EAAcuF,EAAuBvF,YAErCpE,EAAatT,EAAQoH,cAAgBjF,EAAQ,IAE7Cya,EAAQnT,EAAMiP,GAAShL,EAAavL,EAAQ5M,GAAU,GAEtDsnB,EAAQpT,EAAMkP,EAAQjB,EAAc,GAAKhK,EAAa4F,EAAaA,EAAa,GAAK,MAAS5F,EAAanY,EAAS4M,IAExHK,EAAQU,OACRV,EAAQmN,UAAY,SACpBnN,EAAQiN,UAAYzP,EAAQuF,WAC5B/C,EAAQyJ,KAAOY,EAASZ,KAAKjM,EAAS,QAASmC,EAAQ,KACvDK,EAAQiK,UAAY,EACpBjK,EAAQqN,SAAS7P,EAAQuE,MAAOqY,EAAOC,EAAOnP,EAAavL,EAAQ5M,IA8WnD2nB,CAAgB1a,EAASxC,GACzBhH,KAAK6Q,KAAK,eArW9B,SAAyBrH,EAASxC,GAC9B,GAAKA,EAAQgE,MAAb,CAEA,IAAImZ,EAAyB3a,EAAQ6V,cACjC3K,EAAayP,EAAuBzP,WACpCvL,EAAQgb,EAAuBhb,MAC/B5M,EAAS4nB,EAAuB5nB,OAChCmjB,EAAQyE,EAAuBzE,MAC/BC,EAAQwE,EAAuBxE,MAC/BhB,EAAcwF,EAAuBxF,YAErCrE,EAAatT,EAAQqH,cAAgBlF,EAAQ,IAE7Cya,EAAQnT,EAAMiP,GAAShL,EAAavL,EAAQ5M,GAAU,GAEtDsnB,EAAQpT,EAAMkP,GAASjL,EAAanY,EAAS4M,GAASwV,EAAc,EAAIrE,EAAa,GAEzF9Q,EAAQU,OACRV,EAAQmN,UAAY,SACpBnN,EAAQiN,UAAYzP,EAAQwF,WAC5BhD,EAAQyJ,KAAOY,EAASZ,KAAKjM,EAAS,QAASmC,EAAQ,KACvDK,EAAQiK,UAAY,EACpBjK,EAAQqN,SAAS7P,EAAQgE,MAAO4Y,EAAOC,EAAOnP,EAAavL,EAAQ5M,IAgVnD6nB,CAAgB5a,EAASxC,GAEzB2D,EAAOrB,aAAaU,aAAc,EAGtChK,KAAK2K,OAAOqR,SAGZrR,EAAOnB,QAAQa,UAAU2H,EAAGC,EAAGC,EAAGC,GAClCxH,EAAOnB,QAAQU,OAEfS,EAAOnB,QAAQyS,UAAUtR,EAAOrB,aAAc0I,EAAGC,EAAGC,EAAGC,GACvDxH,EAAOnB,QAAQU,OAEflK,KAAK6Q,KAAK,qBA1xB1B,SAA+BrH,EAASxC,EAASgL,EAAGC,EAAGC,EAAGC,GACtDnL,EAAQoJ,aAAeiO,GAAmB7U,EAASxC,EAAS,WAAYgL,EAAGC,EAAGC,EAAGC,IA0xB/ChR,WAAMnG,EAAW,CAAC2P,EAAOnB,QAASxC,GAASpF,OAAOpE,EAAmBwC,KAAKmiB,WAChGniB,KAAK6Q,KAAK,gBAtV1B,SAA6BrH,EAASxC,GAClC,GAAKA,EAAQ+H,OAAb,CAEA,IAAIsV,EAAyB7a,EAAQ6V,cACjC3K,EAAa2P,EAAuB3P,WACpCvL,EAAQkb,EAAuBlb,MAC/B5M,EAAS8nB,EAAuB9nB,OAChC2T,EAAWmU,EAAuBnU,SAClCoP,EAAY+E,EAAuB/E,UACnCR,EAAYuF,EAAuBvF,UACnCS,EAAc8E,EAAuB9E,YACrCC,EAAI6E,EAAuB7E,EAC3BC,EAAI4E,EAAuB5E,EAC3B1C,EAAesH,EAAuBtH,aAEtCmC,EAAiC,UAAvBlY,EAAQ2V,WAClBwC,EAAkC,SAAvBnY,EAAQ2V,WACnB2H,EAAW/E,GAAe1L,EAASuD,gBAAgBpQ,GAASuQ,SAAWvQ,EAAQ8D,WAAa9D,EAAQ+D,SAAW/D,EAAQ8D,UACvHyZ,GAAavd,EAAQ6V,WAAa,IAAME,GAAgB5T,EACxDqb,EAAatU,EAAW,EAAIqU,EAC5BE,EAAeD,GAAcxd,EAAQmI,UAAY,KACjDoS,OAAK,EAELC,OAAK,EAEL5d,EAA4C,UAArCoD,EAAQiI,WAAW9J,cAA4B2c,GAAwBD,GAC9E6C,GAAYvb,EAAQ+G,GAAY,EAChChB,EAAcsV,GAAcxd,EAAQkI,YAAc,KAClDyV,EAAQD,EAAWH,EAAYrV,EAC/B0V,EAASF,EAAWxU,EAAWqU,EAAYrV,EAE/C1F,EAAQU,OAER2J,EAASiB,iBAAiBtL,EAASxC,GAE/B0N,GAEA8M,EAAK/Q,EAAMgP,EAAIljB,EAASuiB,EAAYQ,EAAYgF,GAE5CpF,GAIAtb,EAAK4F,EAASxC,EAFdua,EAAK9Q,EAAM+O,EAAImF,GAEYnD,EADtBD,EAAKkD,EACyBjD,EAAIiD,GAGvCtF,GAIAvb,EAAK4F,EAASxC,EAFdua,EAAK9Q,EAAM+O,EAAIoF,GAEYpD,EADtBD,EAAKkD,EACyBjD,EAAIiD,GAAc,KAIzDlD,EAAK9Q,EAAM+O,EAAIV,EAAYQ,EAAYgF,GAEnCpF,GAIAtb,EAAK4F,EAASxC,EAASua,EAFvBC,EAAK/Q,EAAMgP,EAAIkF,GAEgBpD,EAD1BC,EAAKiD,EAC6BA,GAGvCtF,GAIAvb,EAAK4F,EAASxC,EAASua,EAFvBC,EAAK/Q,EAAMgP,EAAImF,GAEgBrD,EAD1BC,EAAKiD,EAC6BA,GAAc,IAI7Djb,EAAQkN,WAgRImO,CAAoBla,EAAOnB,QAASxC,GACpChH,KAAK6Q,KAAK,kBAxK1B,SAA4BrH,EAASxC,EAAS5L,EAAO4W,EAAGC,EAAGC,EAAGC,GAI1D,IAAI2S,GAAYvT,WAAWvK,EAAQsH,gBAAkB,GAAK4D,EAAI,IAC1DkN,GAAM,IAAOjN,EAAI2S,GAAY,EAEjCtb,EAAQ6V,cAAc3K,YAAcb,EAASkB,aAAavL,EAASxC,EAAS5L,EAAO4W,EAAIE,EAAI,EAAGD,EAAIE,EAAI2S,EAAW1F,EAAIlN,IAkKtF/Q,WAAMnG,EAAW,CAAC2P,EAAOnB,QAASxC,EAASA,EAAQqE,cAAgBrL,KAAKgH,QAAQ5L,MAAQ4E,KAAK5E,OAAOwG,OAAOpE,EAAmBwC,KAAKmiB,WAEtJ5nB,EAAK0nB,GAAYrnB,UAAUwD,WAAatD,OAAOI,eAAe+mB,GAAYrnB,WAAY,OAAQoF,MAAM1E,KAAK0E,MAC3G,MAAOxD,GACLqX,EAASiD,YAAYta,GAGzB,OAAOwD,QAEX,CAAC,CACDzC,IAAK,YACLnC,MAAO,SAAmB4L,GAoBtB,OAlBIA,EAAQmJ,gBAAkBnJ,EAAQkJ,WAElClJ,EAAQmJ,eAAiBM,EAAMzJ,EAAQkJ,SAAW,IAItDlJ,EAAQkY,QAAUqB,GAAY,QAASvZ,GAEvCA,EAAQmY,SAAWoB,GAAY,OAAQvZ,GAEnCA,EAAQ5L,MAAQ4L,EAAQ+D,WACxB/D,EAAQ5L,MAAQ4L,EAAQ+D,UAGxB/D,EAAQ5L,MAAQ4L,EAAQ8D,WACxB9D,EAAQ5L,MAAQ4L,EAAQ8D,UAGrB6F,EAAUC,UAAU5J,OAI5Bib,IArHP,SAASA,GAAYjb,GAIjB,OAHA3I,EAAgB2B,KAAMiiB,IAEtBjb,EAAUlM,OAAOoE,OAAO,GAAIod,GAA2BtV,GAAW,IAC3DrJ,EAA2BqC,MAAOiiB,GAAY7jB,WAAatD,OAAOI,eAAe+mB,KAAc3mB,KAAK0E,KAAMiiB,GAAYrR,UAAU5J,UA2H7H,IAAP1M,IACPA,EAAgB,YAAI2nB,IAGxBtR,EAAU0L,WAAW,cAAeC,IAA8C,oBAAXyI,QAA0BjqB,OAAOoE,OAAO5E,EAAI,CAACgW,WAAYA,EAAWzF,eAAgBA,EAAelH,UAAWA,EAAUgN,UAAWA,EAAUkD,SAAUA,EAAS5K,YAAaA,EAAYjE,YAAaA,EAAYzG,UAAWA,IAtpJpS,CAspJoU,oBAAXwmB,OAAyBA,OAAOC,QAAUvmB","sourcesContent":["/*!\n * The MIT License (MIT)\n * \n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @version 2.1.5\n */\n(function(ns) {'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Object.defineProperty(Array.prototype, \"indexOf\", {\n        value: function value(searchElement, fromIndex) {\n            var k;\n\n            if (this === null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var O = Object(this);\n            var len = O.length >>> 0;\n\n            if (len === 0) {\n                return -1;\n            }\n\n            var n = +fromIndex || 0;\n\n            if (Math.abs(n) === Infinity) {\n                n = 0;\n            }\n\n            if (n >= len) {\n                return -1;\n            }\n\n            k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n            while (k < len) {\n                if (k in O && O[k] === searchElement) {\n                    return k;\n                }\n\n                k++;\n            }\n\n            return -1;\n        }\n    });\n}\n\n/**\n * @external {Array.fill} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\n */\n/* istanbul ignore next */\nif (!Array.prototype.fill) {\n    Object.defineProperty(Array.prototype, \"fill\", {\n        value: function value(_value) {\n            if (this === null) {\n                throw new TypeError('this is null or not defined');\n            }\n\n            var O = Object(this);\n            var len = O.length >>> 0;\n            var start = arguments[1];\n            var relativeStart = start >> 0;\n            var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len);\n            var end = arguments[2];\n            var relativeEnd = end === undefined ? len : end >> 0;\n            var final = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);\n            while (k < final) {\n                O[k] = _value;\n                k++;\n            }\n\n            return O;\n        }\n    });\n}\n\n/**\n * mocking window\n */\nif (typeof window === 'undefined') {\n    window = typeof global === 'undefined' ? {} : global;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Look-ups for a proper vendor-specific property and returns its value\n *\n * @example\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\n * // it will refer properly to:\n * //  - window.requestAnimationFrame by default or to\n * //  - window.webkitRequestAnimationFrame or to\n * //  - window.mozRequestAnimationFrame or to\n * //  - window.msRequestAnimationFrame or to\n * //  - window.oRequestAnimationFrame\n * // depending on the current browser vendor\n *\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * @param {string} prop\n * @param {HTMLElement|Window|object} [from] - default is window\n * @returns {*}\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Class EventEmitter - base event manager\n */\n\nvar EventEmitter = function () {\n    /**\n     * @constructor\n     */\n    function EventEmitter() {\n        _classCallCheck(this, EventEmitter);\n\n        this._events = {};\n\n        this.addListener = this.on;\n        this.removeListener = this.off;\n    }\n\n    /**\n     * Returns all event listeners\n     *\n     * @return {object}\n     */\n\n\n    _createClass(EventEmitter, [{\n        key: 'emit',\n\n\n        /**\n         * Emits given event bypassing to each registered handler given args\n         *\n         * @param {string} event\n         * @param {...*} args\n         */\n        value: function emit(event) {\n            if (this._events[event]) {\n                var i = 0;\n                var s = this._events[event].length;\n\n                for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                    args[_key - 1] = arguments[_key];\n                }\n\n                for (; i < s; i++) {\n                    this._events[event][i] && this._events[event][i].apply(this, args);\n                }\n            }\n        }\n\n        /**\n         * Registers given handler for given event to be called only once when\n         * event is emitted\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n\n    }, {\n        key: 'once',\n        value: function once(event) {\n            for (var _len2 = arguments.length, handlers = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                handlers[_key2 - 1] = arguments[_key2];\n            }\n\n            var i = 0;\n            var s = handlers.length;\n            var self = this;\n\n            var _loop = function _loop() {\n                var handler = handlers[i];\n                var wrapper = function wrapper() {\n                    self.off(event, wrapper);\n                    handler.apply(self, arguments);\n                };\n\n                handlers[i] = wrapper;\n            };\n\n            for (; i < s; i++) {\n                _loop();\n            }\n\n            this.on.apply(this, [event].concat(handlers));\n        }\n\n        /**\n         * Registers given handlers for a given events to be called each time event\n         * is emitted\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n\n    }, {\n        key: 'on',\n        value: function on(event) {\n            if (!this._events[event]) {\n                this._events[event] = [];\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                this._events[event].push(arguments.length <= i + 1 ? undefined : arguments[i + 1]);\n            }\n        }\n\n        /**\n         * Un-registers previously registered event handlers\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n\n    }, {\n        key: 'off',\n        value: function off(event) {\n            if (!this._events[event]) {\n                return;\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                var _handler = arguments.length <= i + 1 ? undefined : arguments[i + 1];\n                var index = void 0;\n\n                while (~(index = this._events[event].indexOf(_handler))) {\n                    this._events[event].splice(index, 1);\n                }\n            }\n        }\n\n        /**\n         * Removes all listeners for a given event\n         *\n         * @param {string} event\n         */\n\n    }, {\n        key: 'removeAllListeners',\n        value: function removeAllListeners(event) {\n            delete this._events[event];\n        }\n    }, {\n        key: 'listeners',\n        get: function get() {\n            return this._events;\n        }\n    }]);\n\n    return EventEmitter;\n}();\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/* jshint -W079 */\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n\n/* istanbul ignore next */\n/**\n * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n * @access private\n */\n\n\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\n * Generic AnimationRule function interface\n *\n * @typedef {function(percent: number): number} AnimationRule\n */\n\n/**\n * Callback for animation step draw event.\n * It will be called each time animation step is executed, bypassing\n * as first argument a percent of animation completeness. It is expected\n * that this callback will do an actual work of animating an elements or\n * whatever, as far as animation engine is just calculating and executing\n * animation steps without any knowledge about things under animation.\n *\n * @typedef {function(percent: number): *} DrawEventCallback\n */\n\n/**\n * Callback for animation complete event.\n * It is called once each animation is complete.\n *\n * @typedef {function(): *} EndEventCallback\n */\n\n/**\n * Predefined known animation rules.\n * It's a simple collection of math for some most used animations.\n *\n * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\n * Evaluates animation step and decides if the next step required or\n * stops animation calling a proper events.\n *\n * @access private\n * @param {number} time\n * @param {DrawEventCallback} draw\n * @param {number} start\n * @param {AnimationRule} rule\n * @param {number} duration\n * @param {EndEventCallback} end\n * @param {Animation} anim\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n    var animationTransformed = 0;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    if (percent !== 1) {\n        animationTransformed = rule(percent);\n\n        // make sure we have correct number after applying animation\n        // transformation\n        if (isFinite(animationTransformed) && !isNaN(animationTransformed)) {\n            percent = animationTransformed;\n        }\n    }\n\n    draw && draw(percent);\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n        anim.inProgress = false;\n    }\n}\n\n/**\n * Animation engine API for JavaScript-based animations.\n * This is simply an animation core framework which simplifies creation\n * of various animations for generic purposes.\n *\n * @example\n * // create 'linear' animation engine, 500ms duration\n * let linear = new Animation('linear', 500);\n *\n * // create 'elastic' animation engine\n * let elastic = new Animation('elastic');\n *\n * // define animation behavior\n * let bounced = new Animation('bounce', 500, percent => {\n *     let value = parseInt(percent * 100, 10);\n *\n *     $('div.bounced').css({\n *         width: value + '%',\n *         height: value + '%'\n *     });\n * });\n *\n * // execute animation\n * bounced.animate();\n *\n * // execute animation and handle when its finished\n * bounced.animate(null, () => {\n *    console.log('Animation finished!');\n * });\n */\n\nvar Animation = function () {\n\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n        var rule = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'linear';\n        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n        var draw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n        var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n        _classCallCheck(this, Animation);\n\n        /**\n         * Overall animation duration in milliseconds.\n         * By default is equal to 250 ms.\n         *\n         * @type {number}\n         */\n        this.duration = duration;\n\n        /**\n         * Animation rule. By default is linear animation.\n         * Animation rule is a subject to animation rules, which are\n         * a simple object containing math-based methods for calculating\n         * animation steps.\n         *\n         * @type {string|AnimationRule}\n         */\n        this.rule = rule;\n\n        /**\n         * Callback function for the animation step draw event.\n         *\n         * @type {DrawEventCallback}\n         */\n        this.draw = draw;\n\n        /**\n         * Callback for the animation complete event.\n         *\n         * @type {EndEventCallback}\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            this.frame && this.cancel();\n\n            // noinspection JSUnresolvedVariable\n            var start = window.performance && window.performance.now ? window.performance.now() : vendorize('animationStartTime') || Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            this.draw = draw;\n            this.end = end;\n\n            /**\n             * Current requested animation frame identifier\n             *\n             * @type {number}\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\n         * Cancels current animation if any\n         */\n\n    }, {\n        key: 'cancel',\n        value: function cancel() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n        }\n\n        /**\n         * Destroys this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.cancel();\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\n * Animation rules bound statically to Animation constructor.\n *\n * @type {AnimationRules}\n * @static\n */\n\n\nAnimation.rules = rules;\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * @typedef {{ constructor: function(options: GenericOptions): GaugeInterface, draw: function(): GaugeInterface, destroy: function, update: function(options: GenericOptions) }} GaugeInterface\n */\n/**\n * @typedef {{parse: function, stringify: function}} JSON\n * @external {JSON} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON\n */\n/**\n * @ignore\n * @typedef {{MutationObserver: function}} ns\n */\n\n/**\n * DOM Observer.\n * It will observe DOM document for a configured element types and\n * instantiate associated Types for an existing or newly added DOM elements\n *\n * @example\n * class ProgressBar {\n *     constructor(options) {}\n *     draw() {}\n * }\n *\n * // It will observe DOM document for elements <div>\n * // having attribute 'data-type=\"progress\"'\n * // and instantiate for each new instance of ProgressBar\n *\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n *\n * // assume we could have HTML like this\n * // <div data-type=\"progress\" color=\"blue\"></div>\n * // in this case all matching attributes names for a given options will be\n * // parsed and bypassed to an instance from HTML attributes\n */\n\nvar DomObserver = function () {\n\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} type\n     */\n    function DomObserver(options, element, type) {\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Default instantiation options for the given type\n         *\n         * @type {Object}\n         */\n        this.options = options;\n\n        /**\n         * Name of an element to lookup/observe\n         *\n         * @type {string}\n         */\n        this.element = element.toLowerCase();\n\n        /**\n         * data-type attribute value to lookup\n         *\n         * @type {string}\n         */\n        this.type = DomObserver.toDashed(type);\n\n        /**\n         * Actual type constructor to instantiate for each found element\n         *\n         * @type {Function}\n         */\n        this.Type = ns[type];\n\n        /**\n         * Signals if mutations observer for this type or not\n         *\n         * @type {boolean}\n         */\n        this.mutationsObserved = false;\n\n        /**\n         * Flag specifies whenever the browser supports observing\n         * of DOM tree mutations or not\n         *\n         * @type {boolean}\n         */\n        this.isObservable = !!window.MutationObserver;\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        if (!window.GAUGES_NO_AUTO_INIT) {\n            DomObserver.domReady(this.traverse.bind(this));\n        }\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            //noinspection JSUnresolvedVariable\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\n         * Traverse entire current DOM tree and process matching nodes.\n         * Usually it should be called only once on document initialization.\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                this.process(elements[i]);\n            }\n\n            if (this.isObservable && !this.mutationsObserved) {\n                new MutationObserver(this.observe.bind(this)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n\n                this.mutationsObserved = true;\n            }\n        }\n\n        /**\n         * Observes given mutation records for an elements to process\n         *\n         * @param {MutationRecord[]} records\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        setTimeout(this.process.bind(this, record.target));\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        setTimeout(this.process.bind(this, record.addedNodes[ii]));\n                    }\n                }\n            }\n        }\n\n        /**\n         * Parses given attribute value to a proper JavaScript value.\n         * For example it will parse some stringified value to a proper type\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\n         *\n         * @param {*} value\n         * @return {*}\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\n         * Processes a given node, instantiating a proper type constructor for it\n         *\n         * @param {Node|HTMLElement} node\n         * @returns {GaugeInterface|null}\n         */\n        value: function process(node) {\n            var _this2 = this;\n\n            if (!this.isValidNode(node)) return null;\n\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n            var instance = null;\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n            instance = new this.Type(options);\n            instance.draw && instance.draw();\n\n            if (!this.isObservable) return instance;\n\n            instance.observer = new MutationObserver(function (records) {\n                records.forEach(function (record) {\n                    if (record.type === 'attributes') {\n                        var attr = record.attributeName.toLowerCase();\n                        var type = node.getAttribute(attr).toLowerCase();\n\n                        if (attr === 'data-type' && type && type !== _this2.type) {\n                            instance.observer.disconnect();\n                            delete instance.observer;\n                            instance.destroy && instance.destroy();\n                        } else if (attr.substr(0, 5) === 'data-') {\n                            var _prop = attr.substr(5).split('-').map(function (part, i) {\n                                return !i ? part : part.charAt(0).toUpperCase() + part.substr(1);\n                            }).join('');\n                            var _options = {};\n\n                            _options[_prop] = DomObserver.parse(node.getAttribute(record.attributeName));\n\n                            if (_prop === 'value') {\n                                instance && (instance.value = _options[_prop]);\n                            } else {\n                                instance.update && instance.update(_options);\n                            }\n                        }\n                    }\n                });\n            });\n\n            //noinspection JSCheckFunctionSignatures\n            instance.observer.observe(node, { attributes: true });\n\n            return instance;\n        }\n\n        /**\n         * Transforms camelCase string to dashed string\n         *\n         * @static\n         * @param {string} camelCase\n         * @return {string}\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanumeric characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[-+#.\\w\\d\\s]+(?:,[-+#.\\w\\d\\s]*)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms dashed string to CamelCase representation\n         *\n         * @param {string} dashed\n         * @param {boolean} [capitalized]\n         * @return {string}\n         */\n\n    }, {\n        key: 'toCamelCase',\n        value: function toCamelCase(dashed) {\n            var capitalized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var arr = dashed.split(/-/);\n            var i = 0;\n            var s = arr.length;\n            var str = '';\n\n            for (; i < s; i++) {\n                if (!(i || capitalized)) {\n                    str += arr[i].toLowerCase();\n                } else {\n                    str += arr[i][0].toUpperCase() + arr[i].substr(1).toLowerCase();\n                }\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms camel case property name to dash separated attribute name\n         *\n         * @static\n         * @param {string} str\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\n         * Cross-browser DOM ready handler\n         *\n         * @static\n         * @param {Function} handler\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (/comp|inter|loaded/.test((window.document || {}).readyState + '')) return handler();\n\n            if (window.addEventListener) window.addEventListener('DOMContentLoaded', handler, false);else if (window.attachEvent) window.attachEvent('onload', handler);\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n\n/**\n * Drawings on canvas using hidden canvas as a cache for better\n * performance drawings during canvas animations. SmartCanvas also\n * adopts a canvas to\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} [width]\n     * @param {number} [height]\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\n         * Canvas base width\n         *\n         * @type {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * Canvas base height\n         *\n         * @type {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * Target drawings canvas element\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\n         * Destroys this object, removing the references from memory\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            this.context.clearRect(-this.drawX, -this.drawY, this.drawWidth, this.drawHeight);\n\n            // dereference all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n        }\n\n        /**\n         * Commits the drawings\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\n         * Redraw this object\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\n         * Returns current device pixel ratio\n         *\n         * @returns {number}\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\n         * Forces redraw all canvas in the current collection\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\n/**\n * Shared generic gauges options\n *\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], exactTicks: boolean, minorTicks: number, strokeTicks: boolean, animatedValue: boolean, animateOnInit: boolean, title: string|boolean, borders: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorPlateEnd: string, colorMajorTicks: string, colorMinorTicks: string, colorStrokeTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedle: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuter: string, colorBorderOuterEnd: string, colorBorderMiddle: string, colorBorderMiddleEnd: string, colorBorderInner: string, colorBorderInnerEnd: string, colorValueBoxRect: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueBoxWidth: number, valueBoxStroke: number, valueText: string, valueTextShadow: boolean, valueBoxBorderRadius: number, highlights: Highlight[], highlightsWidth: number, fontNumbers: string, fontTitle: string, fontUnits: string, fontValue: string, fontTitleSize: number, fontValueSize: number, fontUnitsSize: number, fontNumbersSize: number, fontNumbersStyle: string, fontTitleStyle: string, fontUnitsStyle: string, fontValueStyle: string, fontNumbersWeight: string, fontTitleWeight: string, fontUnitsWeight: string, fontValueWeight: string, barWidth: number, barStrokeWidth: number, barProgress: boolean, colorBar: string, colorBarStroke: string, colorBarProgress: string, colorBarShadow: string, barShadow: number, listeners: object}} GenericOptions\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 0,\n    height: 0,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    exactTicks: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    animatedValue: false,\n    animateOnInit: false,\n    title: false,\n    borders: true,\n    numbersMargin: 1,\n\n    listeners: null,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 500,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorPlateEnd: '',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorStrokeTicks: '',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedle: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuter: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddle: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInner: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n    colorValueBoxRect: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorBarStroke: '#222',\n    colorBar: '#ccc',\n    colorBarProgress: '#888',\n    colorBarShadow: '#000',\n\n    fontNumbers: 'Arial',\n    fontTitle: 'Arial',\n    fontUnits: 'Arial',\n    fontValue: 'Arial',\n\n    fontNumbersSize: 20,\n    fontTitleSize: 24,\n    fontUnitsSize: 22,\n    fontValueSize: 26,\n\n    fontNumbersStyle: 'normal',\n    fontTitleStyle: 'normal',\n    fontUnitsStyle: 'normal',\n    fontValueStyle: 'normal',\n\n    fontNumbersWeight: 'normal',\n    fontTitleWeight: 'normal',\n    fontUnitsWeight: 'normal',\n    fontValueWeight: 'normal',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n    needleStart: 5,\n    needleEnd: 85,\n    needleWidth: 4,\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueBoxStroke: 5,\n    valueBoxWidth: 0,\n    valueText: '',\n    valueTextShadow: true,\n    valueBoxBorderRadius: 2.5,\n\n    // highlights\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }],\n    highlightsWidth: 15,\n\n    // progress bar\n    barWidth: 20, // percents\n    barStrokeWidth: 0, // pixels\n    barProgress: true,\n    barShadow: 0\n};\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Gauge collections type.\n *\n * It is used ES5 declaration here, because babel\n * transpiles inheritance incorrectly in this case.\n *\n * @class Collection\n * @constructor\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\n * Returns gauge object by its identifier or index in the collection\n *\n * @param {string|number} id\n * @return {*}\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar version = '2.1.5';\n\nvar round = Math.round;\nvar abs = Math.abs;\n\nvar gauges = new Collection();\n\ngauges.version = version;\n\n/**\n * Basic abstract BaseGauge class implementing common functionality\n * for different type of gauges.\n *\n * It should not be instantiated directly but must be extended by a final\n * gauge implementation.\n *\n * @abstract\n * @example\n *\n * class MyCoolGauge extends BaseGauge {\n *\n *     // theses methods below MUST be implemented:\n *\n *     constructor(options) {\n *        // ... do something with options\n *        super(options);\n *        // ... implement anything else\n *     }\n *\n *     draw() {\n *         // ... some implementation here\n *         return this;\n *     }\n * }\n */\n\nvar BaseGauge = function (_EventEmitter) {\n    _inherits(BaseGauge, _EventEmitter);\n\n    /**\n     * Fired each time gauge is initialized on a page\n     *\n     * @event BaseGauge#init\n     */\n\n    /**\n     * Fired each time gauge scene is rendered\n     *\n     * @event BaseGauge#render\n     */\n\n    /**\n     * Fired each time gauge object is destroyed\n     *\n     * @event BaseGauge#destroy\n     */\n\n    /**\n     * Fired each time before animation is started on the gauge\n     *\n     * @event BaseGauge#animationStart\n     */\n\n    /**\n     * Fired each time animation scene is complete\n     *\n     * @event BaseGauge#animate\n     * @type {number} percent\n     * @type {number} value\n     */\n\n    /**\n     * Fired each time animation is complete on the gauge\n     *\n     * @event BaseGauge#animationEnd\n     */\n\n    /**\n     * @event BaseGauge#value\n     * @type {number} newValue\n     * @type {number} oldValue\n     */\n\n    /**\n     * @constructor\n     * @abstract\n     * @param {GenericOptions} options\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var _this3 = _possibleConstructorReturn(this, (BaseGauge.__proto__ || Object.getPrototypeOf(BaseGauge)).call(this));\n\n        var className = _this3.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gauges.push(_this3);\n\n        if (options.listeners) {\n            Object.keys(options.listeners).forEach(function (event) {\n                var handlers = options.listeners[event] instanceof Array ? options.listeners[event] : [options.listeners[event]];\n\n                handlers.forEach(function (handler) {\n                    _this3.on(event, handler);\n                });\n            });\n        }\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Gauges version string\n         *\n         * @type {string}\n         */\n        _this3.version = version;\n\n        /**\n         * Gauge type class\n         *\n         * @type {BaseGauge} type\n         */\n        _this3.type = ns[className] || BaseGauge;\n\n        /**\n         * True if gauge has been drawn for the first time, false otherwise.\n         *\n         * @type {boolean}\n         */\n        _this3.initialized = false;\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n        options.value = parseFloat(options.value) || 0;\n\n        if (!options.borders) {\n            options.borderInnerWidth = options.borderMiddleWidth = options.borderOuterWidth = 0;\n        }\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw TypeError('Given gauge canvas element is invalid!');\n        }\n\n        options.width = parseFloat(options.width) || 0;\n        options.height = parseFloat(options.height) || 0;\n\n        if (!options.width || !options.height) {\n            if (!options.width) options.width = canvas.parentNode ? canvas.parentNode.offsetWidth : canvas.offsetWidth;\n            if (!options.height) options.height = canvas.parentNode ? canvas.parentNode.offsetHeight : canvas.offsetHeight;\n        }\n\n        /**\n         * Gauge options\n         *\n         * @type {GenericOptions} options\n         */\n        _this3.options = options || {};\n\n        if (_this3.options.animateOnInit) {\n            _this3._value = _this3.options.value;\n            _this3.options.value = _this3.options.minValue;\n        }\n\n        /**\n         * @type {SmartCanvas} canvas\n         */\n        _this3.canvas = new SmartCanvas(canvas, options.width, options.height);\n        _this3.canvas.onRedraw = _this3.draw.bind(_this3);\n\n        /**\n         * @type {Animation} animation\n         */\n        _this3.animation = new Animation(options.animationRule, options.animationDuration);\n        return _this3;\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\n         * Updates gauge configuration options at runtime and redraws the gauge\n         *\n         * @param {RadialGaugeOptions} options\n         * @returns {BaseGauge}\n         */\n        value: function update(options) {\n            Object.assign(this.options, this.type.configure(options || {}));\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\n         * Performs destruction of this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gauges.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gauges.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n\n            this.emit('destroy');\n        }\n\n        /**\n         * Returns gauges version string\n         *\n         * @return {string}\n         */\n\n    }, {\n        key: 'draw',\n\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @abstract\n         * @returns {BaseGauge}\n         */\n        value: function draw() {\n            if (this.options.animateOnInit && !this.initialized) {\n                this.value = this._value;\n                this.initialized = true;\n                this.emit('init');\n            }\n\n            this.emit('render');\n\n            return this;\n        }\n\n        /**\n         * Inject given gauge object into DOM\n         *\n         * @param {string} type\n         * @param {GenericOptions} options\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this4 = this;\n\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            var fromValue = this.options.value;\n\n            if (value === fromValue) {\n                return;\n            }\n\n            if (this.options.animation) {\n                if (this.animation.frame) {\n                    // animation is already in progress -\n                    // forget related old animation value\n                    // @see https://github.com/Mikhus/canvas-gauges/issues/94\n                    this.options.value = this._value;\n\n                    // if there is no actual value change requested stop it\n                    if (this._value === value) {\n                        this.animation.cancel();\n                        delete this._value;\n                        return;\n                    }\n                }\n\n                /**\n                 * @type {number}\n                 * @access private\n                 */\n                if (this._value === undefined) {\n                    this._value = value;\n                }\n\n                this.emit('animationStart');\n\n                this.animation.animate(function (percent) {\n                    var newValue = fromValue + (value - fromValue) * percent;\n\n                    _this4.options.animatedValue && _this4.emit('value', newValue, _this4.value);\n\n                    _this4.options.value = newValue;\n\n                    _this4.draw();\n\n                    _this4.emit('animate', percent, _this4.options.value);\n                }, function () {\n                    if (_this4._value !== undefined) {\n                        _this4.emit('value', _this4._value, _this4.value);\n                        _this4.options.value = _this4._value;\n                        delete _this4._value;\n                    }\n\n                    _this4.draw();\n                    _this4.emit('animationEnd');\n                });\n            } else {\n                this.emit('value', value, this.value);\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\n         * Returns current value of the gauge\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n\n        /**\n         * Updates gauge options\n         *\n         * @param {*} options\n         * @return {BaseGauge}\n         * @access protected\n         */\n\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            return options;\n        }\n    }, {\n        key: 'initialize',\n        value: function initialize(type, options) {\n            return new DomObserver(options, 'canvas', type);\n        }\n\n        /**\n         * Initializes gauge from a given HTML element\n         * (given element should be valid HTML canvas gauge definition)\n         *\n         * @param {HTMLElement} element\n         */\n\n    }, {\n        key: 'fromElement',\n        value: function fromElement(element) {\n            var type = DomObserver.toCamelCase(element.getAttribute('data-type'));\n            var attributes = element.attributes;\n            var i = 0;\n            var s = attributes.length;\n            var options = {};\n\n            if (!type) {\n                return;\n            }\n\n            if (!/Gauge$/.test(type)) {\n                type += 'Gauge';\n            }\n\n            for (; i < s; i++) {\n                options[DomObserver.toCamelCase(attributes[i].name.replace(/^data-/, ''), false)] = DomObserver.parse(attributes[i].value);\n            }\n\n            new DomObserver(options, element.tagName, type).process(element);\n        }\n\n        /**\n         * Ensures value is proper number\n         *\n         * @param {*} value\n         * @param {number} min\n         * @return {number}\n         */\n\n    }, {\n        key: 'ensureValue',\n        value: function ensureValue(value) {\n            var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            value = parseFloat(value);\n\n            if (isNaN(value) || !isFinite(value)) {\n                value = parseFloat(min) || 0;\n            }\n\n            return value;\n        }\n\n        /**\n         * Corrects javascript modulus bug\n         * @param {number} n\n         * @param {number} m\n         * @return {number}\n         */\n\n    }, {\n        key: 'mod',\n        value: function mod(n, m) {\n            return (n % m + m) % m;\n        }\n    }, {\n        key: 'version',\n        get: function get() {\n            return version;\n        }\n    }]);\n\n    return BaseGauge;\n}(EventEmitter);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['BaseGauge'] = BaseGauge;\n    ns['gauges'] = (window.document || {})['gauges'] = gauges;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @access private\n * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number, barDimensions: object}} Canvas2DContext\n */\n\n/* istanbul ignore next: private, not testable */\n/**\n * Examines if a given error is something to throw or to ignore\n *\n * @param {Error} err\n */\nfunction verifyError(err) {\n    // there is some unpredictable error in FF in some circumstances\n    // which we found simply safe to ignore than to fight with it\n    // noinspection JSUnresolvedVariable\n    if (err instanceof DOMException && err.result === 0x8053000b) {\n        return; // ignore it\n    }\n\n    throw err;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Prepares major ticks data\n *\n * @access private\n * @param {GenericOptions|{ tickSide: string }} options\n * @return {[boolean, boolean]}\n */\nfunction prepareTicks(options) {\n    if (!(options.majorTicks instanceof Array)) {\n        options.majorTicks = options.majorTicks ? [options.majorTicks] : [];\n    }\n\n    if (!options.majorTicks.length) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n    }\n\n    return [options.tickSide !== 'right', options.tickSide !== 'left'];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rounded corners rectangle\n *\n * @param {Canvas2DContext} context\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {number} r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Pads a given value with leading zeros using the given options\n *\n * @param {number} val\n * @param {RadialGaugeOptions|{valueInt: number, valueDec: number}} options\n * @returns {string}\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Formats a number for display on the dial's plate using the majorTicksFormat\n * config option.\n *\n * @param {number} num number to format\n * @param {object} options\n * @returns {string} formatted number\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms degrees to radians\n *\n * @param {number} degrees\n * @returns {number}\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns radial point coordinates\n *\n * @param {number} radius\n * @param {number} angle\n * @returns {{x: number, y: number}}\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Creates and returns linear gradient canvas object\n *\n * @param {Canvas2DContext} context\n * @param {string} colorFrom\n * @param {string} colorTo\n * @param {number} length\n * @param {boolean} [isVertical]\n * @param {number} [from]\n * @returns {CanvasGradient}\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var isVertical = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    var from = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    var grad = context.createLinearGradient(isVertical ? 0 : from, isVertical ? from : 0, isVertical ? 0 : length, isVertical ? length : 0);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws the shadow if it was not drawn\n *\n * @param {Canvas2DContext} context\n * @param {GenericOptions} options\n * @param {boolean} shadowDrawn\n * @return {boolean}\n */\nfunction drawShadow(context, options) {\n    var shadowDrawn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (shadowDrawn) {\n        context.restore();\n        return true;\n    }\n\n    context.save();\n\n    var w = options.borderShadowWidth;\n\n    if (w) {\n        context.shadowBlur = w;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    return true;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle shadow\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Constructs font styles for canvas fonts\n *\n * @param {GenericOptions} options\n * @param {string} target\n * @param {number} baseSize\n */\nfunction font(options, target, baseSize) {\n    return options['font' + target + 'Style'] + ' ' + options['font' + target + 'Weight'] + ' ' + options['font' + target + 'Size'] * baseSize + 'px ' + options['font' + target];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Resets some context settings\n *\n * @param {Canvas2DContext} context\n */\nfunction reset(context) {\n    context.shadowOffsetX = null;\n    context.shadowOffsetY = null;\n    context.shadowBlur = null;\n    context.shadowColor = '';\n    context.strokeStyle = null;\n    context.lineWidth = 0;\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Declares to drow value text shadow if configured\n *\n * @param context\n * @param options\n * @param offset\n * @param blur\n */\nfunction drawValueTextShadow(context, options, offset, blur) {\n    if (options.valueTextShadow) {\n        context.shadowOffsetX = offset;\n        context.shadowOffsetY = offset;\n        context.shadowBlur = blur;\n        context.shadowColor = options.colorValueTextShadow;\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws value box at given position\n *\n * @param {Canvas2DContext} context\n * @param {GenericOptions} options\n * @param {number|string} value\n * @param {number} x\n * @param {number} y\n * @param {number} max\n */\nfunction drawValueBox(context, options, value, x, y, max) {\n    if (!options.valueBox) return;\n\n    reset(context);\n\n    var addLength = options.valueDec ? 1 + options.valueDec : 0;\n    var maxValueWidth = '9'.repeat(Math.max.apply(null, [String(parseInt(value)).length + addLength].concat(options.majorTicks.map(function (val) {\n        return String(parseInt(val, 10)).length + addLength;\n    }))));\n    var text = options.valueText || padValue(value, options);\n    var tunit = max / 200;\n    var runit = max / 100;\n    var offset = 0.4 * runit;\n    var blur = 1.2 * runit;\n\n    context.font = font(options, 'Value', tunit);\n    drawValueTextShadow(context, options, offset, blur);\n\n    var tw = context.measureText(options.valueText ? text : '-' + padValue(Number(maxValueWidth), options)).width;\n\n    reset(context);\n\n    var th = parseFloat(options.fontValueSize) * tunit + offset + blur;\n    var sw = runit * parseFloat(options.valueBoxStroke);\n    var bmax = max * 2 - sw * 2;\n\n    var bw = tw + 10 * runit;\n    var bh = 1.1 * th + offset + blur;\n    var br = runit * options.valueBoxBorderRadius;\n    var obw = (parseFloat(options.valueBoxWidth) || 0) / 100 * bmax;\n\n    obw > bw && (bw = obw);\n    bw > bmax && (bw = bmax);\n\n    var bx = x - bw / 2;\n    var by = y - bh / 2;\n    var gy = y - 5.75 * runit;\n\n    context.beginPath();\n\n    if (br) roundRect(context, bx, by, bw, bh, br);else context.rect(bx, by, bw, bh);\n\n    if (sw) {\n        var grd = context.createRadialGradient(x, gy, runit * 10, x, gy, runit * 20);\n\n        grd.addColorStop(0, options.colorValueBoxRect);\n        grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n        context.strokeStyle = grd;\n        context.lineWidth = sw;\n        context.stroke();\n    }\n\n    if (options.colorValueBoxShadow) {\n        context.shadowBlur = 1.2 * runit;\n        context.shadowColor = options.colorValueBoxShadow;\n    }\n\n    if (options.colorValueBoxBackground) {\n        context.fillStyle = options.colorValueBoxBackground;\n        context.fill();\n    }\n\n    context.closePath();\n    context.restore();\n\n    drawValueTextShadow(context, options, offset, blur);\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.textBaseline = 'alphabetic';\n    context.fillText(text, bx + bw / 2, y + bh / 2 - th / 3);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns normalized value\n *\n * @param {GenericOptions} options\n * @return {{normal: number, indented: number}}\n */\nfunction normalizedValue(options) {\n    var value = options.value;\n    var min = options.minValue;\n    var max = options.maxValue;\n    var dt = (max - min) * 0.01;\n\n    return {\n        normal: value < min ? min : value > max ? max : value,\n        indented: value < min ? min - dt : value > max ? max + dt : value\n    };\n}\n\nvar drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient,\n    drawNeedleShadow: drawNeedleShadow,\n    drawValueBox: drawValueBox,\n    verifyError: verifyError,\n    prepareTicks: prepareTicks,\n    drawShadow: drawShadow,\n    font: font,\n    normalizedValue: normalizedValue\n};\n\ndrawings;\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar PI = Math.PI;\nvar HPI = PI / 2;\n\n/**\n * Gauge configuration options\n *\n * @typedef {GenericOptions|{exactTicks: boolean, ticksAngle: number, startAngle: number, colorNeedleCircleOuter: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInner: string, colorNeedleCircleInnerEnd: string, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean, animationTarget: string, useMinPath: boolean}} RadialGaugeOptions\n */\n\n/**\n * Default gauge configuration options\n *\n * @access private\n * @type {RadialGaugeOptions}\n */\nvar defaultRadialGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuter: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInner: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n\n    // needle\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true,\n    needleStart: 20,\n\n    // custom animations\n    animationTarget: 'needle', // 'needle' or 'plate'\n    useMinPath: false,\n\n    barWidth: 0\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gradient-filled circle on a canvas\n *\n * @access private\n * @param {number} radius\n * @param {number} width\n * @param {Canvas2DContext} context\n * @param {string} start gradient start color\n * @param {string} end gradient end color\n */\nfunction drawRadialBorder(radius, width, context, start, end) {\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(radius), 0, PI * 2, true);\n    context.lineWidth = width;\n    context.strokeStyle = end ? drawings.linearGradient(context, start, end, radius) : start;\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns max radius without borders for the gauge\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n * @return {number}\n */\nfunction maxRadialRadius(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio + (options.borderOuterWidth ? 0.5 : 0) + (options.borderMiddleWidth ? 0.5 : 0) + (options.borderInnerWidth ? 0.5 : 0);\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge plate on the canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialPlate(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    var d0 = options.borderShadowWidth * pxRatio;\n    var r0 = context.max - d0 - options.borderOuterWidth * pxRatio / 2;\n    var r1 = r0 - options.borderOuterWidth * pxRatio / 2 - options.borderMiddleWidth * pxRatio / 2 + 0.5;\n    var r2 = r1 - options.borderMiddleWidth * pxRatio / 2 - options.borderInnerWidth * pxRatio / 2 + 0.5;\n    var r3 = maxRadialRadius(context, options);\n    var grad = void 0;\n    var shadowDrawn = false;\n\n    context.save();\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r0, options.borderOuterWidth * pxRatio, context, options.colorBorderOuter, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r1, options.borderMiddleWidth * pxRatio, context, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r2, options.borderInnerWidth * pxRatio, context, options.colorBorderInner, options.colorBorderInnerEnd);\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(r3), 0, PI * 2, true);\n\n    if (options.colorPlateEnd) {\n        grad = context.createRadialGradient(0, 0, r3 / 2, 0, 0, r3);\n        grad.addColorStop(0, options.colorPlate);\n        grad.addColorStop(1, options.colorPlateEnd);\n    } else {\n        grad = options.colorPlate;\n    }\n\n    context.fillStyle = grad;\n\n    context.fill();\n    context.closePath();\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge highlight areas on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialHighlights(context, options) {\n    var hlWidth = context.max * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!hlWidth) return;\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options) - hlWidth / 2);\n    var i = 0,\n        s = options.highlights.length;\n    var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n\n    context.save();\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n\n        context.beginPath();\n\n        context.rotate(HPI);\n        context.arc(0, 0, r, drawings.radians(options.startAngle + (hlt.from - options.minValue) / vd), drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd), false);\n        context.strokeStyle = hlt.color;\n        context.lineWidth = hlWidth;\n        context.stroke();\n        context.closePath();\n\n        context.restore();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks bar on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialMinorTicks(context, options) {\n    var radius = radialTicksRadius(context, options);\n    var s = void 0,\n        range = void 0,\n        angle = void 0;\n    var i = 0;\n    var delta = 0;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks || options.colorStrokeTicks;\n\n    context.save();\n\n    if (options.exactTicks) {\n        range = options.maxValue - options.minValue;\n        s = minTicks ? range / minTicks : 0;\n        delta = (BaseGauge.mod(options.majorTicks[0], minTicks) || 0) * ratio;\n    } else {\n        s = minTicks * (options.majorTicks.length - 1);\n    }\n\n    for (; i < s; ++i) {\n        angle = options.startAngle + delta + i * (options.ticksAngle / s);\n        if (angle <= options.ticksAngle + options.startAngle) {\n            context.rotate(drawings.radians(angle));\n\n            context.beginPath();\n            context.moveTo(0, radius);\n            context.lineTo(0, radius - context.max * 0.075);\n            closeStrokedPath(context);\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns ticks radius\n *\n * @access private\n * @param context\n * @param options\n * @return {number}\n */\nfunction radialTicksRadius(context, options) {\n    var unit = context.max / 100;\n\n    return maxRadialRadius(context, options) - 5 * unit - (options.barWidth ? (parseFloat(options.barStrokeWidth) || 0) * 2 + ((parseFloat(options.barWidth) || 0) + 5) * unit : 0);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge major ticks bar on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialMajorTicks(context, options) {\n    drawings.prepareTicks(options);\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options));\n    var i = void 0,\n        colors = void 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.save();\n\n    colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(s).fill(options.colorStrokeTicks || options.colorMajorTicks);\n\n    i = 0;\n    for (; i < s; ++i) {\n        context.strokeStyle = colors[i];\n        context.rotate(drawings.radians(radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s)));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * 0.15);\n        closeStrokedPath(context);\n    }\n\n    if (options.strokeTicks) {\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n        context.rotate(HPI);\n\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\nfunction radialNextAngle(options, i, s) {\n    if (options.exactTicks) {\n        var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n        return options.startAngle + ratio * (i - options.minValue);\n    }\n\n    return options.startAngle + i * (options.ticksAngle / (s - 1));\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Strokes, closes path and restores previous context state\n *\n * @param {Canvas2DContext} context\n */\nfunction closeStrokedPath(context) {\n    context.stroke();\n    context.restore();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar numbers\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialNumbers(context, options) {\n    var radius = radialTicksRadius(context, options) - context.max * 0.15;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n    var isAnimated = options.animationTarget !== 'needle';\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(s).fill(options.colorNumbers);\n\n    var plateValueAngle = isAnimated ? -(options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle : 0;\n\n    if (isAnimated) {\n        context.save();\n        context.rotate(-drawings.radians(plateValueAngle));\n    }\n\n    context.font = drawings.font(options, 'Numbers', context.max / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    for (; i < s; ++i) {\n        var angle = plateValueAngle + radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s);\n        var textWidth = context.measureText(options.majorTicks[i]).width;\n        var textHeight = options.fontNumbersSize;\n        var textRadius = Math.sqrt(textWidth * textWidth + textHeight * textHeight) / 2;\n        var point = drawings.radialPoint(radius - textRadius - options.numbersMargin / 100 * context.max, drawings.radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.fillStyle = colors[i];\n        context.fillText(options.majorTicks[i], point.x, point.y);\n    }\n\n    isAnimated && context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge title\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Title', context.max / 200);\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws units name on the gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Units', context.max / 200);\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(options.units, 0, context.max / 3.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.ticksAngle < 360 ? drawings.normalizedValue(options).indented : options.value;\n    var max = maxRadialRadius(context, options);\n    //noinspection JSUnresolvedFunction\n    var r1 = abs(max / 100 * options.needleCircleSize);\n    //noinspection JSUnresolvedFunction\n    var r2 = abs(max / 100 * options.needleCircleSize * 0.75);\n    //noinspection JSUnresolvedFunction\n    var rIn = abs(max / 100 * options.needleEnd);\n    //noinspection JSUnresolvedFunction\n    var rStart = abs(options.needleStart ? max / 100 * options.needleStart : 0);\n    //noinspection JSUnresolvedFunction\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isFixed = options.animationTarget !== 'needle';\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.rotate(drawings.radians(isFixed ? options.startAngle : options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle));\n\n    context.fillStyle = drawings.linearGradient(context, options.colorNeedle, options.colorNeedleEnd, rIn - rStart);\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rStart);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rStart);\n        context.closePath();\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rStart);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rStart);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n        context.fill();\n    }\n\n    if (options.needleCircleSize) {\n        context.restore();\n\n        drawings.drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleOuter, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleInner, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n\n        context.restore();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge value box\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n * @param {number} value\n */\nfunction drawRadialValueBox(context, options, value) {\n    drawings.drawValueBox(context, options, value, 0, context.max - context.max * 0.33, context.max);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge progress bar\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialProgressBar(context, options) {\n    var unit = context.max / 100;\n    var rMax = maxRadialRadius(context, options) - 5 * unit;\n    var sw = parseFloat(options.barStrokeWidth) || 0;\n    var w = (parseFloat(options.barWidth) || 0) * unit;\n    var rMin = rMax - sw * 2 - w;\n    var half = (rMax - rMin) / 2;\n    var r = rMin + half;\n    var delta = sw / r;\n    var sa = options.startAngle;\n    var ea = options.startAngle + options.ticksAngle;\n\n    context.save();\n    context.rotate(HPI);\n\n    if (sw) {\n        // draw stroke\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa) - delta, drawings.radians(ea) + delta, false);\n        context.strokeStyle = options.colorBarStroke;\n        context.lineWidth = half * 2;\n        context.stroke();\n        context.closePath();\n    }\n\n    if (w) {\n        // draw bar\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa), drawings.radians(ea), false);\n        context.strokeStyle = options.colorBar;\n        context.lineWidth = w;\n        context.stroke();\n        context.closePath();\n\n        if (options.barShadow) {\n            // draw shadow\n            context.beginPath();\n            context.arc(0, 0, rMax, drawings.radians(sa), drawings.radians(ea), false);\n            context.clip();\n\n            context.beginPath();\n            context.strokeStyle = options.colorBar;\n            context.lineWidth = 1;\n            context.shadowBlur = options.barShadow;\n            context.shadowColor = options.colorBarShadow;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n            context.arc(0, 0, rMax, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n            context.stroke();\n            context.closePath();\n\n            context.restore();\n            context.rotate(HPI);\n        }\n\n        // draw bar progress\n        if (options.barProgress) {\n            context.beginPath();\n            context.arc(0, 0, r, drawings.radians(sa), drawings.radians(sa + (drawings.normalizedValue(options).normal - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle), false);\n            context.strokeStyle = options.colorBarProgress;\n            context.lineWidth = w;\n            context.stroke();\n            context.closePath();\n        }\n    }\n\n    context.restore();\n}\n\n/**\n * Find and return gauge value to display\n *\n * @param {RadialGauge} gauge\n */\nfunction displayValue(gauge) {\n    if (gauge.options.animatedValue) {\n        return gauge.options.value;\n    }\n\n    return gauge.value;\n}\n\n/**\n * Minimalistic HTML5 Canvas Gauge\n * @example\n *  var gauge = new RadialGauge({\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\n *     width: 400,\n *     height: 400,\n *     units: 'Km/h',\n *     title: false,\n *     value: 0,\n *     minValue: 0,\n *     maxValue: 220,\n *     majorTicks: [\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\n *     ],\n *     minorTicks: 2,\n *     strokeTicks: false,\n *     highlights: [\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n *     ],\n *     colorPlate: '#222',\n *     colorMajorTicks: '#f5f5f5',\n *     colorMinorTicks: '#ddd',\n *     colorTitle: '#fff',\n *     colorUnits: '#ccc',\n *     colorNumbers: '#eee',\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n *     valueBox: true,\n *     animationRule: 'bounce'\n * });\n * // draw initially\n * gauge.draw();\n * // animate\n * setInterval(() => {\n *    gauge.value = Math.random() * -220 + 220;\n * }, 1000);\n */\n\nvar RadialGauge = function (_BaseGauge) {\n    _inherits(RadialGauge, _BaseGauge);\n\n    /**\n     * Fired each time before gauge plate is drawn\n     *\n     * @event RadialGauge#beforePlate\n     */\n\n    /**\n     * Fired each time before gauge highlight areas are drawn\n     *\n     * @event RadialGauge#beforeHighlights\n     */\n\n    /**\n     * Fired each time before gauge minor ticks are drawn\n     *\n     * @event RadialGauge#beforeMinorTicks\n     */\n\n    /**\n     * Fired each time before gauge major ticks are drawn\n     *\n     * @event RadialGauge#beforeMajorTicks\n     */\n\n    /**\n     * Fired each time before gauge tick numbers are drawn\n     *\n     * @event RadialGauge#beforeNumbers\n     */\n\n    /**\n     * Fired each time before gauge title is drawn\n     *\n     * @event RadialGauge#beforeTitle\n     */\n\n    /**\n     * Fired each time before gauge units text is drawn\n     *\n     * @event RadialGauge#beforeUnits\n     */\n\n    /**\n     * Fired each time before gauge progress bar is drawn\n     *\n     * @event RadialGauge#beforeProgressBar\n     */\n\n    /**\n     * Fired each time before gauge value box is drawn\n     *\n     * @event RadialGauge#beforeValueBox\n     */\n\n    /**\n     * Fired each time before gauge needle is drawn\n     *\n     * @event RadialGauge#beforeNeedle\n     */\n\n    /**\n     * @constructor\n     * @param {RadialGaugeOptions} options\n     */\n    function RadialGauge(options) {\n        _classCallCheck(this, RadialGauge);\n\n        options = Object.assign({}, defaultRadialGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (RadialGauge.__proto__ || Object.getPrototypeOf(RadialGauge)).call(this, RadialGauge.configure(options)));\n    }\n\n    /**\n     * Checks and updates gauge options properly\n     *\n     * @param {*} options\n     * @return {*}\n     * @access protected\n     */\n\n\n    _createClass(RadialGauge, [{\n        key: 'draw',\n\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @returns {RadialGauge}\n         */\n        value: function draw() {\n            console.log(\"dupa\")\n            try {\n                var canvas = this.canvas;\n                var _ref = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight],\n                    x = _ref[0],\n                    y = _ref[1],\n                    w = _ref[2],\n                    h = _ref[3];\n\n                var options = this.options;\n\n                if (options.animationTarget === 'needle') {\n                    if (!canvas.elementClone.initialized) {\n                        var context = canvas.contextClone;\n\n                        // clear the cache\n                        context.clearRect(x, y, w, h);\n                        context.save();\n\n                        this.emit('beforePlate');\n                        drawRadialPlate(context, options);\n                        this.emit('beforeHighlights');\n                        drawRadialHighlights(context, options);\n                        this.emit('beforeMinorTicks');\n                        drawRadialMinorTicks(context, options);\n                        this.emit('beforeMajorTicks');\n                        drawRadialMajorTicks(context, options);\n                        this.emit('beforeNumbers');\n                        drawRadialNumbers(context, options);\n                        this.emit('beforeTitle');\n                        drawRadialTitle(context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    this.canvas.commit();\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n                    this.emit('beforeValueBox');\n                    drawRadialValueBox(canvas.context, options, displayValue(this));\n                    this.emit('beforeNeedle');\n                    drawRadialNeedle(canvas.context, options);\n                } else {\n                    var plateValueAngle = -drawings.radians((options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle);\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforePlate');\n                    drawRadialPlate(canvas.context, options);\n\n                    canvas.context.rotate(plateValueAngle);\n\n                    // animated\n                    this.emit('beforeHighlights');\n                    drawRadialHighlights(canvas.context, options);\n                    this.emit('beforeMinorTicks');\n                    drawRadialMinorTicks(canvas.context, options);\n                    this.emit('beforeMajorTicks');\n                    drawRadialMajorTicks(canvas.context, options);\n                    this.emit('beforeNumbers');\n                    drawRadialNumbers(canvas.context, options);\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n\n                    // non-animated\n                    canvas.context.rotate(-plateValueAngle);\n                    canvas.context.save();\n\n                    if (!canvas.elementClone.initialized) {\n                        var _context = canvas.contextClone;\n\n                        // clear the cache\n                        _context.clearRect(x, y, w, h);\n                        _context.save();\n\n                        this.emit('beforeTitle');\n                        drawRadialTitle(_context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(_context, options);\n                        this.emit('beforeNeedle');\n                        drawRadialNeedle(_context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                }\n\n                // value box animations\n                this.emit('beforeValueBox');\n                drawRadialValueBox(canvas.context, options, displayValue(this));\n\n                _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }, {\n        key: 'value',\n\n\n        /**\n         * Sets the value for radial gauge\n         *\n         * @param {number} value\n         */\n        set: function set(value) {\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            if (this.options.animation && this.options.ticksAngle === 360 && this.options.useMinPath) {\n                this._value = value;\n                value = this.options.value + ((value - this.options.value) % 360 + 540) % 360 - 180;\n            }\n\n            _set(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', value, this);\n        }\n\n        /**\n         * Returns current gauge value\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', this);\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            if (options.barWidth > 50) options.barWidth = 50;\n\n            /* istanbul ignore if */\n            if (isNaN(options.startAngle)) options.startAngle = 45;\n            /* istanbul ignore if */\n            if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n            /* istanbul ignore if */\n            if (options.ticksAngle > 360) options.ticksAngle = 360;\n            /* istanbul ignore if */\n            if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n            /* istanbul ignore if */\n            if (options.startAngle < 0) options.startAngle = 0;\n            /* istanbul ignore if */\n            if (options.startAngle > 360) options.startAngle = 360;\n\n            return options;\n        }\n    }]);\n\n    return RadialGauge;\n}(BaseGauge);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['RadialGauge'] = RadialGauge;\n}\n\nBaseGauge.initialize('RadialGauge', defaultRadialGaugeOptions);\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Linear gauge configuration options\n *\n * @typedef {GenericOptions|{borderRadius: number, barBeginCircle: number, tickSide: string, needleSide: string, numberSide: string, ticksWidth: number, ticksWidthMinor: number, ticksPadding: number, barLength: number, colorBarEnd: string, colorBarProgressEnd: string}} LinearGaugeOptions\n */\n\n/**\n * Default linear gauge configuration options\n *\n * @type {LinearGaugeOptions}\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    // width: 150,\n    // height: 400,\n\n    // bar\n    barBeginCircle: 30, // percents\n    colorBarEnd: '',\n    colorBarProgressEnd: '',\n\n    needleWidth: 6,\n\n    tickSide: 'both', // available: 'left', 'right', 'both'\n    needleSide: 'both', // available: 'left', 'right', 'both'\n\n    numberSide: 'both', // available: 'left', 'right', 'both'\n\n    ticksWidth: 10,\n    ticksWidthMinor: 5,\n    ticksPadding: 5,\n    barLength: 85,\n    fontTitleSize: 26,\n\n    highlightsWidth: 10\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, w > h ? w : h, h > w, w > h ? x : y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} width width of the border\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawLinearBorder(context, width, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.lineWidth = width;\n    context.strokeStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, h, true, y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge plate\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearPlate(context, options, x, y, w, h) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    context.save();\n\n    var r = options.borderRadius * pxRatio;\n    var w1 = w - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var w2 = w1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var w3 = w2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var w4 = w3 - options.borderInnerWidth * pxRatio;\n\n    var h1 = h - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var h2 = h1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var h3 = h2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var h4 = h3 - options.borderInnerWidth * pxRatio;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n    var aliasingOffset = 0;\n    var shadowDrawn = false;\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderOuterWidth * pxRatio, r, x + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, y + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, w1, h1, options.colorBorderOuter, options.colorBorderOuterEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderMiddleWidth * pxRatio, r -= 1 + aliasingOffset * 2, x2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, y2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, w2 + aliasingOffset * 2, h2 + aliasingOffset * 2, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderInnerWidth * pxRatio, r -= 1 + aliasingOffset * 2, x3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, y3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, w3 + aliasingOffset * 2, h3 + aliasingOffset * 2, options.colorBorderInner, options.colorBorderInnerEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    drawRectangle(context, r, x4, y4, w4 + aliasingOffset * 2, h4 + aliasingOffset * 2, options.colorPlate, options.colorPlateEnd);\n\n    context.restore();\n\n    return [x4, y4, w4, h4];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns linear gauge base bar dimensions.\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions|{barStrokeWidth: number, barBeginCircle: number, barWidth: number, hasLeft: boolean, hasRight: boolean}} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @return {{isVertical: boolean, width: number, length: number, barWidth: number, barLength: number, strokeWidth: number, barMargin: number, radius: number, x0: number, y0: number, barOffset: number, titleMargin: number, unitsMargin: number, X: number, Y: number, baseX: number, baseY: number, ticksPadding: number}}\n */\nfunction barDimensions(context, options, x, y, w, h) {\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isVertical = h >= w;\n    var width = isVertical ? w * 0.85 : h;\n    var length = isVertical ? h : w;\n\n    //noinspection JSUnresolvedFunction\n    x = isVertical ? round(x + (w - width) / 2) : x;\n\n    var hasTitle = !!options.title;\n    var hasUnits = !!options.units;\n    var hasValue = !!options.valueBox;\n\n    var titleMargin = void 0;\n    var unitsMargin = void 0;\n    var valueMargin = void 0;\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = round(length * 0.05);\n        //noinspection JSUnresolvedFunction\n        titleMargin = round(length * 0.075);\n        //noinspection JSUnresolvedFunction\n        valueMargin = round(length * 0.11);\n\n        if (hasTitle) {\n            length -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) length -= unitsMargin;\n        if (hasValue) length -= valueMargin;\n    } else {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = titleMargin = round(width * 0.15);\n\n        if (hasTitle) {\n            width -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) width -= unitsMargin;\n    }\n\n    var strokeWidth = options.barStrokeWidth * 2;\n    //noinspection JSUnresolvedFunction\n    var radius = options.barBeginCircle ? round(width * options.barBeginCircle / 200 - strokeWidth / 2) : 0;\n    //noinspection JSUnresolvedFunction\n    var barWidth = round(width * options.barWidth / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barLength = round(length * options.barLength / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barMargin = round((length - barLength) / 2);\n\n    // coordinates for arc of the bar if configured\n    //noinspection JSUnresolvedFunction\n    var x0 = round(x + (isVertical ? width / 2 : barMargin + radius));\n    //noinspection JSUnresolvedFunction\n    var y0 = round(y + (isVertical ? length - barMargin - radius + strokeWidth / 2 : width / 2));\n    var dx = isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n    var dy = !isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n\n    //noinspection JSUndefinedPropertyAssignment\n    context.barDimensions = {\n        isVertical: isVertical,\n        width: width,\n        length: length,\n        barWidth: barWidth,\n        barLength: barLength,\n        strokeWidth: strokeWidth,\n        barMargin: barMargin,\n        radius: radius,\n        pixelRatio: pixelRatio,\n        barOffset: null,\n        titleMargin: hasTitle ? titleMargin : 0,\n        unitsMargin: hasUnits ? unitsMargin : 0,\n        get ticksLength() {\n            return this.barLength - this.barOffset - this.strokeWidth;\n        },\n        X: x + dx,\n        Y: y + dy,\n        x0: x0 + dx,\n        y0: y0 + dy,\n        baseX: x,\n        baseY: y,\n        ticksPadding: options.ticksPadding / 100\n    };\n\n    return context.barDimensions;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws bar shape from the given options on a given canvas context\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {string} type\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearBarShape(context, options, type, x, y, w, h) {\n    var _barDimensions = barDimensions(context, options, x, y, w, h),\n        isVertical = _barDimensions.isVertical,\n        width = _barDimensions.width,\n        barWidth = _barDimensions.barWidth,\n        barLength = _barDimensions.barLength,\n        strokeWidth = _barDimensions.strokeWidth,\n        barMargin = _barDimensions.barMargin,\n        radius = _barDimensions.radius,\n        x0 = _barDimensions.x0,\n        y0 = _barDimensions.y0,\n        X = _barDimensions.X,\n        Y = _barDimensions.Y;\n\n    var fullBarLength = barLength;\n\n    context.save();\n    context.beginPath();\n\n    if (options.barBeginCircle) {\n        var direction = drawings.radians(isVertical ? 270 : 0);\n        var alpha = Math.asin(barWidth / 2 / radius);\n        var cosAlpha = Math.cos(alpha);\n        var sinAlpha = Math.sin(alpha);\n\n        var x1 = x0 + (isVertical ? radius * sinAlpha : radius * cosAlpha - strokeWidth / 2);\n        var y1 = isVertical ? y0 - radius * cosAlpha : y0 + radius * sinAlpha;\n        //noinspection JSUnresolvedFunction\n        var cutRadius = isVertical ? abs(y1 - y0) : abs(x1 - x0);\n\n        //noinspection JSUnresolvedFunction\n        context.barDimensions.barOffset = round(cutRadius + radius);\n\n        // bottom point\n        //noinspection JSUnresolvedFunction\n        var x2 = isVertical ? round(x0 - radius * sinAlpha) : x1;\n        //noinspection JSUnresolvedFunction\n        var y2 = isVertical ? y1 : round(y0 - radius * sinAlpha);\n\n        if (type === 'progress') {\n            barLength = context.barDimensions.barOffset + (barLength - context.barDimensions.barOffset) * (drawings.normalizedValue(options).normal - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        // bar ends at\n        //noinspection JSUnresolvedFunction\n        var x3 = round(x1 + barLength - context.barDimensions.barOffset + strokeWidth / 2); // h\n        //noinspection JSUnresolvedFunction\n        var y3 = round(y1 - barLength + context.barDimensions.barOffset - strokeWidth / 2); // v\n\n        context.arc(x0, y0, radius, direction + alpha, direction - alpha);\n\n        if (isVertical) {\n            context.moveTo(x1, y2);\n            context.lineTo(x1, y3);\n            context.lineTo(x2, y3);\n            context.lineTo(x2, y2);\n        } else {\n            context.moveTo(x1, y2);\n            context.lineTo(x3, y2);\n            context.lineTo(x3, y1);\n            context.lineTo(x1, y1);\n        }\n    } else {\n        // simply rectangle\n        //noinspection JSUnresolvedFunction\n        var rx = round(isVertical ? X + (width - barWidth) / 2 : X + barMargin);\n        //noinspection JSUnresolvedFunction\n        var ry = round(isVertical ? Y + barLength + barMargin : Y + (width - barWidth) / 2);\n\n        if (type === 'progress') {\n            barLength *= (options.value - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        if (isVertical) context.rect(rx, ry, barWidth, -barLength);else context.rect(rx, ry, barLength, barWidth);\n    }\n\n    if (type !== 'progress' && options.barStrokeWidth) {\n        context.lineWidth = strokeWidth;\n        context.strokeStyle = options.colorBarStroke;\n        //context.lineJoin = 'round';\n        context.stroke();\n    }\n\n    if (type !== 'progress' && options.colorBar) {\n        context.fillStyle = options.colorBarEnd ? drawings.linearGradient(context, options.colorBar, options.colorBarEnd, barLength, isVertical, isVertical ? Y : X) : options.colorBar;\n        context.fill();\n    } else if (type === 'progress' && options.colorBarProgress) {\n        context.fillStyle = options.colorBarProgressEnd ? drawings.linearGradient(context, options.colorBarProgress, options.colorBarProgressEnd, fullBarLength, isVertical, isVertical ? Y : X) : options.colorBarProgress;\n        context.fill();\n    }\n\n    context.closePath();\n\n    // fix dimensions for further usage\n    if (options.barBeginCircle) context.barDimensions.radius += strokeWidth;\n\n    context.barDimensions.barWidth += strokeWidth;\n    context.barDimensions.barLength += strokeWidth;\n}\n\n/**\n * Draws gauge bar\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBar(context, options, x, y, w, h) {\n    drawLinearBarShape(context, options, '', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Helper function to calculate bar ticks presence on the sides\n *\n * @param {string} notWhich\n * @param {LinearGaugeOptions} options\n * @return {boolean}\n */\nfunction hasTicksBar(notWhich, options) {\n    return options.needleSide !== notWhich || options.tickSide !== notWhich || options.numberSide !== notWhich;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar progress\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBarProgress(context, options, x, y, w, h) {\n    options.barProgress && drawLinearBarShape(context, options, 'progress', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar highlighted areas\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarHighlights(context, options) {\n    var _context$barDimension = context.barDimensions,\n        isVertical = _context$barDimension.isVertical,\n        width = _context$barDimension.width,\n        length = _context$barDimension.length,\n        barWidth = _context$barDimension.barWidth,\n        barOffset = _context$barDimension.barOffset,\n        barMargin = _context$barDimension.barMargin,\n        X = _context$barDimension.X,\n        Y = _context$barDimension.Y,\n        ticksLength = _context$barDimension.ticksLength,\n        ticksPadding = _context$barDimension.ticksPadding;\n\n    var hlWidth = width * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!options.highlights || !hlWidth) return;\n\n    var hasLeft = options.tickSide !== 'right';\n    var hasRight = options.tickSide !== 'left';\n    var i = 0;\n    var s = options.highlights.length;\n    var tickOffset = (width - barWidth) / 2;\n    var interval = options.maxValue - options.minValue;\n    //noinspection JSUnresolvedFunction\n    var eX = round(isVertical ? X + tickOffset : X + barMargin + barOffset);\n    var eH = hlWidth;\n    var eY = isVertical ? Y + length - barMargin - barOffset : Y + tickOffset;\n    //noinspection JSUnresolvedFunction\n    var hLeft = round((options.ticksWidth / 100 + ticksPadding) * width) + (hlWidth - options.ticksWidth / 100 * width);\n    //noinspection JSUnresolvedFunction\n    var hRight = round(barWidth + ticksPadding * width);\n\n    context.save();\n\n    for (; i < s; i++) {\n        var entry = options.highlights[i];\n        //noinspection JSUnresolvedFunction\n        var eStart = ticksLength * abs(options.minValue - entry.from) / interval;\n        //noinspection JSUnresolvedFunction\n        var eW = ticksLength * abs((entry.to - entry.from) / interval);\n\n        context.beginPath();\n        context.fillStyle = entry.color;\n\n        if (isVertical) {\n            if (hasLeft) context.rect(eX - hLeft, eY - eStart, eH, -eW);\n\n            if (hasRight) context.rect(eX + hRight, eY - eStart, eH, -eW);\n        } else {\n            if (hasLeft) context.rect(eX + eStart, eY - hLeft, eW, eH);\n\n            if (hasRight) context.rect(eX + eStart, eY + hRight, eW, eH);\n        }\n\n        context.fill();\n        context.closePath();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws a tick line on a linear gauge\n *\n * @param {Canvas2DContext} context\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n */\nfunction drawLinearTick(context, x1, y1, x2, y2) {\n    context.beginPath();\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks\n *\n * @param {Canvas2DContext} context\n * @param {string} color\n * @param {number[]} ticks\n * @param {number} minVal\n * @param {number} maxVal\n * @param {boolean} hasLeft\n * @param {boolean} hasRight\n * @param {number} lineWidth\n * @param {number} lineLength\n */\nfunction drawLinearTicks(context, color, ticks, minVal, maxVal, hasLeft, hasRight, lineWidth, lineLength) {\n    var _context$barDimension2 = context.barDimensions,\n        isVertical = _context$barDimension2.isVertical,\n        length = _context$barDimension2.length,\n        barWidth = _context$barDimension2.barWidth,\n        barOffset = _context$barDimension2.barOffset,\n        barMargin = _context$barDimension2.barMargin,\n        pixelRatio = _context$barDimension2.pixelRatio,\n        width = _context$barDimension2.width,\n        X = _context$barDimension2.X,\n        Y = _context$barDimension2.Y,\n        ticksLength = _context$barDimension2.ticksLength,\n        ticksPadding = _context$barDimension2.ticksPadding;\n\n    var tickOffset = (width - barWidth) / 2;\n    var tickX = void 0,\n        tickY = void 0;\n    var i = 0;\n    var s = ticks.length;\n    var val = void 0;\n    var tickLen = lineLength * width;\n    var tickLeft = tickOffset - ticksPadding * width;\n    var tickRight = tickOffset + barWidth + tickLen + ticksPadding * width;\n    var colors = color instanceof Array ? color : new Array(ticks.length).fill(color);\n\n    context.lineWidth = lineWidth * pixelRatio;\n    context.save();\n\n    var ratio = ticksLength / (maxVal - minVal);\n    for (; i < s; i++) {\n        val = ticks[i];\n        context.strokeStyle = colors[i];\n\n        if (isVertical) {\n            tickY = Y + length - barMargin - barOffset + (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickX = X + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n\n            if (hasRight) {\n                tickX = X + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n        } else {\n            tickX = X + barMargin + barOffset - (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickY = Y + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, tickX, round(tickY - tickLen));\n            }\n\n            if (hasRight) {\n                tickY = Y + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, round(tickY), tickX, tickY - tickLen);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicks(context, options) {\n    var _drawings$prepareTick = drawings.prepareTicks(options),\n        _drawings$prepareTick2 = _slicedToArray(_drawings$prepareTick, 2),\n        hasLeft = _drawings$prepareTick2[0],\n        hasRight = _drawings$prepareTick2[1];\n\n    var lineWidth = 2;\n    var valuePerNonExactTick = (options.maxValue - options.minValue) / (options.majorTicks.length - 1);\n    var colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(options.majorTicks.length).fill(options.colorStrokeTicks || options.colorMajorTicks);\n    var ticks = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n\n    drawLinearTicks(context, colors, ticks, options.minValue, options.maxValue, hasLeft, hasRight, lineWidth, options.ticksWidth / 100);\n\n    if (options.strokeTicks) {\n        var _context$barDimension3 = context.barDimensions,\n            isVertical = _context$barDimension3.isVertical,\n            length = _context$barDimension3.length,\n            width = _context$barDimension3.width,\n            barWidth = _context$barDimension3.barWidth,\n            barMargin = _context$barDimension3.barMargin,\n            barOffset = _context$barDimension3.barOffset,\n            X = _context$barDimension3.X,\n            Y = _context$barDimension3.Y,\n            ticksLength = _context$barDimension3.ticksLength,\n            pixelRatio = _context$barDimension3.pixelRatio,\n            ticksPadding = _context$barDimension3.ticksPadding;\n\n        var rightTicks = (width - barWidth) / 2 + barWidth + ticksPadding * width;\n        var leftTicks = (width - barWidth) / 2 - ticksPadding * width;\n        var sX = void 0,\n            sY = void 0,\n            eX = void 0,\n            eY = void 0;\n\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n\n        lineWidth *= pixelRatio;\n\n        if (isVertical) {\n            sY = Y + length - barMargin - barOffset + lineWidth / 2;\n            eY = sY - ticksLength - lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        } else {\n            sX = X + barMargin + barOffset - lineWidth / 2;\n            eX = sX + ticksLength + lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks stroke\n *\n * @param {Canvas2DContext} context\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n */\nfunction drawLinearTickStroke(context, sX, sY, eX, eY) {\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMinorTicks(context, options) {\n    var _drawings$prepareTick3 = drawings.prepareTicks(options),\n        _drawings$prepareTick4 = _slicedToArray(_drawings$prepareTick3, 2),\n        hasLeft = _drawings$prepareTick4[0],\n        hasRight = _drawings$prepareTick4[1];\n\n    var ticks = [];\n    var i = options.minValue;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var valuePerNonExactTick = minTicks ? (options.maxValue - options.minValue) / (minTicks * (options.majorTicks.length - 1)) : 0;\n\n    if (minTicks) {\n        if (options.exactTicks) {\n            var delta = BaseGauge.mod(options.majorTicks[0], minTicks) || 0;\n\n            for (; i < options.maxValue; i += minTicks) {\n                if (delta + i < options.maxValue) {\n                    ticks.push(delta + i);\n                }\n            }\n        } else {\n            for (; i < options.maxValue; i += valuePerNonExactTick) {\n                ticks.push(i);\n            }\n        }\n    }\n\n    drawLinearTicks(context, options.colorMinorTicks || options.colorStrokeTicks, ticks, options.minValue, options.maxValue, hasLeft, hasRight, 1, options.ticksWidthMinor / 100);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major tick numbers\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicksNumbers(context, options) {\n    var _context$barDimension4 = context.barDimensions,\n        isVertical = _context$barDimension4.isVertical,\n        length = _context$barDimension4.length,\n        width = _context$barDimension4.width,\n        barWidth = _context$barDimension4.barWidth,\n        barMargin = _context$barDimension4.barMargin,\n        barOffset = _context$barDimension4.barOffset,\n        X = _context$barDimension4.X,\n        Y = _context$barDimension4.Y,\n        ticksLength = _context$barDimension4.ticksLength,\n        ticksPadding = _context$barDimension4.ticksPadding;\n\n    var range = options.maxValue - options.minValue;\n    var valuePerNonExactTick = range / (options.majorTicks.length - 1);\n    var tickValues = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n    var ticks = tickValues.length;\n    var hasLeft = options.numberSide !== 'right';\n    var hasRight = options.numberSide !== 'left';\n    var textHeight = options.fontNumbersSize * width / 200;\n    var i = 0;\n    var ticksWidth = (options.ticksWidth / 100 + ticksPadding * 2) * width;\n    var numLeft = (width - barWidth) / 2 - ticksWidth;\n    var numRight = (width - barWidth) / 2 + barWidth + ticksWidth;\n    var textX = void 0,\n        textY = void 0,\n        textWidth = void 0,\n        numberOffset = void 0,\n        tick = void 0;\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(ticks).fill(options.colorNumbers);\n    var textMargin = options.numbersMargin / 100 * width;\n\n    context.font = drawings.font(options, 'Numbers', width / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n\n    for (; i < ticks; i++) {\n        context.fillStyle = colors[i];\n        tick = options.majorTicks[i];\n        numberOffset = options.exactTicks ? ticksLength * ((tickValues[i] - options.minValue) / range) : i * ticksLength / (ticks - 1);\n\n        if (isVertical) {\n            textY = Y + length - barMargin - barOffset - numberOffset + textHeight / 3;\n\n            if (hasLeft) {\n                context.textAlign = 'right';\n                context.fillText(tick, X + numLeft - textMargin, textY);\n            }\n\n            if (hasRight) {\n                context.textAlign = 'left';\n                context.fillText(tick, X + numRight + textMargin, textY);\n            }\n        } else {\n            textWidth = context.measureText(tick).width;\n            textX = X + barMargin + barOffset + numberOffset;\n\n            if (hasLeft) {\n                context.fillText(tick, textX, Y + numLeft - textMargin);\n            }\n\n            if (hasRight) {\n                context.fillText(tick, textX, Y + numRight + textHeight + textMargin);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge title\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearTitle(context, options) {\n    if (!options.title) return;\n\n    var _context$barDimension5 = context.barDimensions,\n        isVertical = _context$barDimension5.isVertical,\n        width = _context$barDimension5.width,\n        length = _context$barDimension5.length,\n        baseX = _context$barDimension5.baseX,\n        baseY = _context$barDimension5.baseY,\n        titleMargin = _context$barDimension5.titleMargin;\n\n    var textHeight = options.fontTitleSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + titleMargin / 2 - (isVertical ? textHeight : textHeight / 2) - 0.025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = drawings.font(options, 'Title', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.title, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge units\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearUnits(context, options) {\n    if (!options.units) return;\n\n    var _context$barDimension6 = context.barDimensions,\n        isVertical = _context$barDimension6.isVertical,\n        width = _context$barDimension6.width,\n        length = _context$barDimension6.length,\n        baseX = _context$barDimension6.baseX,\n        baseY = _context$barDimension6.baseY,\n        unitsMargin = _context$barDimension6.unitsMargin;\n\n    var textHeight = options.fontUnitsSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + (isVertical ? length : width) + unitsMargin / 2 - textHeight / 2);\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorUnits;\n    context.font = drawings.font(options, 'Units', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.units, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge needles\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarNeedle(context, options) {\n    if (!options.needle) return;\n\n    var _context$barDimension7 = context.barDimensions,\n        isVertical = _context$barDimension7.isVertical,\n        width = _context$barDimension7.width,\n        length = _context$barDimension7.length,\n        barWidth = _context$barDimension7.barWidth,\n        barOffset = _context$barDimension7.barOffset,\n        barMargin = _context$barDimension7.barMargin,\n        ticksLength = _context$barDimension7.ticksLength,\n        X = _context$barDimension7.X,\n        Y = _context$barDimension7.Y,\n        ticksPadding = _context$barDimension7.ticksPadding;\n\n    var hasLeft = options.needleSide !== 'right';\n    var hasRight = options.needleSide !== 'left';\n    var position = ticksLength * (drawings.normalizedValue(options).indented - options.minValue) / (options.maxValue - options.minValue);\n    var tickWidth = (options.ticksWidth / 100 + ticksPadding) * width;\n    var baseLength = barWidth / 2 + tickWidth;\n    var needleLength = baseLength * (options.needleEnd / 100);\n    var sX = void 0,\n        eX = void 0,\n        sY = void 0,\n        eY = void 0;\n    var draw = options.needleType.toLowerCase() === 'arrow' ? drawLinearArrowNeedle : drawLinearLineNeedle;\n    var barStart = (width - barWidth) / 2;\n    var needleStart = baseLength * (options.needleStart / 100);\n    var nLeft = barStart - tickWidth - needleStart;\n    var nRight = barStart + barWidth + tickWidth + needleStart;\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        sY = round(Y + length - barMargin - barOffset - position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nLeft);\n            eX = sX + needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nRight);\n            eX = sX - needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength, true);\n        }\n    } else {\n        //noinspection JSUnresolvedFunction\n        sX = round(X + barMargin + barOffset + position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nLeft);\n            eY = sY + needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nRight);\n            eY = sY - needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength, true);\n        }\n    }\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns needle color style\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} length\n * @param {boolean} [isRight]\n * @return {CanvasGradient|string}\n */\nfunction needleStyle(context, options, length, isRight) {\n    return options.colorNeedleEnd ? drawings.linearGradient(context, isRight ? options.colorNeedleEnd : options.colorNeedle, isRight ? options.colorNeedle : options.colorNeedleEnd, length, !context.barDimensions.isVertical) : options.colorNeedle;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws line needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n * @param {boolean} [isRight]\n */\nfunction drawLinearLineNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    context.lineWidth = options.needleWidth;\n    context.strokeStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws arrow needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n * @param {boolean} [isRight]\n */\nfunction drawLinearArrowNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    //noinspection JSUnresolvedFunction\n    var peakLength = round(length * 0.4);\n    var bodyLength = length - peakLength;\n    var isVertical = sX === eX;\n    var halfWidth = options.needleWidth / 2;\n\n    context.fillStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n\n    if (isVertical) {\n        if (sY > eY) bodyLength *= -1;\n\n        context.moveTo(sX - halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY + bodyLength);\n        context.lineTo(sX, eY);\n        context.lineTo(sX - halfWidth, sY + bodyLength);\n        context.lineTo(sX - halfWidth, sY);\n    } else {\n        if (sX > eX) bodyLength *= -1;\n\n        context.moveTo(sX, sY - halfWidth);\n        context.lineTo(sX, sY + halfWidth);\n        context.lineTo(sX + bodyLength, sY + halfWidth);\n        context.lineTo(eX, sY);\n        context.lineTo(sX + bodyLength, sY - halfWidth);\n        context.lineTo(sX, sY - halfWidth);\n    }\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws value box for linear gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} value\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearValueBox(context, options, value, x, y, w, h) {\n    // currently value box is available only for vertical linear gauge,\n    // as far as by design it is hard to find a proper place for\n    // horizontal ones\n    var boxWidth = (parseFloat(options.fontValueSize) || 0) * w / 200;\n    var dy = (0.11 * h - boxWidth) / 2;\n\n    context.barDimensions.isVertical && drawings.drawValueBox(context, options, value, x + w / 2, y + h - boxWidth - dy, w);\n}\n\n/**\n * Minimalistic HTML5 Canvas Linear Gauge\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\n     * Fired each time before gauge plate is drawn\n     *\n     * @event LinearGauge#beforePlate\n     */\n\n    /**\n     * Fired each time before gauge highlight areas are drawn\n     *\n     * @event LinearGauge#beforeHighlights\n     */\n\n    /**\n     * Fired each time before gauge minor ticks are drawn\n     *\n     * @event LinearGauge#beforeMinorTicks\n     */\n\n    /**\n     * Fired each time before gauge major ticks are drawn\n     *\n     * @event LinearGauge#beforeMajorTicks\n     */\n\n    /**\n     * Fired each time before gauge tick numbers are drawn\n     *\n     * @event LinearGauge#beforeNumbers\n     */\n\n    /**\n     * Fired each time before gauge title is drawn\n     *\n     * @event LinearGauge#beforeTitle\n     */\n\n    /**\n     * Fired each time before gauge units text is drawn\n     *\n     * @event LinearGauge#beforeUnits\n     */\n\n    /**\n     * Fired each time before gauge bar area is drawn\n     *\n     * @event LinearGauge#beforeBar\n     */\n\n    /**\n     * Fired each time before gauge progress bar is drawn\n     *\n     * @event LinearGauge#beforeProgressBar\n     */\n\n    /**\n     * Fired each time before gauge value box is drawn\n     *\n     * @event LinearGauge#beforeValueBox\n     */\n\n    /**\n     * Fired each time before gauge needle is drawn\n     *\n     * @event LinearGauge#beforeNeedle\n     */\n\n    /**\n     * @constructor\n     * @param {LinearGaugeOptions} options\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (LinearGauge.__proto__ || Object.getPrototypeOf(LinearGauge)).call(this, LinearGauge.configure(options)));\n    }\n\n    /**\n     * Checks and updates gauge options properly\n     *\n     * @param {*} options\n     * @return {*}\n     * @access protected\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n\n\n        /* istanbul ignore next */\n        /**\n         * Triggering linear gauge render on a canvas.\n         *\n         * @returns {LinearGauge}\n         */\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref2 = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight],\n                    x = _ref2[0],\n                    y = _ref2[1],\n                    w = _ref2[2],\n                    h = _ref2[3];\n\n                var options = this.options;\n\n                if (!canvas.elementClone.initialized) {\n                    var context = canvas.contextClone;\n\n                    // clear the cache\n                    context.clearRect(x, y, w, h);\n                    context.save();\n\n                    this.emit('beforePlate');\n                    this.drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                    this.emit('beforeBar');\n                    drawLinearBar.apply(undefined, [context, options].concat(_toConsumableArray(this.drawBox)));\n\n                    canvas.context.barDimensions = context.barDimensions;\n\n                    this.emit('beforeHighlights');\n                    drawLinearBarHighlights(context, options);\n                    this.emit('beforeMinorTicks');\n                    drawLinearMinorTicks(context, options);\n                    this.emit('beforeMajorTicks');\n                    drawLinearMajorTicks(context, options);\n                    this.emit('beforeNumbers');\n                    drawLinearMajorTicksNumbers(context, options);\n                    this.emit('beforeTitle');\n                    drawLinearTitle(context, options);\n                    this.emit('beforeUnits');\n                    drawLinearUnits(context, options);\n\n                    canvas.elementClone.initialized = true;\n                }\n\n                this.canvas.commit();\n\n                // clear the canvas\n                canvas.context.clearRect(x, y, w, h);\n                canvas.context.save();\n\n                canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                canvas.context.save();\n\n                this.emit('beforeProgressBar');\n                drawLinearBarProgress.apply(undefined, [canvas.context, options].concat(_toConsumableArray(this.drawBox)));\n                this.emit('beforeNeedle');\n                drawLinearBarNeedle(canvas.context, options);\n                this.emit('beforeValueBox');\n                drawLinearValueBox.apply(undefined, [canvas.context, options, options.animatedValue ? this.options.value : this.value].concat(_toConsumableArray(this.drawBox)));\n\n                _get(LinearGauge.prototype.__proto__ || Object.getPrototypeOf(LinearGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            /* istanbul ignore else */\n            if (options.barStrokeWidth >= options.barWidth) {\n                //noinspection JSUnresolvedFunction\n                options.barStrokeWidth = round(options.barWidth / 2);\n            }\n\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasLeft = hasTicksBar('right', options);\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasRight = hasTicksBar('left', options);\n\n            if (options.value > options.maxValue) {\n                options.value = options.maxValue;\n            }\n\n            if (options.value < options.minValue) {\n                options.value = options.minValue;\n            }\n\n            return BaseGauge.configure(options);\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['LinearGauge'] = LinearGauge;\n}\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);;typeof module !== \"undefined\" && Object.assign(ns, {Collection: Collection,GenericOptions: GenericOptions,Animation: Animation,BaseGauge: BaseGauge,drawings: drawings,SmartCanvas: SmartCanvas,DomObserver: DomObserver,vendorize: vendorize});}(typeof module !== \"undefined\" ? module.exports : window));"]}